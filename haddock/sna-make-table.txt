-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/githubuser/V#readme</a>
@package sna-make-table
@version 0.1.0.0


-- | <ul>
--   <li>V表作表のためのデータ型や基本的なデータ型や,処理用の関数をまとめたモジュール</li>
--   <li>表記を統一するために日本語を使っているので、等幅フォント推奨</li>
--   <li>エンコーディングに関して<pre>入出力も含めてすべてUTF-8で統一する
--   Windowsでの起動は想定していないの，Dockerを利用して，Linux上で動かすこと Docker for Windows
--   を利用する場合はchcp 65001をしないとTemplateHaskell部分のコンパイルが通らない． Docker tool box
--   はUTF-8 対応で死ぬので使わない．</pre></li>
--   <li>Read に関して<pre>すべてRead型のInstans
--   となっているが，read関数は遅すぎるのでparserで読むこと．</pre></li>
--   <li>コメントに関して</li>
--   </ul>
--   
--   <pre>
--   Haddock 前提
--   </pre>
--   
--   <ul>
--   <li>- &gt; Error でタグ付けして，問題点指摘</li>
--   </ul>
module VTable.Data.Structure
type Year = Int

-- | デバッグ用のMap.lookup
lookupErr :: (Ord a, Show a) => a -> Map a b -> b

-- | Parallel map
parMap :: (a -> b) -> [a] -> Eval [b]

-- | Parallel Map Strict
parMapStrict :: NFData b => (a -> b) -> [a] -> Eval [b]

-- | Parallel mapM_
parMapM_ :: Monad m => (a1 -> m a2) -> [a1] -> m ()
parMapM :: Monad m => (a1 -> m a2) -> [a1] -> m [a2]

-- | Parallel forM_ only for ST
parForMST_ :: [a] -> (a -> ST s a1) -> ST s ()

-- | Parallel forM_ only for IO
parForMIO_ :: [a] -> (a -> IO a1) -> IO ()
multi :: (a -> a) -> Int -> a -> a
fastReadInt :: String -> Int
fastReadDouble :: String -> Double
noneOf :: Foldable t => t Char -> Parser Char
cell :: Parser Text Text
quotedCell :: Parser Text [Char]
quotedChar :: Parser Text Char

-- | ファイル形式 経済センサスのデータは調査票別年度別(24,28年)に32種類に分類される. センサスデータを読み込むための情報
--   センサスのヘッダーを総務省，経産省ともにすべて統一する
data FileType

-- | 28年共通項目
SB28 :: FileType

-- | 28年農林漁業
SC28 :: FileType

-- | 28年鉱業
SD28 :: FileType

-- | 28年製造業
SE28 :: FileType

-- | 28年商業
SG28 :: FileType

-- | 28年医療福祉
SH28 :: FileType

-- | 28年学校教育
SJ28 :: FileType

-- | 28年建設サービスA
SK28 :: FileType

-- | 28年サービスB
SM28 :: FileType

-- | 24年共通項目
SB24 :: FileType

-- | 24年農林漁業
SC24 :: FileType

-- | 24年鉱業
SD24 :: FileType

-- | 24年製造業
SE24 :: FileType

-- | 24年商業
SG24 :: FileType

-- | 24年医療福祉
SH24 :: FileType

-- | 24年学校教育
SJ24 :: FileType

-- | 24年建設サービスA
SK24 :: FileType

-- | 24年サービスB
SM24 :: FileType

-- | 28年商業
KC28 :: FileType

-- | 28年鉱業
KM28 :: FileType

-- | 24年全て
K24 :: FileType

-- | 28年全て
K28 :: FileType

-- | 28年製造業産業
KMI28 :: FileType

-- | 28年製造業品目
KMP28 :: FileType

-- | データの提供元
data Dep

-- | 総務省
S :: Dep

-- | 経産省
K :: Dep

-- | データの対象年度を返す
getFileYear :: FileType -> Year

-- | データの提供元を返す
getFileDep :: FileType -> Dep

-- | データの対象産業を返す
getFileInd :: FileType -> E対象産業

-- | データのパスを返す
getRecordFilePath :: FileType -> String

-- | Original Data のHeader情報
type RecordHeader = Text

-- | FileType をもとにHeader情報を取得する
getHeader :: FileType -> [RecordHeader]
hSB28 :: [Text]
hSC28 :: [Text]
hSD28 :: [Text]
hSE28 :: [Text]
hSG28 :: [Text]
hSH28 :: [Text]
hSJ28 :: [Text]
hSK28 :: [Text]
hSM28 :: [Text]
hSB24 :: [Text]
hSC24 :: [Text]
hSD24 :: [Text]
hSE24 :: [Text]
hSG24 :: [Text]
hSH24 :: [Text]
hSJ24 :: [Text]
hSK24 :: [Text]
hSM24 :: [Text]
hK28 :: [Text]
hK24 :: [Text]
hKC28 :: [Text]
hKM28 :: [Text]
hKMI28 :: [Text]
hKMP28 :: [Text]

-- | Fileの末尾を書き換えてConverted.csvのPathを得る
originalToConverted :: FilePath -> FilePath

-- | テストデータ使うときに便利
originalToForTest :: FilePath -> FilePath

-- | ソート済みファイル名に変換
originalToSorted :: FilePath -> FilePath
type RowS = Vector String
type ColS = Vector String
type MatrixS = Vector (Vector String)
type RowT = Vector Text
type ColT = Vector Text
type MatrixT = Vector (Vector Text)
transposeV :: MatrixT -> MatrixT
lenLineV :: MatrixT -> Int
indicesV :: MatrixT -> Int -> RowT
transpose :: [[Text]] -> [[Text]]
lenLine :: [[Text]] -> Int
indices :: [[Text]] -> Int -> [Text]
toMap :: MatrixS -> Either String (Map String String)
trim :: String -> String
isBlank :: String -> Bool

-- | nub
mergenub :: (Ord a, Eq a) => [a] -> Eval [a]
type InputFile = FilePath
type OutputFile = FilePath
type TempFile = FilePath

-- | 異なるファイルの同じ事業所を統合する * 全事業所の番号を取得する * それを与えて,Arrayに全て入れ,Nullを潰していく *
--   重複を更新し,最終的なArrayをCsvに出力 速いが全てのテーブルを読み込むためメモリが足りない
mergeFiles :: OutputFile -> Year -> IO ()

-- | メモリ効率の良い版 各ファイルをソートしたのち， 事業所番号でファイル全体をマージソートして出力
--   上から順に処理して,同じ行がなくなったら出力
--   
--   分割してクイックマージにする Conduitで全ファイル同時に読み込んで処理する など別の方法で高速化したほうが良い.
mergeFilesMemEfficient :: OutputFile -> Year -> IO ()

-- | それぞれのファイルを事業所番号でソートする 配列に読み込んで,直轄企業コードのみ抜き出しソート,インデックスを処理
--   出力ファイル名は自動で,末尾 "Sorted.csv"になる.
sortFile :: InputFile -> IO ()

-- | ソート用に作ったOrdの異なったTurple
data ForSortFile
ForSortFile :: {-# UNPACK #-} !Integer -> {-# UNPACK #-} !Text -> ForSortFile
[fileIndex] :: ForSortFile -> {-# UNPACK #-} !Integer
[enid] :: ForSortFile -> {-# UNPACK #-} !Text

-- | Identification Code 識別コード 直轄企業コードとは別に,全ての行のインデックスでマトリックスを作る
type IC = Integer
type Cell = (Header, IC)

-- | 整理されたデータの形態 * データテーブルの形で,Header × IC
--   
--   メモリのことを考えると,DBの方が良いのだが,初期環境の問題で,こうなっている.
--   
--   完全にサンクコストなので,修正したほうがよい. IMutableArray CensusData
type CensusData = Array Cell Val

-- | MutableArray版のCensusData
type STCensusData s = STArray s Cell Val
type IOCensusData = IOArray Cell Val

-- | Stream 用の CensusData
type CensusRow = Array Header Val
type IOCensusRow = IOArray Header Val

-- | テーブルから要素を抽出する関数
proj :: CensusData -> Cell -> Val

-- | CensusData <a>-</a> CSV の変換を定義する
--   
--   Header を指定して指定されたデータを読み込む
readData :: Header -> [Header] -> [Text] -> Val

-- | CensusData <a>-</a> CSV の変換を定義する
--   
--   最適化用のHeaderをMapにしたバージョン
readDataWithMap :: Header -> Map Header Int -> [Text] -> Val
writeCensus :: FilePath -> CensusData -> IO ()
writeIOCensus :: FilePath -> IOCensusData -> IO ()
readIOCensus :: FilePath -> IO IOCensusData

-- | FileをすべてArray :: CensusData で読み込む
readCensus :: InputFile -> IO CensusData

-- | ファイルからデータを取ってきて,censusRowにするSorce
--   
--   メモリ消費は低いが逐次処理しかできないかつ，遅い
sourceCensus :: MonadResource m => FilePath -> ConduitT a IOCensusRow m ()

-- | Textを受け取って，IOCensusRowに変換するConduit
text2IOCensusRow :: (Monad m, MonadIO m) => Integer -> Map Header Int -> ConduitT Text IOCensusRow m ()

-- | IOCensusRowを出力するSink
--   
--   Double はファイルの最大行数,進捗率を計算する
sinkCensus :: MonadResource m => Double -> FilePath -> ConduitT IOCensusRow Void m ()
sinkFileTL :: MonadIO m => Handle -> ConduitT Text Void m ()

-- | IOCensusRowを受け取ってTextにするConduit
ioCensusRow2Text :: (Monad m, MonadIO m) => Double -> Integer -> ConduitT IOCensusRow Text m ()
unlinesTL :: Monad m => ConduitT Text Text m ()

-- | Converted ファイルに含まれる事業所番号をすべて抽出する（重複なし）
collectAllEstIdx :: [FilePath] -> IO [Text]

-- | センサス個票の調査項目（データのヘッダー） * これでデータを抽出する
data Header

-- | 型 : VText 概要: 直轄企業コード, 名寄せに用いる
H直轄企業コード :: Header

-- | 型 : VText 概要: 事業所番号,事業所の識別に用いる
H事業所番号 :: Header

-- | 型 : 概要: 調査票の種類
H調査票の種類 :: Header

-- | 型 : Double 概要: ［集計用］売上（収入）金額
H総売上 :: Header

-- | 型 : Text 概要: [確定]市区町村コード(所在地)
H地域コード :: Header

-- | 型 : 概要: 経営組織
H経営組織 :: Header

-- | 型 : 概要: 管理補助的業務
H管理補助的業務 :: Header

-- | 型 : 概要: 雇用情報
H雇用情報 :: Header

-- | 型 : 概要: ［事］単独・本所・支所３区分
H単独本所支所区分 :: Header

-- | 型 : Cars 概要: 費用等の内訳
H費用等の内訳 :: Header

-- | 型 : Cars 概要: 生産数量（鉱業）
H生産_鉱業_数量 :: Header

-- | 型 : Cars 概要: 生産金額（鉱業）
H生産_鉱業_金額 :: Header

-- | 型 : Cars 概要: 生産金額（農林水産業）
H生産_農林漁業_金額 :: Header

-- | 型 : Cars 概要: 商品卸売額
H商品別卸売額 :: Header

-- | 型 : Cars 概要: 年間商品小売額
H商品別小売額 :: Header

-- | 型 : 概要: 医療福祉の事業収入
H事業収入_医療福祉 :: Header

-- | 型 : 概要: 事業所の形態（医療福祉）
H事業所形態_医療福祉 :: Header

-- | 型 : Cars 概要: 製造品出荷額
H出荷額_製造業 :: Header

-- | 型 : Cars 概要: 製造品在庫額
H在庫額_製造業 :: Header

-- | 型 : Cars 概要: 加工賃収入額
H収入額_加工賃 :: Header

-- | 型 : Cars 概要: 製造業以外の収入金額
H収入額_製造業以外 :: Header

-- | 型 : VDouble 概要: 原材料,燃料,電力の使用額,受託生産費,製造等に関連する外注費
H原材料使用額 :: Header

-- | 型 : Cars 概要: 学校種類別収入内訳
H収入内訳_学校 :: Header

-- | 型 : VText 概要: 事業所調査票における学校糖の種類
H学校等の種類 :: Header

-- | 型 : Double
H年初製造品在庫額 :: Header

-- | 型 : Double
H年末製造品在庫額 :: Header

-- | 型 : Double
H年初半製品及び仕掛品 :: Header

-- | 型 : Double
H年末半製品及び仕掛品 :: Header

-- | 型 : Cars
H事業収入_サB :: Header

-- | 型 : Cars 概要: リース年間契約高
H商品別リース契約高 :: Header

-- | 型 : Cars 概要: レンタル年間売上高
H商品別レンタル売上高 :: Header

-- | 型 : Double 概要: レンタル年間総売上高
Hレンタル総売上高 :: Header

-- | 型 : Double 概要: リース年間総契約高
Hリース年間契約高 :: Header

-- | 型 : E相手先別収入割合 概要: サービス関連産業Bの相手先別収入割合
H相手先別収入割合_サB :: Header

-- | 型 : VDouble
H同業者割合_サB :: Header

-- | 型 : E相手先別収入割合 概要: 医療福祉の相手先別収入割合
H相手先別収入割合_医療福祉 :: Header

-- | 型 : Cars 概要: 商品販売に関するその他の収入額 内 修理手数料収入
H修理手数料収入_商業 :: Header

-- | 型 : Double 概要: 商品販売に関するその他の収入額 内 仲立手数料収入
H仲立手数料収入_商業 :: Header

-- | 型 : VDouble 概要: 商品売上原価
H商品売上原価 :: Header

-- | 型 : VDouble 概要: 年初商品手持額
H年初商品手持額 :: Header

-- | 型 : VDouble 概要: 年末商品手持額
H年末商品手持額 :: Header

-- | 型 : VDouble 概要: 年間所品仕入額
H年間仕入額 :: Header

-- | 型 : Int 概要: 調査年度
H対象年度 :: Header

-- | 型 : Bool 概要: 消費税込記入の別
H消費税記入の別 :: Header

-- | 型 : Cars 概要: 事業別売上高
H事業別売上高 :: Header

-- | 型 : Double 概要: 製造品出荷額等に占める直接輸出額の割合
H輸出割合 :: Header

-- | 型 : BusinessStyle 概要: 事業の形態
H事業形態 :: Header

-- | 型 : E産業格付 概要: デフォルトの産業格付け
H事前格付_事業所 :: Header

-- | 型 : E産業格付 概要: デフォルトの産業格付け
H事前格付_企業 :: Header

-- | 型 : VText 概要: サA事業所調査票の事業選択
H主な事業の種類 :: Header

-- | 型 : E産業格付
H産業格付 :: Header

-- | 型 : Bool 概要: 信用・共済事業の有無
H信用共済事業の有無 :: Header

-- | 型 : 概要:
H協同組合の種類 :: Header

-- | 型 : E団体の種類
H団体の種類 :: Header

-- | 型 : Double
H8時間換算雇用者数_サB :: Header

-- | 型 : Double
H8時間換算雇用者数_商業 :: Header

-- | 型 : Double
H売場面積 :: Header

-- | 型 : Bool
Hセルフサービス :: Header

-- | 型 : Int
H開店閉店期間 :: Header

-- | 型 : E販売形態
H販売形態 :: Header

-- | 型 : E商品形態
H商品形態 :: Header

-- | 型 : E店舗形態
H店舗形態_商業 :: Header

-- | 型 : VText
H店舗形態_サB :: Header

-- | 型 : Cars 概要: 事業収入1ー10位
H事業収入_建サA :: Header

-- | 型 : E工事種類 概要: 業態別工事種類
H工事種類 :: Header

-- | 型 : VInt 概要: 1 - 19 のInt
H金融業保険業の事業種類 :: Header

-- | 型 : Cars 概要:
H事業所別生産物別売上高 :: Header

-- | 型 : Double 使用しない
H年初原材料及び燃料 :: Header

-- | 型 : Double 使用しない
H年末原材料及び燃料 :: Header

-- | 型 : 使用しない 概要: 年間商品販売額が多い部門
H商品販売額最多部門 :: Header
parserHeader :: Parser Text Header
headerList :: [Header]
outputHeader :: Text

-- | Read が遅すぎるのでHeaderの読み込みはこちらのパーサーを用いる．
--   
--   Exhausive pattern Errorが出る場合 Win (rn) <a>-</a> Unix 系
--   での改行コードのエラーでCSVのパースができてない可能性が高い.
parseHeader :: Text -> Header

-- | 変換される値は全てVal型に統一
--   
--   <ul>
--   <li>E型のデータ型をV型でラップ</li>
--   <li>アンダーバーで抽出</li>
--   </ul>
data Val
Null :: Val
VInt :: {-# UNPACK #-} !Int -> Val
[int] :: Val -> {-# UNPACK #-} !Int
VDouble :: {-# UNPACK #-} !Double -> Val
[double] :: Val -> {-# UNPACK #-} !Double
VText :: {-# UNPACK #-} !Text -> Val
[text] :: Val -> {-# UNPACK #-} !Text
VBool :: {-# UNPACK #-} !Bool -> Val
[bool] :: Val -> {-# UNPACK #-} !Bool
VCars :: !Cars -> Val
[cars] :: Val -> !Cars
V調査票の種類 :: {-# UNPACK #-} !E調査票の種類 -> Val
[_調査票の種類] :: Val -> {-# UNPACK #-} !E調査票の種類
V管理補助的業務 :: {-# UNPACK #-} !E管理補助的業務 -> Val
[_管理補助的業務] :: Val -> {-# UNPACK #-} !E管理補助的業務
V雇用情報 :: {-# UNPACK #-} !E雇用情報 -> Val
[_雇用情報] :: Val -> {-# UNPACK #-} !E雇用情報
V産業格付 :: {-# UNPACK #-} !E産業格付 -> Val
[_産業格付] :: Val -> {-# UNPACK #-} !E産業格付
V事業形態 :: {-# UNPACK #-} !E事業形態 -> Val
[_事業形態] :: Val -> {-# UNPACK #-} !E事業形態
V経営組織 :: {-# UNPACK #-} !E経営組織 -> Val
[_経営組織] :: Val -> {-# UNPACK #-} !E経営組織
V単独本所支所区分 :: {-# UNPACK #-} !E単独本所支所区分 -> Val
[_単独本所支所区分] :: Val -> {-# UNPACK #-} !E単独本所支所区分
V商品販売額最多部門 :: {-# UNPACK #-} !E商品販売額最多部門 -> Val
[_商品販売額最多部門] :: Val -> {-# UNPACK #-} !E商品販売額最多部門
V事業所形態_医療福祉 :: {-# UNPACK #-} !E事業所形態_医療福祉 -> Val
[_事業所形態_医療福祉] :: Val -> {-# UNPACK #-} !E事業所形態_医療福祉
V事業収入_医療福祉 :: {-# UNPACK #-} !E事業収入_医療福祉 -> Val
[_事業収入_医療福祉] :: Val -> {-# UNPACK #-} !E事業収入_医療福祉
V団体の種類 :: {-# UNPACK #-} !E団体の種類 -> Val
[_団体の種類] :: Val -> {-# UNPACK #-} !E団体の種類
V協同組合の種類 :: {-# UNPACK #-} !E協同組合の種類 -> Val
[_協同組合の種類] :: Val -> {-# UNPACK #-} !E協同組合の種類
V相手先別収入割合 :: {-# UNPACK #-} !E相手先別収入割合 -> Val
[_相手先別収入割合] :: Val -> {-# UNPACK #-} !E相手先別収入割合
V店舗形態_商業 :: {-# UNPACK #-} !E店舗形態_商業 -> Val
[_店舗形態_商業] :: Val -> {-# UNPACK #-} !E店舗形態_商業
V販売形態 :: {-# UNPACK #-} !E販売形態 -> Val
[_販売形態] :: Val -> {-# UNPACK #-} !E販売形態
V商品形態 :: {-# UNPACK #-} !E商品形態 -> Val
[_商品形態] :: Val -> {-# UNPACK #-} !E商品形態
V工事種類 :: {-# UNPACK #-} !E工事種類 -> Val
[_工事種類] :: Val -> {-# UNPACK #-} !E工事種類
parserNull :: Parser Val
parserVInt :: Parser ValInt
parserVDouble :: Parser ValDouble
parserVText :: Parser ValText
parserVBool :: Parser ValBool
parserVCars :: Parser ValCars

-- | Val のコンストラクタごとのパーサーを指定してパースする
parserVJap :: String -> Parser a -> (a -> Val) -> Parser Val
parserV調査票の種類 :: Parser Val
parserV管理補助的業務 :: Parser Val
parserV雇用情報 :: Parser Val
parserV産業格付 :: Parser Val
parserV事業形態 :: Parser Val
parserV経営組織 :: Parser Val
parserV単独本所支所区分 :: Parser Val
parserV商品販売額最多部門 :: Parser Val
parserV事業所形態_医療福祉 :: Parser Val
parserV事業収入_医療福祉 :: Parser Val
parserV団体の種類 :: Parser Val
parserV協同組合の種類 :: Parser Val
parserV相手先別収入割合 :: Parser Val
parserV店舗形態_商業 :: Parser Val
parserV販売形態 :: Parser Val
parserV商品形態 :: Parser Val
parserV工事種類 :: Parser Val

-- | Read が遅すぎるのでValの読み込みはこちらのパーサーを用いる．
parserVal :: Parser Text Val

-- | Read が遅すぎるのでValの読み込みはこちらのパーサーを用いる．
--   
--   Exhausive pattern Errorが出る場合 Win (rn) <a>-</a> Unix 系
--   での改行コードのエラーでCSVのパースができてない可能性が高い
parseVal :: Text -> Val
type ValInt = Val
type Val開店閉店期間 = Val
type ValDouble = Val
type Valリース年間契約高 = Val
type Valレンタル総売上高 = Val
type Val原材料使用額 = Val
type Val売場面積 = Val
type Val修理手数料収入_商業 = Val
type Val仲立手数料収入_商業 = Val
type Val輸出割合 = Val
type Val同業者割合_サB = Val
type Val総売上 = Val
type Val年末製造品在庫額 = Val
type Val年初製造品在庫額 = Val
type ValText = Val
type Val学校等の種類 = Val
type Val金融業保険業の事業種類 = Val
type Val主な事業の種類 = Val
type Val店舗形態_サB = Val
type Val直轄企業コード = Val
type Val地域コード = Val

-- | NullかVTextかという状況で使用する
--   
--   No match in record selector text
textWithNull :: Val -> Text
type ValBool = Val
type Val信用共済事業の有無 = Val
type Valセルフサービス = Val
type ValCars = Val
type Val事業別売上高 = Val
type Val事業所別生産物別売上高 = Val
type Val生産_鉱業_数量 = Val
type Val生産_鉱業_金額 = Val
type Val生産_農林漁業_金額 = Val
type Val収入内訳_学校 = Val
type Val費用等の内訳 = Val
type Val収入額_製造業以外 = Val
type Val収入額_加工賃 = Val
type Val出荷額_製造業 = Val
type Val商品別卸売額 = Val
type Val商品別小売額 = Val
type Val事業収入_建サA = Val
type Val事業収入_サB = Val
type Val商品別レンタル売上高 = Val
type Val商品別リース契約高 = Val
type Val在庫額_製造業 = Val
type Cars事業別売上高 = Cars
type Cars事業所別生産物別売上高 = Cars
type Cars生産_鉱業_数量 = Cars
type Cars生産_鉱業_金額 = Cars
type Cars生産_農林漁業_金額 = Cars
type Cars収入内訳学校_学校 = Cars
type Cars費用等の内訳 = Cars
type Cars収入額_製造業以外 = Cars
type Cars収入額_加工賃 = Cars
type Cars出荷額_製造業 = Cars
type Cars商品別卸売額 = Cars
type Cars商品別小売額 = Cars
type Cars事業収入_建サA = Cars
type Cars事業収入_サB = Cars
type Cars商品別レンタル売上高 = Cars
type Cars商品別リース契約高 = Cars
type Cars在庫額_製造業 = Cars
type Val産業格付 = Val
type Val事前格付_企業 = Val
type Val事前格付_事業所 = Val
type Val調査票の種類 = Val
type Val管理補助的業務 = Val
type Val雇用情報 = Val
type Val事業形態 = Val
type Val経営組織 = Val
type Val単独本所支所区分 = Val
type Val商品販売額最多部門 = Val
type Val事業所形態_医療福祉 = Val
type Val事業収入_医療福祉 = Val
type Val団体の種類 = Val
type Val協同組合の種類 = Val
type Val店舗形態_商業 = Val
type Val販売形態 = Val
type Val商品形態 = Val
type Val工事種類 = Val
type Val相手先別収入割合 = Val
type Val相手先別収入割合_サB = Val
type Val相手先別収入割合_医療福祉 = Val

-- | 経済センサスの調査票には，平成24，28年共に，「市区町村コード，調査区番号，事業所番号，＊コード」が記載されており，
--   同一企業に属する支所等は全て同一のコードを持つ．
--   
--   この事業所コードとは別に，企業内において連番される2桁の整理番号が存在し， これらのコードを全て併せて「直轄企業コード」と呼ぶ．
--   直轄企業コードは全事業所にそれぞれ固有であり，且つ，各事業所がどの企業に属するのかを判別することを可能にする．
type E直轄企業コード = Text

-- | 企業調査票においては,企業雇用者数, 企業個人事業者数, 企業事業従業者数が, 事業所調査票においては, 事業所雇用者数, 事業所雇用者数,
--   事業所事業従業者数が推計において利用される.
data E雇用情報
E雇用情報 :: {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> {-# UNPACK #-} !Int -> E雇用情報
[_企雇用者数] :: E雇用情報 -> {-# UNPACK #-} !Int
[_企個人事業主] :: E雇用情報 -> {-# UNPACK #-} !Int
[_企事業従業者数] :: E雇用情報 -> {-# UNPACK #-} !Int
[_事雇用者数] :: E雇用情報 -> {-# UNPACK #-} !Int
[_事個人事業主] :: E雇用情報 -> {-# UNPACK #-} !Int
[_事事業従業者数] :: E雇用情報 -> {-# UNPACK #-} !Int
parserE雇用情報 :: Parser Text E雇用情報
data E事業形態

-- | 主に製造して出荷又は卸売
E製造卸売 :: E事業形態

-- | 主に製造して通信販売・ネット販売等で小売
E製造遠隔小売 :: E事業形態

-- | 主に他の業者から支給された原材料により製造・加工
E加工 :: E事業形態

-- | 主に同一企業の他の事業所で製造・加工した物品を卸売
E自企業卸売 :: E事業形態

-- | 主に他企業の事業所（下請先も含む）で生産・加工した物品を卸売
E他企業卸売 :: E事業形態

-- | 主に製造してその場所で小売
E製造小売 :: E事業形態

-- | 主に他の事業所から仕入れた商品を店舗で小売
E店頭小売 :: E事業形態

-- | 主に仕入れた商品を店舗を持たずに通信販売・ネット販売・訪問販売等で小売
E遠隔小売 :: E事業形態

-- | 主に調理済みの料理品を小売
E食品小売 :: E事業形態

-- | 主に顧客の注文で調理する料理品を提供（配達を含む）
E料理配達 :: E事業形態

-- | 土木工事の施工額が、施工額全体の80％以上
E土木 :: E事業形態

-- | 建築工事の施工額が、施工額全体の80％以上
E建築 :: E事業形態

-- | 土木工事と建築工事の施工額がいずれも施工額全体の80％未満
E工事 :: E事業形態
parserE事業形態 :: Parser Text E事業形態

-- | 事業所調査票における調査項目「管理・補助的業務」では，
--   事業所が管理補助的業務を行っている場合には，「管理運営業務，補助的業務，自家用倉庫」から選択する形式の調査を行っている．
--   経済センサス分類においては，特殊な項目として，
--   「主として管理事務を行う本社等」，「その他の管理，補助的経済活動を行う事業所」，「自家用倉庫」が存在し，
--   これらの項目への産業格付けにおいて利用される．
data E管理補助的業務
E管理補助的業務 :: E管理補助的業務
E補助的業務 :: E管理補助的業務
E自家用倉庫 :: E管理補助的業務
parserE管理補助的業務 :: Parser Text E管理補助的業務
data E経営組織
E個人経営 :: E経営組織
E株式会社 :: E経営組織
E合名会社 :: E経営組織
E合同会社 :: E経営組織
E会社以外の法人 :: E経営組織
E外国の会社 :: E経営組織
E法人でない団体 :: E経営組織
parserE経営組織 :: Parser Text E経営組織
data E単独本所支所区分
E単独事業所 :: E単独本所支所区分
E本所 :: E単独本所支所区分
E支所 :: E単独本所支所区分
parserE単独本所支所区分 :: Parser Text E単独本所支所区分
type Goods_name = Text
type Goods_code = Text

-- | 事業所/企業に格付けられた産業を表す．調査票上に項目はなく， 他の情報から「4.1.1.5章
--   産業格付け」において説明される産業格付け処理を経て決定されるパラメーター
data E産業格付
E産業格付 :: {-# UNPACK #-} !Goods_code -> {-# UNPACK #-} !Goods_code -> {-# UNPACK #-} !Goods_code -> {-# UNPACK #-} !Goods_code -> {-# UNPACK #-} !Goods_code -> {-# UNPACK #-} !Goods_code -> E産業格付
[_大分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
[_15分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
[_中分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
[_小分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
[_35分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
[_細分類] :: E産業格付 -> {-# UNPACK #-} !Goods_code
parserE産業格付 :: Parser Text E産業格付
data E調査票
E単独事業所調査票 :: E調査票
E産業共通調査票 :: E調査票
E企業調査票 :: E調査票
E事業所調査票 :: E調査票
E団体調査票 :: E調査票
E個人経営調査票 :: E調査票
parserE調査票 :: Parser Text E調査票
data E対象産業
E産業なし :: E対象産業
E農林漁業 :: E対象産業
E鉱業 :: E対象産業
E製造業 :: E対象産業
E商業 :: E対象産業
E医療福祉 :: E対象産業
E学校教育 :: E対象産業
E協同組合 :: E対象産業
EサービスB :: E対象産業
E共通 :: E対象産業
E建設サービスA :: E対象産業
E団体 :: E対象産業
E建設サービスA学校 :: E対象産業
E全産業 :: E対象産業
parserE対象産業 :: Parser Text E対象産業
data E回答主体
E個人経営者用 :: E回答主体
E団体法人用 :: E回答主体
E指定なし :: E回答主体
parserE回答主体 :: Parser Text E回答主体
data E調査票の種類
E調査票の種類 :: {-# UNPACK #-} !E調査票 -> {-# UNPACK #-} !E対象産業 -> {-# UNPACK #-} !E回答主体 -> E調査票の種類
[_調査票] :: E調査票の種類 -> {-# UNPACK #-} !E調査票
[_対象産業] :: E調査票の種類 -> {-# UNPACK #-} !E対象産業
[_回答主体] :: E調査票の種類 -> {-# UNPACK #-} !E回答主体

-- | <pre>
--   &gt;&gt;&gt; parseTest parserE調査票の種類 $ T.pack $ ushow $ E調査票の種類 E単独事業所調査票 E団体 E指定なし
--   
--   &gt;&gt;&gt; Done "" (E調査票の種類 {_調査票 = E単独事業所調査票, _対象産業 = E団体, _回答主体 = E指定なし})
--   </pre>
parserE調査票の種類 :: Parser Text E調査票の種類

-- | 年間商品販売額が多い部門
data E商品販売額最多部門
E小売 :: E商品販売額最多部門
E卸売 :: E商品販売額最多部門
parserE商品販売額最多部門 :: Parser Text E商品販売額最多部門

-- | 医療事業形態における7区分
data E事業収入_医療福祉
E事業収入_医療福祉 :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> E事業収入_医療福祉
[_保険診療収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_保険外診療収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_施設介護収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_通所介護訪問介護収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_社会保険事業収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_保健衛生事業収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
[_社会福祉事業収入] :: E事業収入_医療福祉 -> {-# UNPACK #-} !Double
parserE事業収入_医療福祉 :: Parser Text E事業収入_医療福祉

-- | 医療事業形態における32区分
data E事業所形態_医療福祉
E一般病院 :: E事業所形態_医療福祉
E精神科病院 :: E事業所形態_医療福祉
E有床診療所 :: E事業所形態_医療福祉
E無床診療所 :: E事業所形態_医療福祉
E歯科診療所 :: E事業所形態_医療福祉
E助産所助産師業 :: E事業所形態_医療福祉
E看護業 :: E事業所形態_医療福祉
E施術業 :: E事業所形態_医療福祉
Eその他の療養所 :: E事業所形態_医療福祉
E歯科技工所 :: E事業所形態_医療福祉
Eその他の医療に附帯するサービス業 :: E事業所形態_医療福祉
E結核健康相談施設 :: E事業所形態_医療福祉
E精神保健相談施設 :: E事業所形態_医療福祉
E母子健康相談施設 :: E事業所形態_医療福祉
Eその他の健康相談施設 :: E事業所形態_医療福祉
E検査業 :: E事業所形態_医療福祉
E消毒業 :: E事業所形態_医療福祉
Eその他の保健衛生 :: E事業所形態_医療福祉
E社会保険事業団体 :: E事業所形態_医療福祉
E保育所 :: E事業所形態_医療福祉
Eその他の児童福祉事業 :: E事業所形態_医療福祉
E特別養護老人ホーム :: E事業所形態_医療福祉
E介護老人保健施設 :: E事業所形態_医療福祉
E通所短期入所介護事業 :: E事業所形態_医療福祉
E訪問介護事業 :: E事業所形態_医療福祉
E認知症老人グループホーム :: E事業所形態_医療福祉
E有料老人ホーム :: E事業所形態_医療福祉
Eその他の老人福祉介護事業 :: E事業所形態_医療福祉
E居住支援事業 :: E事業所形態_医療福祉
Eその他の障碍者福祉事業 :: E事業所形態_医療福祉
E更生保護事業 :: E事業所形態_医療福祉
Eその他の社会保険社会福祉介護事業 :: E事業所形態_医療福祉
parserE事業所形態_医療福祉 :: Parser Text E事業所形態_医療福祉
parseE事業所形態_医療福祉 :: Text -> E事業所形態_医療福祉
data E団体の種類
E政治団体 :: E団体の種類
E経済団体 :: E団体の種類
E労働団体 :: E団体の種類
E学術団体文化団体 :: E団体の種類
Eその他の団体 :: E団体の種類
E神道系宗教 :: E団体の種類
E仏教系宗教 :: E団体の種類
Eキリスト教系宗教 :: E団体の種類
Eその他の宗教 :: E団体の種類
parserE団体の種類 :: Parser Text E団体の種類
parseE団体の種類 :: Text -> E団体の種類
data E協同組合の種類
E農業協同組合 :: E協同組合の種類
E漁業協同組合 :: E協同組合の種類
E水産加工協同組合 :: E協同組合の種類
E森林組合 :: E協同組合の種類

-- | 平成28年は,その他の事業協同組合と事業協同組合が統合
E事業協同組合 :: E協同組合の種類
E協同組合以外 :: E協同組合の種類
Eその他の事業協同組合 :: E協同組合の種類
parserE協同組合の種類 :: Parser Text E協同組合の種類
parseE協同組合の種類 :: Text -> E協同組合の種類
data E相手先別収入割合
E相手先別収入割合 :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> E相手先別収入割合
[_一般消費者] :: E相手先別収入割合 -> {-# UNPACK #-} !Double
[_民間企業] :: E相手先別収入割合 -> {-# UNPACK #-} !Double
[_官公庁] :: E相手先別収入割合 -> {-# UNPACK #-} !Double
[_海外取引] :: E相手先別収入割合 -> {-# UNPACK #-} !Double
[_同一企業] :: E相手先別収入割合 -> {-# UNPACK #-} !Double
parserE相手先別収入割合 :: Parser Text E相手先別収入割合
data E店舗形態_商業
E各種商品小売店 :: E店舗形態_商業
Eコンビニエンスストア :: E店舗形態_商業
Eドラッグストア :: E店舗形態_商業
Eホームセンター :: E店舗形態_商業
parserE店舗形態_商業 :: Parser Text E店舗形態_商業
data E商品形態
E商品形態 :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> E商品形態
[_衣料品] :: E商品形態 -> {-# UNPACK #-} !Double
[_飲食料品] :: E商品形態 -> {-# UNPACK #-} !Double
[_その他商品] :: E商品形態 -> {-# UNPACK #-} !Double
parserE商品形態 :: Parser Text E商品形態
data E販売形態
E販売形態 :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> {-# UNPACK #-} !Double -> E販売形態
[_店頭販売] :: E販売形態 -> {-# UNPACK #-} !Double
[_訪問販売] :: E販売形態 -> {-# UNPACK #-} !Double
[_通信販売] :: E販売形態 -> {-# UNPACK #-} !Double
[_インターネット販売] :: E販売形態 -> {-# UNPACK #-} !Double
[_自動販売機] :: E販売形態 -> {-# UNPACK #-} !Double
[_その他販売] :: E販売形態 -> {-# UNPACK #-} !Double
parserE販売形態 :: Parser Text E販売形態
data E工事種類
E工事種類 :: {-# UNPACK #-} !Text -> {-# UNPACK #-} !Text -> E工事種類
[_種類1] :: E工事種類 -> {-# UNPACK #-} !Text
[_種類2] :: E工事種類 -> {-# UNPACK #-} !Text
parserE工事種類 :: Parser Text E工事種類

-- | タプルのリストのようなデータをこれで代替する
data Car
Car :: {-# UNPACK #-} !Double -> {-# UNPACK #-} !Text -> Car
[value] :: Car -> {-# UNPACK #-} !Double
[name] :: Car -> {-# UNPACK #-} !Text
parseCar :: Parser Car
type Cars = Vector Car

-- | Car に対するValueの足し算
addValueCar :: Double -> Car -> Car

-- | Carのvalueに数値を乗ずる
multipleValueCar :: Double -> Car -> Car

-- | 名前無関係に合計値を出す
sumCars :: Cars -> Double

-- | Null = 0 としてすべての値を足す
sumValCars :: ValCars -> Double

-- | ValCarsの特定のnameであるCarの値を抽出する
getValofCars :: Text -> ValCars -> Double

-- | Car の Mapによる変換
lookupCarNameErr :: Car -> Map Text Text -> Car

-- | Cars のMapによる変換
lookupCarsNameErr :: Cars -> Map Text Text -> Cars

-- | Tuple から Carを作る
tupleToCar :: (Double, Text) -> Car
carFromList :: [(Double, Text)] -> Cars

-- | 同じName を持つCarを統合する
mergeSameNameCars :: Cars -> Cars

-- | ValCars に Carsを結合する
appendVCars :: Cars -> ValCars -> ValCars

-- | 最大のCarの nameを取得する
--   
--   Cars が null のときはT.emptyを返す
vmaximumNameWithoutErr :: Cars -> Text

-- | 最大の項目のCarを取得
--   
--   最大値が重複していた場合は全て返す
vmaximumsWithoutErr :: Cars -> [Car]

-- | value が最大のCarのnameを取得
--   
--   最大値が重複していた場合は全て返す
vmaximumNamesWithoutErr :: Cars -> [Text]
instance GHC.Generics.Generic VTable.Data.Structure.Val
instance GHC.Classes.Eq VTable.Data.Structure.Val
instance GHC.Read.Read VTable.Data.Structure.Val
instance GHC.Generics.Generic VTable.Data.Structure.Car
instance GHC.Read.Read VTable.Data.Structure.Car
instance GHC.Classes.Eq VTable.Data.Structure.Car
instance GHC.Generics.Generic VTable.Data.Structure.E工事種類
instance GHC.Classes.Eq VTable.Data.Structure.E工事種類
instance GHC.Read.Read VTable.Data.Structure.E工事種類
instance GHC.Generics.Generic VTable.Data.Structure.E販売形態
instance GHC.Classes.Eq VTable.Data.Structure.E販売形態
instance GHC.Read.Read VTable.Data.Structure.E販売形態
instance GHC.Show.Show VTable.Data.Structure.E販売形態
instance GHC.Generics.Generic VTable.Data.Structure.E商品形態
instance GHC.Classes.Eq VTable.Data.Structure.E商品形態
instance GHC.Read.Read VTable.Data.Structure.E商品形態
instance GHC.Show.Show VTable.Data.Structure.E商品形態
instance GHC.Generics.Generic VTable.Data.Structure.E店舗形態_商業
instance GHC.Classes.Eq VTable.Data.Structure.E店舗形態_商業
instance GHC.Read.Read VTable.Data.Structure.E店舗形態_商業
instance GHC.Show.Show VTable.Data.Structure.E店舗形態_商業
instance GHC.Generics.Generic VTable.Data.Structure.E相手先別収入割合
instance GHC.Classes.Eq VTable.Data.Structure.E相手先別収入割合
instance GHC.Read.Read VTable.Data.Structure.E相手先別収入割合
instance GHC.Show.Show VTable.Data.Structure.E相手先別収入割合
instance GHC.Generics.Generic VTable.Data.Structure.E協同組合の種類
instance GHC.Classes.Ord VTable.Data.Structure.E協同組合の種類
instance GHC.Classes.Eq VTable.Data.Structure.E協同組合の種類
instance GHC.Read.Read VTable.Data.Structure.E協同組合の種類
instance GHC.Show.Show VTable.Data.Structure.E協同組合の種類
instance GHC.Generics.Generic VTable.Data.Structure.E団体の種類
instance GHC.Classes.Ord VTable.Data.Structure.E団体の種類
instance GHC.Classes.Eq VTable.Data.Structure.E団体の種類
instance GHC.Read.Read VTable.Data.Structure.E団体の種類
instance GHC.Show.Show VTable.Data.Structure.E団体の種類
instance GHC.Generics.Generic VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Classes.Ord VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Read.Read VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Classes.Eq VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Enum.Enum VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Show.Show VTable.Data.Structure.E事業所形態_医療福祉
instance GHC.Generics.Generic VTable.Data.Structure.E事業収入_医療福祉
instance GHC.Classes.Eq VTable.Data.Structure.E事業収入_医療福祉
instance GHC.Read.Read VTable.Data.Structure.E事業収入_医療福祉
instance GHC.Show.Show VTable.Data.Structure.E事業収入_医療福祉
instance GHC.Generics.Generic VTable.Data.Structure.E商品販売額最多部門
instance GHC.Read.Read VTable.Data.Structure.E商品販売額最多部門
instance GHC.Show.Show VTable.Data.Structure.E商品販売額最多部門
instance GHC.Classes.Eq VTable.Data.Structure.E商品販売額最多部門
instance GHC.Generics.Generic VTable.Data.Structure.E調査票の種類
instance GHC.Show.Show VTable.Data.Structure.E調査票の種類
instance GHC.Read.Read VTable.Data.Structure.E調査票の種類
instance GHC.Classes.Eq VTable.Data.Structure.E調査票の種類
instance GHC.Generics.Generic VTable.Data.Structure.E回答主体
instance GHC.Show.Show VTable.Data.Structure.E回答主体
instance GHC.Read.Read VTable.Data.Structure.E回答主体
instance GHC.Enum.Enum VTable.Data.Structure.E回答主体
instance GHC.Classes.Eq VTable.Data.Structure.E回答主体
instance GHC.Generics.Generic VTable.Data.Structure.E対象産業
instance GHC.Show.Show VTable.Data.Structure.E対象産業
instance GHC.Read.Read VTable.Data.Structure.E対象産業
instance GHC.Enum.Enum VTable.Data.Structure.E対象産業
instance GHC.Classes.Eq VTable.Data.Structure.E対象産業
instance GHC.Generics.Generic VTable.Data.Structure.E調査票
instance GHC.Show.Show VTable.Data.Structure.E調査票
instance GHC.Read.Read VTable.Data.Structure.E調査票
instance GHC.Enum.Enum VTable.Data.Structure.E調査票
instance GHC.Classes.Eq VTable.Data.Structure.E調査票
instance GHC.Generics.Generic VTable.Data.Structure.E産業格付
instance GHC.Read.Read VTable.Data.Structure.E産業格付
instance GHC.Classes.Eq VTable.Data.Structure.E産業格付
instance GHC.Generics.Generic VTable.Data.Structure.E単独本所支所区分
instance GHC.Show.Show VTable.Data.Structure.E単独本所支所区分
instance GHC.Read.Read VTable.Data.Structure.E単独本所支所区分
instance GHC.Enum.Enum VTable.Data.Structure.E単独本所支所区分
instance GHC.Classes.Eq VTable.Data.Structure.E単独本所支所区分
instance GHC.Generics.Generic VTable.Data.Structure.E経営組織
instance GHC.Read.Read VTable.Data.Structure.E経営組織
instance GHC.Show.Show VTable.Data.Structure.E経営組織
instance GHC.Enum.Enum VTable.Data.Structure.E経営組織
instance GHC.Classes.Eq VTable.Data.Structure.E経営組織
instance GHC.Generics.Generic VTable.Data.Structure.E管理補助的業務
instance GHC.Read.Read VTable.Data.Structure.E管理補助的業務
instance GHC.Show.Show VTable.Data.Structure.E管理補助的業務
instance GHC.Enum.Enum VTable.Data.Structure.E管理補助的業務
instance GHC.Classes.Eq VTable.Data.Structure.E管理補助的業務
instance GHC.Generics.Generic VTable.Data.Structure.E事業形態
instance GHC.Read.Read VTable.Data.Structure.E事業形態
instance GHC.Show.Show VTable.Data.Structure.E事業形態
instance GHC.Enum.Enum VTable.Data.Structure.E事業形態
instance GHC.Classes.Eq VTable.Data.Structure.E事業形態
instance GHC.Generics.Generic VTable.Data.Structure.E雇用情報
instance GHC.Read.Read VTable.Data.Structure.E雇用情報
instance GHC.Show.Show VTable.Data.Structure.E雇用情報
instance GHC.Classes.Eq VTable.Data.Structure.E雇用情報
instance GHC.Read.Read VTable.Data.Structure.Header
instance GHC.Show.Show VTable.Data.Structure.Header
instance GHC.Arr.Ix VTable.Data.Structure.Header
instance GHC.Classes.Ord VTable.Data.Structure.Header
instance GHC.Enum.Enum VTable.Data.Structure.Header
instance GHC.Classes.Eq VTable.Data.Structure.Header
instance GHC.Classes.Eq VTable.Data.Structure.ForSortFile
instance GHC.Show.Show VTable.Data.Structure.ForSortFile
instance GHC.Show.Show VTable.Data.Structure.Dep
instance GHC.Classes.Eq VTable.Data.Structure.Dep
instance GHC.Enum.Enum VTable.Data.Structure.FileType
instance GHC.Show.Show VTable.Data.Structure.FileType
instance GHC.Classes.Eq VTable.Data.Structure.FileType
instance Control.DeepSeq.NFData VTable.Data.Structure.Val
instance GHC.Show.Show VTable.Data.Structure.Val
instance GHC.Show.Show VTable.Data.Structure.Car
instance GHC.Classes.Ord VTable.Data.Structure.Car
instance Control.DeepSeq.NFData VTable.Data.Structure.Car
instance Control.DeepSeq.NFData VTable.Data.Structure.E工事種類
instance GHC.Show.Show VTable.Data.Structure.E工事種類
instance Control.DeepSeq.NFData VTable.Data.Structure.E販売形態
instance Control.DeepSeq.NFData VTable.Data.Structure.E商品形態
instance Control.DeepSeq.NFData VTable.Data.Structure.E店舗形態_商業
instance Control.DeepSeq.NFData VTable.Data.Structure.E相手先別収入割合
instance Control.DeepSeq.NFData VTable.Data.Structure.E協同組合の種類
instance Control.DeepSeq.NFData VTable.Data.Structure.E団体の種類
instance Control.DeepSeq.NFData VTable.Data.Structure.E事業所形態_医療福祉
instance Control.DeepSeq.NFData VTable.Data.Structure.E事業収入_医療福祉
instance Control.DeepSeq.NFData VTable.Data.Structure.E商品販売額最多部門
instance Control.DeepSeq.NFData VTable.Data.Structure.E調査票の種類
instance Control.DeepSeq.NFData VTable.Data.Structure.E回答主体
instance Control.DeepSeq.NFData VTable.Data.Structure.E対象産業
instance Control.DeepSeq.NFData VTable.Data.Structure.E調査票
instance Control.DeepSeq.NFData VTable.Data.Structure.E産業格付
instance GHC.Show.Show VTable.Data.Structure.E産業格付
instance Control.DeepSeq.NFData VTable.Data.Structure.E単独本所支所区分
instance Control.DeepSeq.NFData VTable.Data.Structure.E経営組織
instance Control.DeepSeq.NFData VTable.Data.Structure.E管理補助的業務
instance Control.DeepSeq.NFData VTable.Data.Structure.E事業形態
instance Control.DeepSeq.NFData VTable.Data.Structure.E雇用情報
instance GHC.Classes.Ord VTable.Data.Structure.ForSortFile


-- | 必要なデータをIOとして扱うのが面倒なので,全てデータをこのモジュール内で定義するためのHaskell *
--   必要なデータが無かったため分類やシソーラスに関しては作者の自作.実際のコンバーター等とコードが異なる可能性があるため 注意
--   
--   <ul>
--   <li>表記を統一するために日本語を使っているので、等幅フォント推奨</li>
--   <li>量の多いデータはTemplate Haskell(TH)でコンパイル時に読み込む</li>
--   <li>エンコーディングに関して<pre>入出力も含めてすべて"BOMなしの"UTF-8で統一する(Shift-Jisは使わない)
--   Windowsでの起動は想定していないので，Dockerを利用して，Linux上で動かすこと Docker for Windows
--   を利用する場合はchcp 65001をしないとTemplateHaskell部分のコンパイルが通らない．</pre></li>
--   <li>BOMに関して</li>
--   </ul>
--   
--   TemplateHaskell に読み込ませるデータをBOM付きにすると日本語の先端に点が入る．
--   必ずBOMなしUTF-８で保存すること．メモ帳とエクセルは使わない．変換はnkfで．
module VTable.Data.Classification
c商品分類賃加工 :: [Text]

-- | 24年,28年同じ
c商品分類製造業以外 :: [Text]
c医療福祉細分類コード :: [Text]
c協同組合細分類コード :: [Text]
gサービスA建設24 :: [Text]
gサービスA建設28 :: [Text]

-- | 商品分類の内建設業か判別する関数
is建設 :: Year -> Text -> Bool

-- | 元請か下請か判別する関数
is元請 :: Year -> Text -> Bool

-- | 事業収入 店舗形態範囲事業
g事業収入_サB_店舗形態範囲24 :: [Text]
g事業収入_サB_店舗形態範囲28 :: [Text]

-- | 店舗形態範囲内か判別する関数
is店舗範囲 :: Year -> Text -> Bool

-- | 事業収入 物品賃貸業
g事業収入_サB_物品賃貸業24 :: [Text]
g事業収入_サB_物品賃貸業28 :: [Text]

-- | 物品賃貸業か判定する関数
is物品賃貸業 :: Year -> Text -> Bool

-- | 特殊な方法 卸売処理における財別と商品分類の内生産財
--   
--   
--   <a>https://www.stat.go.jp/data/e-census/2016/kekka/pdf/r_shogyo.pdf</a>
g卸売生産財 :: [Text]

-- | 特殊な方法 卸売処理における財別と商品分類の内資本財
g卸売資本財 :: [Text]

-- | 特殊な方法 卸売処理における財別と商品分類の内消費財
g卸売消費財 :: [Text]
data E財別
E生産財 :: E財別
E資本財 :: E財別
E消費財 :: E財別

-- | 3財以上含むかを判定するときに使う
ge卸売財別商品 :: Map Text E財別
type Thesaurus = Map Text Text

-- | ストリングのタプルからレイジーテキストのマップを作る
toTextMap :: [(String, String)] -> Map Text Text

-- | 24年
sd鉱業数量24 :: Map Text Text
sd鉱業金額24 :: Map Text Text

-- | 28年
sd鉱業数量28 :: Map Text Text
sd鉱業金額28 :: Map Text Text

-- | 24年
sd農林漁業金額24 :: Map Text Text

-- | 28年
sd農林漁業金額28 :: Map Text Text

-- | 24年
sd学校教育24 :: Map Text Text

-- | 28年
sd学校教育28 :: Map Text Text
sd事業分類24 :: Map Text Text
sd事業分類28 :: Map Text Text

-- | 28年のみ
sd収入額_製造業以外24 :: Map Text Text
sd物品賃貸業レンタル :: Map Text Text
sd物品賃貸業リース :: Map Text Text

-- | E事業所形態_医療福祉 と 産業細分類の対応関係
edE事業所形態_医療福祉 :: Map E事業所形態_医療福祉 IndustryDetail

-- | E行動組合の種類 と 産業細分類の対応関係
edE協同組合の種類 :: Map E協同組合の種類 IndustryDetail

-- | E団体の種類と 産業細分類の対応関係
edE団体の種類 :: Map E団体の種類 IndustryDetail

-- | サービスAのみ（建設含まず） と 産業細分類の対応関係
gdサービスA24 :: Map Text Text
gdサービスA28 :: Map Text Text

-- | 33分類と事業分類のマップ
gd建設 :: Map Text Text

-- | 金融業、保険業、郵便局受託業の事業種類 と産業細分類の対応関係
gd金融保険 :: Map Text Text
gd学校教育24 :: Map Text Text

-- | 主な事業の種類 と 産業細分類の対応関係 (24年)
gd主な事業の種類24 :: Map Text Text

-- | 主な事業の種類 と 産業細分類の対応関係 (28年)
gd主な事業の種類28 :: Map Text Text

-- | 製造業(製造業以外) と 産業細分類の対応関係
--   
--   製造小売及び修理は,格付け不能に分類
gd製造業以外 :: Map Text Text

-- | 建設業の調査項目と,調査項目の変換
ss建設分配24 :: Map Text [Text]
ss建設分配28 :: Map Text [Text]

-- | ss建設分配用の関数
getTwoColAsListMap :: Text -> Map Text [Text]

-- | サB の事業収入と店舗形態の組み合わせで細分類に変換する
--   
--   店舗形態と,事業収入の分類のPair と, 細分類のマップ
--   
--   店舗形態の必要のないものは,店舗形態部分 T.empty
gdサB事業収入_店舗形態24 :: Map (Text, Text) Text
gdサB事業収入_店舗形態28 :: Map (Text, Text) Text
getThreeColAsTupleMap :: Text -> Map (Text, Text) Text

-- | 店舗形態がNullのVersion
gdサB事業収入_店舗形態無し24 :: Map Text Text
gdサB事業収入_店舗形態無し28 :: Map Text Text

-- | gdサB事業収入_店舗形 で想定された組み合わせ以外の場合．
gdサB事業収入_店舗形態不適合24 :: Map Text Text
gdサB事業収入_店舗形態不適合28 :: Map Text Text

-- | 製造業出荷額の内,24年のみ
gd製造業24 :: Map Text Text

-- | 小売業と無店舗小売業の変換
dd無店舗小売業 :: Map Text Text

-- | 平成24年鉱業
s24鉱業数量 :: [Text]
s24鉱業金額 :: [Text]

-- | 平成28年鉱業
s28鉱業数量 :: [Text]
s28鉱業金額 :: [Text]

-- | 平成24年農林水産業
s24農林漁業金額 :: [Text]

-- | 平成28年農林水産業
s28農林漁業金額 :: [Text]

-- | 24年
s24商業分類 :: [Text]
s24商業金額 :: [Text]
s28商業分類 :: [Text]
s28商業金額 :: [Text]
s24医療福祉 :: [Text]
s28医療福祉 :: [Text]
s24製造業出荷分類 :: [Text]
s24製造業在庫金額 :: [Text]
s24製造業出荷金額 :: [Text]
s24製造業加工賃分類 :: [Text]
s24製造業加工賃金額 :: [Text]
s24製造業製造業以外 :: [Text]
s24学校教育 :: [Text]
s28学校教育 :: [Text]
s24事業別売上高 :: [Text]
s28事業別売上高 :: [Text]
s24相手先別収入割合_医療福祉 :: [Text]
s28相手先別収入割合_医療福祉 :: [Text]
s24相手先別収入割合_サB :: [Text]
s28相手先別収入割合_サB :: [Text]
s24商品別レンタル売上高 :: [Text]
s28商品別レンタル売上高 :: [Text]
s24商品別リース契約高 :: [Text]
s28商品別リース契約高 :: [Text]
s24事業収入建サA番号 :: [Text]
s24事業収入建サA金額 :: [Text]
s28事業収入建サA番号 :: [Text]
s28事業収入建サA金額 :: [Text]
s24事業収入サB番号 :: [Text]
s24事業収入サB金額 :: [Text]
s28事業収入サB番号 :: [Text]
s28事業収入サB金額 :: [Text]
ss24事前格付_事業所 :: [Text]
ss28事前格付_事業所 :: [Text]
sk24事前格付_事業所 :: [Text]
sk28事前格付_事業所 :: [Text]
skc28事前格付_事業所 :: [Text]
skm28事前格付_事業所 :: [Text]
ss28事前格付_企業 :: [Text]
ss24事前格付_企業 :: [Text]
sk24事前格付_企業 :: [Text]
sk28事前格付_企業 :: [Text]
skc28事前格付_企業 :: [Text]

-- | 産業分類の階層
--   
--   総務省統計局HP「平成24年経済センサス‐活動調査 用語の解説 事業所の産業分類，企業産業分類」によれば，
--   産業格付け作業では，各企業/事業所を， 日本標準産業分類 に基づいた 「大（1桁，20部門） ，1.5桁（2桁，29部門）
--   ，中（2桁，113部門） ，小（3桁，548部門） ，3.5桁（3桁，607部門） ，細（4桁,1494部門）」
--   の6段階における産業格付けを行っている． また，それらの分類とは別に記入表「事業別売上金額」における22区分の事業分類が存在し，
--   更に調査票裏面において個別に内訳を調査する4~6桁の商品分類（製造業のみ）及び，
--   建設業，商業などにおける独自の分類が存在する．本稿では，これらの分類を総称して以下， 経済センサス分類と呼ぶ．
--   
--   シンプルになるので22区分の事業分類も組み込む
data Stratum

-- | 細分類
Detail :: Stratum

-- | <ol>
--   <li>5分類 (Three Five)</li>
--   </ol>
TF :: Stratum

-- | 小分類
Small :: Stratum

-- | 中分類
Middle :: Stratum

-- | <ol>
--   <li>5分類 (One Five)</li>
--   </ol>
OF :: Stratum

-- | 事業分類(22区分)
Business :: Stratum

-- | 大分類
Large :: Stratum

-- | 一つ上の階層を返す
upStratum :: Stratum -> Maybe Stratum

-- | 一つ下の階層を返す
downStratum :: Stratum -> Maybe Stratum

-- | 産業分類の総称
type Industry = Text
type IndustryLarge = Text
type IndustryBusiness = Text
type IndustryOF = Text
type IndustryMiddle = Text
type IndustrySmall = Text
type IndustryTF = Text
type IndustryDetail = Text
type IndustryV = Text

-- | 下の階層の産業分類
type Lower = Text

-- | 上の階層の産業分類
type Higher = Text

-- | Stratum と Idx :: Int で 産業分類を管理するArray
wholeIndMap :: Array (Stratum, Int) Industry

-- | 細分類ベースで,Index用に重複した大分類
c大分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した22分類
c22分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した1.5分類
c15分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した中分類
c中分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した小分類
c小分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した3.5分類
c35分類インデックス用 :: [Text]

-- | 細分類ベースで,Index用に重複した細分類
c細分類インデックス用 :: [Text]

-- | 大分類インデックス
--   
--   重複するものは削除されている
ci大分類インデックス :: Map Text Int

-- | 22分類インデックス
--   
--   重複するものは削除されている
ci22分類インデックス :: Map Text Int

-- | <ol>
--   <li>5分類インデックス</li>
--   </ol>
--   
--   重複するものは削除されている
ci15分類インデックス :: Map Text Int

-- | 中分類インデックス
--   
--   重複するものは削除されている
ci中分類インデックス :: Map Text Int

-- | 小分類インデックス
--   
--   重複するものは削除されている
ci小分類インデックス :: Map Text Int

-- | <ol>
--   <li>5分類インデックス</li>
--   </ol>
--   
--   重複するものは削除されている
ci35分類インデックス :: Map Text Int

-- | 細分類インデックス
ci細分類インデックス :: Map Text Int

-- | 産業大分類
c大分類 :: [IndustryLarge]
c大分類Map :: Map IndustryLarge Int

-- | 産業22分類
c22分類 :: [IndustryBusiness]
c22分類Map :: Map IndustryBusiness Int

-- | 22分類 の数
numOf22分類 :: Int

-- | <ol>
--   <li>5分類</li>
--   </ol>
c15分類 :: [IndustryOF]
c15分類Map :: Map IndustryOF Int

-- | 中分類
c中分類 :: [IndustryMiddle]
c中分類Map :: Map IndustryMiddle Int

-- | 小分類
c小分類 :: [IndustrySmall]

-- | 小分類 の数
numOf小分類 :: Int
c小分類Map :: Map IndustrySmall Int

-- | <ol>
--   <li>5分類</li>
--   </ol>
c35分類 :: [IndustryTF]

-- | <ol>
--   <li>5分類 Map</li>
--   </ol>
c35分類Map :: Map IndustryTF Int

-- | 細分類
c細分類 :: [IndustryDetail]

-- | 細分類の個数
numOf細分類 :: Int
c細分類Map :: Map IndustryDetail Int

-- | V表分類
cV表分類 :: [IndustryV]

-- | V表分類の数
numOfV表分類 :: Int
cV表分類Map :: Map IndustryV Int
ci細分類インデックス正順 :: Map IndustryDetail Integer
ic細分類インデックス正順 :: Map Integer IndustryDetail
ic小分類インデックス正順 :: Map Integer IndustrySmall
ci小分類インデックス正順 :: Map IndustrySmall Integer
ic22分類インデックス正順 :: Map Integer IndustryBusiness
ci22分類インデックス正順 :: Map IndustryBusiness Integer
icV表分類インデックス正順 :: Map Integer IndustryV
ciV表分類インデックス正順 :: Map IndustryV Integer

-- | 産業分類のインデックスを取得する
getIndIdx :: Industry -> Int

-- | 任意の階層の産業分類を指定したStrutumに階層移動する
--   
--   上から下は一位に定まらないので不可能
elevateStratum :: Industry -> Stratum -> Maybe Industry

-- | 産業分類の階層を一つ上げる
upInd :: Industry -> Maybe Industry

-- | Lower が Higherの下層分類か判定する
isMemberOf :: Lower -> Higher -> Bool

-- | 与えられた産業分類の階層を返す
--   
--   Map とかで参照してもよいが,時間がかかるので,特徴で処理.
whichStratum :: Industry -> Stratum
isLarge :: Industry -> Bool
isBusiness :: Industry -> Bool
isOF :: Industry -> Bool
isMiddle :: Industry -> Bool
isSmall :: Industry -> Bool
isTF :: Industry -> Bool
isDetail :: Industry -> Bool

-- | Small × V表分類
cc小分類V表分類 :: Map Industry [Industry]

-- | 管理補助的業務 小分類×小分類
ss管理補助的業務 :: Map Industry [Industry]

-- | 格付け不能 細分類×細分類
ss格付け不能 :: Map IndustrySmall [IndustrySmall]
bd格付け不能 :: Map IndustryBusiness IndustryDetail
instance GHC.Arr.Ix VTable.Data.Classification.Stratum
instance GHC.Enum.Enum VTable.Data.Classification.Stratum
instance GHC.Classes.Ord VTable.Data.Classification.Stratum
instance GHC.Classes.Eq VTable.Data.Classification.Stratum
instance GHC.Show.Show VTable.Data.Classification.Stratum
instance GHC.Classes.Ord VTable.Data.Classification.E財別
instance GHC.Classes.Eq VTable.Data.Classification.E財別
instance GHC.Show.Show VTable.Data.Classification.E財別


-- | <ul>
--   <li>個票の元データから，ばらつきやエラーデータなどを除去するためにすべて，既定のデータ型に変換するためのモジュール</li>
--   <li>表記を統一するために日本語を使っているので、等幅フォント推奨</li>
--   </ul>
--   
--   こんなことする必要がなくなるようにデータを手書きやエクセルでいじるのをやめましょう．
--   
--   <ul>
--   <li>エンコーディングに関して<pre>入出力も含めてすべてUTF-8で統一する
--   Windowsでの起動は想定していないの，Dockerを利用して，Linux上で動かすこと Windowsのコンソールは chcp
--   65001 Docker for Windows を利用する場合はchcp
--   65001をしないとTemplateHaskell部分のコンパイルが通らない．</pre></li>
--   <li>その他<pre>where 節内にエラーが出るので，Strict拡張は行わない</pre></li>
--   </ul>
module VTable.Compilation.Conversion

-- | 固定長の数値と非固定長の数値が混ざっているのでこっちを使う
spaceDouble :: Parser Double

-- | Textの形で数値を持つものをチェックしつつ,変換する (001のような値インデックスや分類番号は数値では持てないので)
--   当てはまらない場合は,空を返す.
textToDigitText :: Text -> Text
textToDouble :: Text -> Double
textToValDouble :: Text -> ValDouble
doubleToVal :: Double -> ValDouble
textToInt :: Text -> Int
textToValInt :: Text -> ValInt
intToVal :: Int -> ValDouble
textToValCars :: [Double] -> [Text] -> ValCars
textToCars :: [Double] -> [Text] -> Cars
minusToZero :: Int -> Int

-- | 生ﾃﾞｰﾀに入っているHeader情報
type RecordValue = Text

-- | 元ﾃﾞｰﾀのﾍｯﾀﾞーとRowを与えて指定のﾃﾞｰﾀを取ってくる
projFrom :: RecordHeader -> [RecordHeader] -> [RecordValue] -> RecordValue

-- | 与えられたHeaderのデータをテキストとして取得する,
getTextValues :: [RecordHeader] -> [RecordHeader] -> [RecordValue] -> [RecordValue]

-- | 与えられたHeaderのデータをテキストとして取得する, 数値になりえないテキストはエラーを返す
getDigitTextValues :: [RecordHeader] -> [RecordHeader] -> [RecordValue] -> [RecordValue]

-- | projFrom をmapしてDoubleで返す
getValues :: [RecordHeader] -> [RecordHeader] -> [RecordValue] -> [Double]

-- | Headerのリスト
--   
--   調査名を商品番号に変換する test
translateGoodsCodes :: [Text] -> Thesaurus -> [Text]
type HeaderTexts = [Text]

-- | 個別に [Text] -&gt; Val の関数を作成しHandleで一行ずつ処理する
--   
--   逐次読み込みの後一行ごとにデータを生成
--   
--   データを取らない場合は,Nullを返す. 一行のデータと,そこから抜き出したいデータを指定されたときに,データを抜き出す関数
convert :: Header -> FileType -> HeaderTexts -> [Text] -> Val

-- | 直轄企業コード 経済センサスの調査票には，平成24，28年共に，「市区町村コード，調査区番号，事業所番号，＊コード」が記載されており，
--   同一企業に属する支所等は全て同一のコードを持つ．
--   この事業所コードとは別に，企業内において連番される2桁の整理番号が存在し，これらのコードを全て併せて「直轄企業コード」と呼ぶ．
--   直轄企業コードは全事業所にそれぞれ固有であり，且つ，各事業所がどの企業に属するのかを判別することを可能にする．
--   
--   <ul>
--   <li>S<pre>[企]市区町村コード [企]調査区番号 [企]事業所番号 [企]＊コード [企]整理番号</pre></li>
--   <li>K24 無視 S24で把握</li>
--   <li>K28</li>
--   </ul>
--   
--   <pre>
--   [企]市区町村コード
--   [企]調査区番号
--   [企]事業所番号
--   [企]＊コード
--   </pre>
--   
--   <ul>
--   <li>KMI28</li>
--   </ul>
--   
--   <pre>
--   (企)市区町村コード
--   (企)調査区番号
--   (企)事業所番号
--   (企)＊コード
--   (企)整理番号
--   </pre>
--   
--   <ul>
--   <li>KMP28 無視</li>
--   <li>企業コード空白=0000 は単独事業所</li>
--   </ul>
fデータ変換_直轄企業コード :: FileType -> HeaderTexts -> [Text] -> Val

-- | 同一の事業所かどうかを判定するための事業所の情報
--   
--   括弧が全角と半角が混在しているので注意（S28は両方入っている．IMEで全角すべて禁止しろ）
--   
--   <ul>
--   <li>S24<pre>[確定]市区町村コード（所在地） [確定]調査区番号（所在地） [確定]事業所番号
--   [確定]＊コード</pre></li>
--   <li>S28</li>
--   </ul>
--   
--   <pre>
--   [確定]市区町村コード(所在地)
--   [確定]調査区番号（所在地）
--   [確定]事業所番号
--   [確定]＊コード
--   </pre>
--   
--   <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F15_[確定]市区町村コード（所在地）
--   F16_[確定]調査区番号（所在地）
--   F17_[確定]事業所番号
--   F18_[確定]＊コード
--   </pre>
--   
--   <ul>
--   <li>K28</li>
--   </ul>
--   
--   <pre>
--   [確定]市区町村コード(所在地)
--   [確定]調査区番号（所在地）
--   [確定]事業所番号
--   [確定]＊コード
--   </pre>
--   
--   <ul>
--   <li>KMI,KMP28<pre>（28センサスキー）(確定)市区町村コード(所在地) （28センサスキー）(確定)調査区番号（所在地）
--   （28センサスキー）(確定)事業所番号 （28センサスキー）(確定)＊コード</pre></li>
--   <li>KC28,KM28 &gt; (確定)市区町村コード(所在地) &gt; (確定)調査区番号（所在地） &gt; (確定)事業所番号
--   &gt; (確定)＊コード</li>
--   </ul>
fデータ変換_事業所番号 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 調査票の種類 * 各年度の変換 * 調査票の種類を受け取って,E調査票の種類を返す関数 * 経産省24年は,全てまとまった情報しかない
--   &gt;&gt; F31_調査票の種類 で判断する * 経産省28年は無視, Sの値を使う
conVKindOfQ24 :: Text -> Val
conVKindOfQ28 :: Text -> Val

-- | ファイルの種類と,ヘッダーを受け取って,調査票の種類を返す * 24年だけ 調査票の種類,28年は調査票の種別
fデータ変換_調査票の種類 :: FileType -> HeaderTexts -> [Text] -> Val

-- | S28 ［集計用］売上（収入）金額 * S24 [集]売上（収入）金額 * K24 F1783_[集]売上（収入）金額 * K28
--   ［集計用］売上（収入）金額
fデータ変換_総売上 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 地域コード
--   
--   <pre>
--   S24 [確定]市区町村コード（所在地） 五桁の番号 28年とは括弧が異なる
--   S28 [確定]市区町村コード(所在地) 五桁の番号
--   K24 F15_[確定]市区町村コード（所在地） 五桁の番号
--   K28 [確定]市区町村コード(所在地)
--   KMI28 市区町村番号（表記上）
--   KMP28 （28センサスキー）(確定)市区町村コード(所在地)
--   KC28 KM28   (確定)市区町村コード(所在地)
--   </pre>
--   
--   見事に全部違って素敵ですね．
--   
--   <ul>
--   <li>いずれもはじめが01の場合は4桁</li>
--   </ul>
fデータ変換_地域コード :: FileType -> HeaderTexts -> [Text] -> ValText

-- | <ul>
--   <li>S24 28 経営組織</li>
--   <li>K24 F104_経営組織</li>
--   <li>K28 値がないので無視</li>
--   </ul>
fデータ変換_経営組織 :: FileType -> HeaderTexts -> [Text] -> Val

-- | S24 [事]単独・本所・支所3区分
--   
--   S28 ［事］単独・本所・支所３区分
--   
--   k24 F2024_[事]単独・本所・支所3区分
--   
--   k28 ［事］単独・本所・支所３区分
fデータ変換_単独本所支所区分 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 個人業主,事業従業者数,雇用者数がわかれば取り敢えず良い * S24
--   
--   <pre>
--   [企]㈰個人業主（男女計）
--   [企]㈯従業者合計（男女計）
--   [企]㉀うち別経営への出向・派遣者（男女計）
--   [企]常用雇用者数（男女計）
--   [事]㈰個人業主（男女計）
--   [事]㈯従業者合計（男女計）
--   [事]㉀うち別経営への出向・派遣者（男女計）
--   [事]常用雇用者数（男女計）
--   </pre>
--   
--   <ul>
--   <li>S28</li>
--   </ul>
--   
--   <pre>
--   ［企］１個人業主（男女計）
--   ［企］７従業者合計（男女計）
--   ［企］８うち別経営への出向・派遣者（男女計）
--   ［企］常用雇用者数（男女計）
--   ［事］１個人業主（男女計）
--   ［事］７従業者合計（男女計）
--   ［事］８うち別経営への出向・派遣者（男女計）
--   ［事］常用雇用者数（男女計）
--   </pre>
--   
--   <ul>
--   <li>k24</li>
--   </ul>
--   
--   <pre>
--   F1570_[企]雇用者数（男女計）
--   F1616_[企]事業従事者数（男女計）
--   F1670_[事]㈰個人業主（男女計）
--   F1683_[事]常用雇用者数（男女計）
--   F1684_[事]雇用者数（男女計）
--   F1686_[事]事業従事者数（男女計）
--   </pre>
--   
--   <ul>
--   <li>k28</li>
--   </ul>
--   
--   <pre>
--   ［企］１個人業主（男女計）
--   ［企］雇用者数（男女計）
--   ［企］事業従事者数（男女計）
--   ［事］１個人業主（男女計）
--   ［事］雇用者数（男女計）
--   ［事］事業従事者（男女計）
--   </pre>
fデータ変換_雇用情報 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 費用等の内訳 * S24
--   
--   <pre>
--   ②費用総額・経常費用
--   ③うち売上原価
--   ④給与総額
--   ⑤福利厚生費(退職金含む)
--   ⑥動産・不動産賃借料
--   ⑦減価償却費
--   ⑧租税公課(法人_住民_事業税除く)
--   ⑨外注費
--   ⑩支払利息等
--   </pre>
--   
--   <ul>
--   <li>S28</li>
--   </ul>
--   
--   <pre>
--   補正＿２費用総額（売上原価・販売費及び一般管理費）
--   補正＿３うち売上原価
--   補正＿４給与総額
--   補正＿５福利厚生費（退職金を含む）
--   補正＿６動産・不動産賃借料
--   補正＿７減価償却費
--   補正＿８租税公課（法人税、住民税、事業税を除く）
--   補正＿９外注費
--   補正＿１０支払利息等
--   </pre>
--   
--   <ul>
--   <li>k24</li>
--   </ul>
--   
--   <pre>
--   F1321_㈪費用総額・経常費用
--   F1322_㈫うち売上原価
--   F1323_㈬給与総額
--   F1324_㈭福利厚生費(退職金含む)
--   F1325_㈮動産・不動産賃借料
--   F1326_㈯減価償却費
--   F1327_㉀租税公課(法人_住民_事業税除く)
--   F1328_㈷外注費
--   F1329_㉂支払利息等
--   </pre>
--   
--   <ul>
--   <li>k28</li>
--   </ul>
--   
--   <pre>
--   補正＿２費用総額（売上原価・販売費及び一般管理費）
--   補正＿３うち売上原価
--   補正＿４給与総額
--   補正＿５福利厚生費（退職金を含む）
--   補正＿６動産・不動産賃借料
--   補正＿７減価償却費
--   補正＿８租税公課（法人税、住民税、事業税を除く）
--   補正＿９外注費
--   補正＿１０支払利息等
--   </pre>
--   
--   <ul>
--   <li>k28個別 無視</li>
--   </ul>
fデータ変換_費用等の内訳 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | <ul>
--   <li>S 管理・補助的業務</li>
--   <li>K 該当項目なし</li>
--   </ul>
fデータ変換_管理補助的業務 :: FileType -> HeaderTexts -> [Text] -> Val管理補助的業務

-- | <ul>
--   <li>S 無視</li>
--   <li>k24 F954_卸売部門又は小売部門の別</li>
--   <li>k28 無視</li>
--   <li>KC28 卸売部門又は小売部門の別</li>
--   <li>KM,KMI,KMP 項目なし</li>
--   </ul>
fデータ変換_商品販売額最多部門 :: FileType -> HeaderTexts -> [Text] -> Val商品販売額最多部門

-- | <ul>
--   <li>S無視</li>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F383_111金鉱（精含量）ｇ
--   F384_112銀鉱（精含量）ｋｇ
--   F385_121鉛鉱（精含量）ｔ
--   F386_122亜鉛鉱（精含量）ｔ
--   F387_131鉄鉱（精含量）ｔ
--   F388_191銅鉱（精含量）ｔ
--   F389_211石炭（精炭）ｔ
--   F390_221亜炭（精炭）ｔ
--   F391_311原油ｋｌ
--   F392_321天然ガス（基準状態）千_
--   F393_411花こう岩・同類似岩石（製品）ｔ
--   F394_421石英粗面岩・同類似岩石（製品）ｔ
--   F395_431安山岩・同類似岩石（製品）ｔ
--   F396_441大理石（製品）ｔ
--   F397_451ぎょう灰岩（製品）ｔ
--   F398_461砂岩（製品）ｔ
--   F399_471粘板岩（製品）ｔ
--   F400_491かんらん岩（粗鉱）ｔ
--   F401_492かんらん岩（精鉱）ｔ
--   F402_493オリビンサンド（製品）ｔ
--   F403_511木節・頁岩粘土（粗鉱）ｔ
--   F404_512木節・頁岩粘土（精鉱）ｔ
--   F405_513がいろ目粘土（粗鉱）ｔ
--   F406_514がいろ目粘土（精鉱）ｔ
--   F407_521ろう石（粗鉱）ｔ
--   F408_522ろう石（精鉱）ｔ
--   F409_523ろう石クレー（製品）ｔ
--   F410_531ドロマイト（粗鉱）ｔ
--   F411_532ドロマイト（精鉱）ｔ
--   F412_541長石（粗鉱）ｔ
--   F413_542長石（精鉱）ｔ
--   F414_543半花こう岩（粗鉱）ｔ
--   F415_544半花こう岩（精鉱）ｔ
--   F416_545風化花こう岩（含むサバ）（粗鉱）ｔ
--   F417_546風化花こう岩（含むサバ）（精鉱）ｔ
--   F418_551軟けい石（粗鉱）ｔ
--   F419_552軟けい石（精鉱）ｔ
--   F420_553白・炉材けい石（粗鉱）ｔ
--   F421_554白・炉材けい石（精鉱）ｔ
--   F422_561人造けい砂（製品）ｔ
--   F423_562天然けい砂（含むがいろ目けい砂）（粗鉱）ｔ
--   F424_563天然けい砂（含むがいろ目けい砂）（精鉱）ｔ
--   F425_571石灰石（粗鉱）ｔ
--   F426_572石灰石（精鉱）ｔ
--   F427_591陶石（粗鉱）ｔ
--   F428_592陶石（精鉱）ｔ
--   F429_593陶石クレー（製品）ｔ
--   F430_594カオリン（粗鉱）ｔ
--   F431_595カオリン（精鉱）ｔ
--   F432_911酸性白土（粗鉱）ｔ
--   F433_912酸性白土（精鉱）ｔ
--   F434_921ベントナイト（粗鉱）ｔ
--   F435_922ベントナイト（精鉱）ｔ
--   F436_931けいそう土（粗鉱）ｔ
--   F437_932けいそう土（精鉱）ｔ
--   F438_941滑石（粗鉱）ｔ
--   F439_942滑石（精鉱）ｔ
--   </pre>
--   
--   <ul>
--   <li>K28,KMI,KMP 無視</li>
--   <li>KM28<pre> 9111金鉱（精含量）ｇ 9112銀鉱（精含量）ｋｇ 9121鉛鉱（精含量）ｔ 9122亜鉛鉱（精含量）ｔ
--   9131鉄鉱（精含量）ｔ 9191銅鉱（精含量）ｔ 9199その他の金属鉱物【dummy】 9211石炭（精炭）ｔ 9221亜炭（精炭）ｔ
--   9311原油ｋｌ 9321天然ガス（基準状態）千? 9329その他の原油・天然ガス【dummy】 9411花こう岩・同類似岩石（製品）ｔ
--   9421石英粗面岩・同類似岩石（製品）ｔ 9431安山岩・同類似岩石（製品）ｔ 9441大理石（製品）ｔ 9451ぎょう灰岩（製品）ｔ
--   9461砂岩（製品）ｔ 9471粘板岩（製品）ｔ 9481砂・砂利・玉石【dummy】 9491かんらん岩（粗鉱）ｔ
--   9492かんらん岩（精鉱）ｔ 9493オリビンサンド（製品）ｔ 9499その他の採石、砂・砂利・玉石【dummy】
--   9511木節・頁岩粘土（粗鉱）ｔ 9512木節・頁岩粘土（精鉱）ｔ 9513がいろ目粘土（粗鉱）ｔ 9514がいろ目粘土（精鉱）ｔ
--   9519その他の耐火粘土【dummy】 9521ろう石（粗鉱）ｔ 9522ろう石（精鉱）ｔ 9523ろう石クレー（製品）ｔ
--   9531ドロマイト（粗鉱）ｔ 9532ドロマイト（精鉱）ｔ 9541長石（粗鉱）ｔ 9542長石（精鉱）ｔ 9543半花こう岩（粗鉱）ｔ
--   9544半花こう岩（精鉱）ｔ 9545風化花こう岩（含むサバ）（粗鉱）ｔ 9546風化花こう岩（含むサバ）（精鉱）ｔ
--   9551軟けい石（粗鉱）ｔ 9552軟けい石（精鉱）ｔ 9553白・炉材けい石（粗鉱）ｔ 9554白・炉材けい石（精鉱）ｔ
--   9561人造けい砂（製品）ｔ 9562天然けい砂（含むがいろ目けい砂）（粗鉱）ｔ 9563天然けい砂（含むがいろ目けい砂）（精鉱）ｔ
--   9571石灰石（粗鉱）ｔ 9572石灰石（精鉱）ｔ 9591陶石（粗鉱）ｔ 9592陶石（精鉱）ｔ 9593陶石クレー（製品）ｔ
--   9594カオリン（粗鉱）ｔ 9595カオリン（精鉱）ｔ 9599その他の窯業原料用鉱物【dummy】 9911酸性白土（粗鉱）ｔ
--   9912酸性白土（精鉱）ｔ 9921ベントナイト（粗鉱）ｔ 9922ベントナイト（精鉱）ｔ 9931けいそう土（粗鉱）ｔ
--   9932けいそう土（精鉱）ｔ 9941滑石（粗鉱）ｔ 9942滑石（精鉱）ｔ
--   9999他に分類されないその他の鉱物【dummy】</pre></li>
--   </ul>
fデータ変換_生産_鉱業_数量 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | <ul>
--   <li>k24</li>
--   </ul>
--   
--   <pre>
--   F440_111金鉱（精含量）
--   F441_112銀鉱（精含量）
--   F442_121鉛鉱（精含量）
--   F443_122亜鉛鉱（精含量）
--   F444_131鉄鉱（精含量）
--   F445_191銅鉱（精含量）
--   F446_199その他の金属鉱物
--   F447_211石炭（精炭）
--   F448_221亜炭（精炭）
--   F449_311原油
--   F450_321天然ガス（基準状態）
--   F451_329他の原油・天然ガス
--   F452_411花こう岩・同類似岩石（製品）
--   F453_421石英粗面岩・同類似岩石（製品）
--   F454_431安山岩・同類似岩石（製品）
--   F455_441大理石（製品）
--   F456_451ぎょう灰岩（製品）
--   F457_461砂岩（製品）
--   F458_471粘板岩（製品）
--   F459_481砂・砂利・玉石
--   F460_491かんらん岩（粗鉱）
--   F461_492かんらん岩（精鉱）
--   F462_493オリビンサンド（製品）
--   F463_499その他の採石、砂・砂利・玉石
--   F464_511木節・頁岩粘土（粗鉱）
--   F465_512木節・頁岩粘土（精鉱）
--   F466_513がいろ目粘土（粗鉱）
--   F467_514がいろ目粘土（精鉱）
--   F468_519その他の耐火粘土
--   F469_521ろう石（粗鉱）
--   F470_522ろう石（精鉱）
--   F471_523ろう石クレー（製品）
--   F472_531ドロマイト（粗鉱）
--   F473_532ドロマイト（精鉱）
--   F474_541長石（粗鉱）
--   F475_542長石（精鉱）
--   F476_543半花こう岩（粗鉱）
--   F477_544半花こう岩（精鉱）
--   F478_545風化花こう岩（含むサバ）（粗鉱）
--   F479_546風化花こう岩（含むサバ）（精鉱）
--   F480_551軟けい石（粗鉱）
--   F481_552軟けい石（精鉱）
--   F482_553白・炉材けい石（粗鉱）
--   F483_554白・炉材けい石（精鉱）
--   F484_561人造けい砂（製品）
--   F485_562天然けい砂（含むがいろ目けい砂）（粗鉱）
--   F486_563天然けい砂（含むがいろ目けい砂）（精鉱）
--   F487_571石灰石（粗鉱）
--   F488_572石灰石（精鉱）
--   F489_591陶石（粗鉱）
--   F490_592陶石（精鉱）
--   F491_593陶石クレー（製品）
--   F492_594カオリン（粗鉱）
--   F493_595カオリン（精鉱）
--   F494_599その他の窯業原料用鉱物
--   F495_911酸性白土（粗鉱）
--   F496_912酸性白土（精鉱）
--   F497_921ベントナイト（粗鉱）
--   F498_922ベントナイト（精鉱）
--   F499_931けいそう土（粗鉱）
--   F500_932けいそう土（精鉱）
--   F501_941滑石（粗鉱）
--   F502_942滑石（精鉱）
--   F503_999他に分類されないその他の鉱物
--   </pre>
--   
--   <ul>
--   <li>KM28<pre>補正＿９１１１金鉱（精含量） 補正＿９１１２銀鉱（精含量） 補正＿９１２１鉛鉱（精含量）
--   補正＿９１２２亜鉛鉱（精含量） 補正＿９１３１鉄鉱（精含量） 補正＿９１９１銅鉱（精含量） 補正＿９１９９その他の金属鉱物
--   補正＿９２１１石炭（精炭） 補正＿９２２１亜炭（精炭） 補正＿９３１１原油 補正＿９３２１天然ガス（基準状態）
--   補正＿９３２９その他の原油・天然ガス 補正＿９４１１花こう岩・同類似岩石（製品） 補正＿９４２１石英粗面岩・同類似岩石（製品）
--   補正＿９４３１安山岩・同類似岩石（製品） 補正＿９４４１大理石（製品） 補正＿９４５１ぎょう灰岩（製品） 補正＿９４６１砂岩（製品）
--   補正＿９４７１粘板岩（製品） 補正＿９４８１砂・砂利・玉石 補正＿９４９１かんらん岩（粗鉱） 補正＿９４９２かんらん岩（精鉱）
--   補正＿９４９３オリビンサンド（製品） 補正＿９４９９その他の採石、砂・砂利・玉石 補正＿９５１１木節・頁岩粘土（粗鉱）
--   補正＿９５１２木節・頁岩粘土（精鉱） 補正＿９５１３がいろ目粘土（粗鉱） 補正＿９５１４がいろ目粘土（精鉱） 補正＿９５１９その他の耐火粘土
--   補正＿９５２１ろう石（粗鉱） 補正＿９５２２ろう石（精鉱） 補正＿９５２３ろう石クレー（製品） 補正＿９５３１ドロマイト（粗鉱）
--   補正＿９５３２ドロマイト（精鉱） 補正＿９５４１長石（粗鉱） 補正＿９５４２長石（精鉱） 補正＿９５４３半花こう岩（粗鉱）
--   補正＿９５４４半花こう岩（精鉱） 補正＿９５４５風化花こう岩（含むサバ）（粗鉱） 補正＿９５４６風化花こう岩（含むサバ）（精鉱）
--   補正＿９５５１軟けい石（粗鉱） 補正＿９５５２軟けい石（精鉱） 補正＿９５５３白・炉材けい石（粗鉱） 補正＿９５５４白・炉材けい石（精鉱）
--   補正＿９５６１人造けい砂（製品） 補正＿９５６２天然けい砂（含むがいろ目けい砂）（粗鉱）
--   補正＿９５６３天然けい砂（含むがいろ目けい砂）（精鉱） 補正＿９５７１石灰石（粗鉱） 補正＿９５７２石灰石（精鉱）
--   補正＿９５９１陶石（粗鉱） 補正＿９５９２陶石（精鉱） 補正＿９５９３陶石クレー（製品） 補正＿９５９４カオリン（粗鉱）
--   補正＿９５９５カオリン（精鉱） 補正＿９５９９その他の窯業原料用鉱物 補正＿９９１１酸性白土（粗鉱） 補正＿９９１２酸性白土（精鉱）
--   補正＿９９２１ベントナイト（粗鉱） 補正＿９９２２ベントナイト（精鉱） 補正＿９９３１けいそう土（粗鉱） 補正＿９９３２けいそう土（精鉱）
--   補正＿９９４１滑石（粗鉱） 補正＿９９４２滑石（精鉱） 補正＿９９９９他に分類されないその他の鉱物</pre></li>
--   </ul>
fデータ変換_生産_鉱業_金額 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | <ul>
--   <li>SC24</li>
--   </ul>
--   
--   <pre>
--   01稲作
--   02麦類・雑穀・豆類
--   03いも類
--   04工芸農作物
--   05野菜（きのこ栽培を含む）
--   06果樹類
--   07花き・花木
--   08その他の作物
--   09酪農
--   10肉用牛
--   11養豚
--   12養鶏
--   13養蚕
--   14その他の畜産
--   15実験用・愛がん動物等
--   16穀作作業
--   17野菜・果樹作作業
--   18その他の耕種作業
--   19畜産
--   20造園・植木業
--   21育林業
--   22素材生産業
--   23育林サービス
--   24素材生産サービス
--   25山林種苗生産サービス
--   26その他の林業サービス
--   27薪炭生産
--   28きのこ採取・うるし採取等
--   29その他の林業（狩猟業等）
--   30底びき網
--   31地びき網・船びき網
--   32まき網
--   33刺網
--   34定置網
--   35釣・はえ縄
--   36捕鯨
--   37採貝・採藻
--   38その他の海面漁業
--   39内水面漁業
--   40魚類養殖
--   41貝類養殖
--   42海藻類養殖
--   43真珠養殖（真珠母貝養殖を除く）
--   44種苗養殖（真珠母貝養殖を含む）
--   45その他の海面養殖
--   46内水面養殖業
--   </pre>
--   
--   <ul>
--   <li>SC28</li>
--   </ul>
--   
--   <pre>
--   補正＿０１稲作
--   補正＿０２麦類・雑穀・豆類
--   補正＿０３いも類
--   補正＿０４工芸農作物
--   補正＿０５野菜（きのこ栽培を含む）
--   補正＿０６果樹類
--   補正＿０７花き・花木
--   補正＿０８その他の作物
--   補正＿０９酪農
--   補正＿１０肉用牛
--   補正＿１１養豚
--   補正＿１２養鶏
--   補正＿１３養蚕
--   補正＿１４その他の畜産
--   補正＿１５実験用・愛がん動物等
--   補正＿１６穀作作業
--   補正＿１７野菜・果樹作作業
--   補正＿１８その他の耕種作業
--   補正＿１９畜産
--   補正＿２０造園・植木業
--   補正＿２１育林業
--   補正＿２２素材生産業
--   補正＿２３育林サービス
--   補正＿２４素材生産サービス
--   補正＿２５山林種苗生産サービス
--   補正＿２６その他の林業サービス
--   補正＿２７薪炭生産
--   補正＿２８きのこ採取・うるし採取等
--   補正＿２９その他の林業（狩猟業等）
--   補正＿３０底びき網
--   補正＿３１地びき網・船びき網
--   補正＿３２まき網
--   補正＿３３刺網
--   補正＿３４定置網
--   補正＿３５釣・はえ縄
--   補正＿３６捕鯨
--   補正＿３７採貝・採藻
--   補正＿３８その他の海面漁業
--   補正＿３９内水面漁業
--   補正＿４０魚類養殖
--   補正＿４１貝類養殖
--   補正＿４２海藻類養殖
--   補正＿４３真珠養殖（真珠母貝養殖を除く）
--   補正＿４４種苗養殖（真珠母貝養殖を含む）
--   補正＿４５その他の海面養殖
--   補正＿４６内水面養殖業
--   </pre>
--   
--   <ul>
--   <li>K無視</li>
--   </ul>
fデータ変換_生産_農林漁業_金額 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>卸部門か小売部門か判別する.</li>
--   <li>k24 F954_卸売部門又は小売部門の別</li>
--   <li>KC28 卸売部門又は小売部門の別</li>
--   <li>S無視</li>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F955_[商業]分類番号１位
--   F956_[商業]分類番号２位
--   F957_[商業]分類番号３位
--   F958_[商業]分類番号４位
--   F959_[商業]分類番号５位
--   F960_[商業]分類番号６位
--   F961_[商業]分類番号７位
--   F962_[商業]分類番号８位
--   F963_[商業]分類番号９位
--   F964_[商業]分類番号10位
--   F965_[商業]販売金額１位
--   F966_[商業]販売金額２位
--   F967_[商業]販売金額３位
--   F968_[商業]販売金額４位
--   F969_[商業]販売金額５位
--   F970_[商業]販売金額６位
--   F971_[商業]販売金額７位
--   F972_[商業]販売金額８位
--   F973_[商業]販売金額９位
--   F974_[商業]販売金額10位
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   (商業)分類番号１位
--   (商業)分類番号２位
--   (商業)分類番号３位
--   (商業)分類番号４位
--   (商業)分類番号５位
--   (商業)分類番号６位
--   (商業)分類番号７位
--   (商業)分類番号８位
--   (商業)分類番号９位
--   (商業)分類番号10位
--   補正＿［商業］販売金額１位
--   補正＿［商業］販売金額２位
--   補正＿［商業］販売金額３位
--   補正＿［商業］販売金額４位
--   補正＿［商業］販売金額５位
--   補正＿［商業］販売金額６位
--   補正＿［商業］販売金額７位
--   補正＿［商業］販売金額８位
--   補正＿［商業］販売金額９位
--   補正＿［商業］販売金額１０位
--   </pre>
--   
--   <ul>
--   <li>K他 無視</li>
--   </ul>
fデータ変換_商品別卸売額 :: FileType -> HeaderTexts -> [Text] -> Val
fデータ変換_商品別小売額 :: FileType -> HeaderTexts -> [Text] -> Val
fデータ変換_事業所形態_医療福祉 :: FileType -> HeaderTexts -> [Text] -> Val
fデータ変換_事業収入_医療福祉 :: FileType -> HeaderTexts -> [Text] -> Val

-- | ｢出荷額,在庫額,加工賃,製造業以外｣はKMP のみデータの構造が他と異なるため,別の処理を行う必要がある. Cars を返す
fデータ変換_出荷額_製造業 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | 出荷額,在庫額,加工賃,製造業以外KMP のみデータの構造が他と異なるため,別の処理を行う必要がある. * K24
fデータ変換_在庫額_製造業 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | 出荷額,在庫額,加工賃,製造業以外KMP のみデータの構造が他と異なるため,別の処理を行う必要がある. * K24
fデータ変換_収入額_加工賃 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | <ul>
--   <li>K24 : VDC.s24製造業製造業以外 28 年は KMPなので独自に変換</li>
--   </ul>
fデータ変換_収入額_製造業以外 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | 非製造業からの委託を受けて生産する 分については、 次に掲げる式により、加工賃収入 額に付加価値率の逆数を乗ずることにより、原材
--   料費等を含んだ国内生産額を推計している。 (IO推計解説書 pp35)
--   
--   [国内生産額 = 加工賃収入額 times frac{製品価額}{製品額-原材料費}]
--   
--   K24 : F508_原材料使用額 KMI28 : 原材料使用額
fデータ変換_原材料使用額 :: FileType -> HeaderTexts -> [Text] -> ValDouble
fデータ変換_収入内訳_学校 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | SJ24 : 学校等の種類 SJ28 : 学校教育の種類
fデータ変換_学校等の種類 :: FileType -> HeaderTexts -> [Text] -> ValText

-- | <ul>
--   <li>K24 :F536_[年初]製造品①</li>
--   <li>KMI28 : 年初在庫製造品</li>
--   </ul>
fデータ変換_年初製造品在庫額 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 : F537_[年末]製造品①</li>
--   <li>KMI28 : 年末在庫製造品</li>
--   </ul>
fデータ変換_年末製造品在庫額 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 : F538_F538_[年初]半製品及び仕掛品②</li>
--   <li>KMI28 : 年初在庫半製品</li>
--   </ul>
fデータ変換_年初半製品及び仕掛品 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 : F539_[年末]半製品及び仕掛品②</li>
--   <li>KMI28 : 年末在庫半製品</li>
--   </ul>
fデータ変換_年末半製品及び仕掛品 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 : F540_[年初]原材料及び燃料③</li>
--   <li>KMI28 : 年初在庫原材料</li>
--   </ul>
fデータ変換_年初原材料及び燃料 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 : F540_[年初]原材料及び燃料③</li>
--   <li>KMI28 : 年末在庫原材料</li>
--   </ul>
fデータ変換_年末原材料及び燃料 :: FileType -> HeaderTexts -> [Text] -> Val

-- | Cars nameは産業細分類に変換 * SM24
--   
--   <pre>
--   [リース]産業機械
--   [リース]工作機械
--   [リース]土木・建設機械
--   [リース]医療用機器
--   [リース]商業用機械・設備
--   [リース]通信機器
--   [リース]サービス業用機械・設備
--   [リース]その他の産業用機械・設備
--   [リース]電子計算機・同関連機器
--   [リース]事務用機器
--   [リース]自動車
--   [リース]スポーツ・娯楽用品
--   [リース]映画・演劇用品
--   [リース]音楽・映像記録物
--   [リース]貸衣しょう
--   [リース]その他
--   </pre>
--   
--   <ul>
--   <li>SM28<pre>[リース]産業機械 [リース]工作機械 [リース]土木・建設機械 [リース]医療用機器 [リース]商業用機械・設備
--   [リース]通信機器 [リース]サービス業用機械・設備 [リース]その他の産業用機械・設備 [リース]電子計算機・同関連機器
--   [リース]事務用機器 [リース]自動車 [リース]スポーツ・娯楽用品 [リース]映画・演劇用品 [リース]音楽・映像記録物
--   [リース]貸衣しょう [リース]その他 </pre></li>
--   </ul>
fデータ変換_商品別リース契約高 :: FileType -> HeaderTexts -> [Text] -> Val

-- | Cars nameは産業細分類に変換 * SM24
--   
--   <pre>
--   [レンタル]産業機械
--   [レンタル]工作機械
--   [レンタル]土木・建設機械
--   [レンタル]医療用機器
--   [レンタル]商業用機械・設備
--   [レンタル]通信機器
--   [レンタル]サービス業用機械・設備
--   [レンタル]その他の産業用機械・設備
--   [レンタル]電子計算機・同関連機器
--   [レンタル]事務用機器
--   [レンタル]自動車
--   [レンタル]スポーツ・娯楽用品
--   [レンタル]映画・演劇用品
--   [レンタル]音楽・映像記録物
--   [レンタル]貸衣しょう
--   [レンタル]その他
--   </pre>
--   
--   <ul>
--   <li>SM28<pre>[レンタル]産業機械 [レンタル]工作機械 [レンタル]土木・建設機械 [レンタル]医療用機器
--   [レンタル]商業用機械・設備 [レンタル]通信機器 [レンタル]サービス業用機械・設備 [レンタル]その他の産業用機械・設備
--   [レンタル]電子計算機・同関連機器 [レンタル]事務用機器 [レンタル]自動車 [レンタル]スポーツ・娯楽用品 [レンタル]映画・演劇用品
--   [レンタル]音楽・映像記録物 [レンタル]貸衣しょう [レンタル]その他 </pre></li>
--   </ul>
fデータ変換_商品別レンタル売上高 :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | VDouble * SM24 : レンタル年間売上高 * SM28 : 補正＿レンタル年間売上高
fデータ変換_レンタル総売上高 :: FileType -> HeaderTexts -> [Text] -> Val

-- | VDouble * SM24 : リース年間契約高 * SM28 : 補正＿リース年間契約高
fデータ変換_リース年間契約高 :: FileType -> HeaderTexts -> [Text] -> Val
fデータ変換_相手先別収入割合_サB :: FileType -> HeaderTexts -> [Text] -> Val

-- | V相手先別収入割合_医療福祉 * S24 :
--   
--   <pre>
--   ①個人（一般消費者）
--   ②民間
--   ③公務（官公庁）
--   ④海外取引
--   ⑤同一企業内取引
--   </pre>
--   
--   <ul>
--   <li>S28 :<pre>㈰個人（一般消費者） ㈪民間 ㈫公務（官公庁） ㈬海外取引 ㈭同一企業内取引 </pre></li>
--   </ul>
fデータ変換_相手先別収入割合_医療福祉 :: FileType -> HeaderTexts -> [Text] -> Val

-- | VDouble * K24 : F989_修理料収入額 * KC28 : 補正＿修理料収入額 * S : 対応項目なし
fデータ変換_修理手数料収入_商業 :: FileType -> HeaderTexts -> [Text] -> ValDouble

-- | VDouble * k24 F987_仲立手数料収入額 * KC28 補正＿仲立手数料収入額
fデータ変換_仲立手数料収入_商業 :: FileType -> HeaderTexts -> [Text] -> ValDouble

-- | VDouble 24年のみ
fデータ変換_商品売上原価 :: FileType -> HeaderTexts -> [Text] -> Val

-- | VDouble * KC28のみ * KC28 : 補正＿年初商品手持額
fデータ変換_年初商品手持額 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 28年Kのみ * KC28 : 補正＿年末商品手持額
fデータ変換_年末商品手持額 :: FileType -> HeaderTexts -> [Text] -> ValDouble

-- | <ul>
--   <li>KMI28 : 転売した商品の仕入額</li>
--   <li>KC28 : 補正＿年間商品仕入額</li>
--   <li>K24 : F513_転売した商品の仕入額</li>
--   <li>S : 該当項目なし</li>
--   </ul>
fデータ変換_年間仕入額 :: FileType -> HeaderTexts -> [Text] -> Val
fデータ変換_対象年度 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>s24 "消費税の取扱い " 全角スペースが混ざっているので注意（素敵ですね）</li>
--   </ul>
--   
--   <pre>
--   1 消費税抜き △ 消費税込
--   </pre>
--   
--   <ul>
--   <li>k24 F137_消費税の取扱い</li>
--   </ul>
--   
--   <pre>
--   1 消費税抜き △ 消費税込 -- 要確認
--   </pre>
--   
--   <ul>
--   <li>28 デフォルトで税込み</li>
--   </ul>
fデータ変換_消費税記入の別 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>S24</li>
--   </ul>
--   
--   <pre>
--   [集]ア農業、林業、漁業収入
--   [集]イ鉱物、採石、砂利採取事業収入
--   [集]ウ製造品の売上金額
--   [集]エ㈰卸売販売額
--   [集]エ㈪小売販売額
--   [集]オ㈫建設事業収入
--   [集]オ㈬電気、ガス、熱供給、水道事業収入
--   [集]オ㈭通信、放送等事業収入
--   [集]オ㈮運輸、郵便事業収入
--   [集]オ㈯金融、保険事業収入
--   [集]オ㉀政治・経済・団体活動収入
--   [集]カ㈷情報サービス等事業収入
--   [集]カ㉂不動産事業収入
--   [集]カ㉃物品賃貸事業収入
--   [集]カ㈹学術研究、専門・技術サービス事業収入
--   [集]カ㈺宿泊事業収入
--   [集]カ㈱飲食サービス事業収入
--   [集]カ㈾生活関連サービス業、娯楽事業収入
--   [集]カ㈴学習支援事業収入
--   [集]カ㈲上記以外サービス事業収入
--   [集]キ学校教育事業収入
--   [集]ク医療、福祉事業収入
--   [集]事業別売上金額不詳
--   </pre>
--   
--   <ul>
--   <li>S28<pre> 補正＿ア１農業、林業、漁業の収入 補正＿イ２鉱物、採石、砂利採取事業の収入
--   補正＿ウ３製造品の出荷額・加工賃収入額／売上金額 補正＿エ４卸売の商品販売額（代理・仲立手数料を含む） 補正＿オ５小売の商品販売額
--   補正＿カ６建設事業の収入（完成工事高） 補正＿カ７電気、ガス、熱供給、水道事業の収入
--   補正＿カ８通信、放送、映像・音声・文字情報制作事業の収入 補正＿カ９運輸、郵便事業の収入 補正＿カ１０金融、保険事業の収入
--   補正＿カ１１政治・経済・文化団体の活動収入 補正＿キ１２情報サービス、インターネット附随サービス事業の収入 補正＿キ１３不動産事業の収入
--   補正＿キ１４物品賃貸事業の収入 補正＿キ１５学術研究、専門・技術サービス事業の収入 補正＿キ１６宿泊事業の収入
--   補正＿キ１７飲食サービス事業の収入 補正＿キ１８生活関連サービス業、娯楽事業の収入 補正＿キ１９社会教育、学習支援事業の収入
--   補正＿キ２０上記以外のサービス事業の収入 補正＿ク２１学校教育事業の収入 補正＿ケ２２医療、福祉事業の収入 補正＿事業別売上金額不詳
--   </pre></li>
--   </ul>
fデータ変換_事業別売上高 :: FileType -> HeaderTexts -> [Text] -> Val

-- | 製造業(K)だけで良い * S 無視 * K24 F942_製造品出荷額等に占める直接輸出額の割合 * KMI28
--   出荷額等に占める直接輸出額割合
fデータ変換_輸出割合 :: FileType -> HeaderTexts -> [Text] -> ValDouble
fデータ変換_事業形態 :: FileType -> HeaderTexts -> [Text] -> Val事業形態

-- | 作業で行うのでNull
fデータ変換_産業格付 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>S28</li>
--   </ul>
--   
--   <pre>
--   [事]産業大分類
--   [事]産業1.5分類
--   [事]産業中分類
--   [事]産業小分類
--   [事]産業3.5分類
--   [事]産業細分類
--   </pre>
--   
--   <ul>
--   <li>S24</li>
--   </ul>
--   
--   <pre>
--   [事]産業大分類（最新）
--   [事]産業1.5桁分類（最新）
--   [事]産業中分類（最新）
--   [事]産業3.5桁分類（最新）
--   [事]産業小分類（最新）
--   [事]産業細分類（最新）
--   </pre>
--   
--   <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F237_[事]産業大分類（最新）
--   F238_[事]産業1.5桁分類（最新）
--   F239_[事]産業中分類（最新）
--   F240_[事]産業3.5桁分類（最新）
--   F241_[事]産業小分類（最新）
--   F242_[事]産業細分類（最新）
--   </pre>
--   
--   <ul>
--   <li>K28</li>
--   </ul>
--   
--   <pre>
--   [事]産業大分類
--   [事]産業1.5分類
--   [事]産業中分類
--   [事]産業小分類
--   [事]産業3.5分類
--   [事]産業細分類
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   (事)産業大分類
--   (事)産業1#5分類
--   (事)産業中分類
--   (事)産業小分類
--   (事)産業3#5分類
--   (事)産業細分類
--   </pre>
--   
--   <ul>
--   <li>KM28</li>
--   </ul>
--   
--   <pre>
--   (事)産業大分類
--   (事)産業1#5分類
--   (事)産業中分類
--   (事)産業小分類
--   (事)産業3#5分類
--   (事)産業細分類
--   </pre>
--   
--   <ul>
--   <li>KMI, KPI 無視</li>
--   <li>1.5分類と,3.5分類は,それぞれ大分類,小分類と区別がつかないものがあるので,戦闘に "15" を足す</li>
--   </ul>
fデータ変換_事前格付_事業所 :: FileType -> HeaderTexts -> [Text] -> Val産業格付

-- | <ul>
--   <li>S24</li>
--   </ul>
--   
--   <pre>
--   [企]産業大分類（最新）
--   [企]産業1.5桁分類（最新）
--   [企]産業中分類（最新）
--   [企]産業3.5桁分類（最新）
--   [企]産業小分類（最新）
--   [企]産業細分類（最新）
--   </pre>
--   
--   <ul>
--   <li>S28</li>
--   </ul>
--   
--   <pre>
--   [企]産業大分類
--   [企]産業1.5分類
--   [企]産業中分類
--   [企]産業小分類
--   [企]産業3.5分類
--   </pre>
--   
--   <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F231_[企]産業大分類（最新）
--   F232_[企]産業1.5桁分類（最新）
--   F233_[企]産業中分類（最新）
--   F234_[企]産業3.5桁分類（最新）
--   F235_[企]産業小分類（最新）
--   F236_[企]産業細分類（最新）
--   </pre>
--   
--   <ul>
--   <li>K28</li>
--   </ul>
--   
--   <pre>
--   [企]産業大分類
--   [企]産業1.5分類
--   [企]産業中分類
--   [企]産業小分類
--   [企]産業3.5分類
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   (企)産業大分類
--   (企)産業1#5分類
--   (企)産業中分類
--   (企)産業小分類
--   (企)産業3#5分類
--   </pre>
--   
--   <ul>
--   <li>KM, KMI, KPI 無視</li>
--   <li>1.5分類と,3.5分類は,それぞれ大分類,小分類と区別がつかないものがあるので,戦闘に "15" を足す</li>
--   </ul>
fデータ変換_事前格付_企業 :: FileType -> HeaderTexts -> [Text] -> Val産業格付

-- | SK24 : 主な事業の種類 SK28 : 主な事業の種類
fデータ変換_事業の種類 :: FileType -> HeaderTexts -> [Text] -> ValText

-- | VBool を返す * S28 : 信用・共済事業の有無 * S24 : 信用事業又は共済事業の実施の有無 * K : 項目なし
fデータ変換_信用共済事業の有無 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K :: 項目なし</li>
--   <li>S :: 協同組合の種類</li>
--   <li>ただし,24年,28年で回答形式が異なる</li>
--   </ul>
--   
--   (28年は,その他の事業協同組合と事業協同組合が統合&gt;&gt;E事業協同組合として扱う)
fデータ変換_協同組合の種類 :: FileType -> HeaderTexts -> [Text] -> Val

-- | S * 28 全て 団体の種類 * SK24 建設サービスA 政治・経済・文化団体、宗教団体の団体種類 * K 項目なし
fデータ変換_団体の種類 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>SM28 ［事・サＢ］８時間換算雇用者数</li>
--   <li>K28 ［事・サＢ］８時間換算雇用者数</li>
--   <li>SM24 「飲食サービス業」の８時間換算雇用者数</li>
--   </ul>
fデータ変換_8時間換算雇用者数_サB :: FileType -> HeaderTexts -> [Text] -> Val

-- | VDouble * S28 : ８時間換算雇用者数（卸・小） * K24 : F132_８時間換算雇用者数(卸・小) * KC28 :
--   ８時間換算雇用者数（卸・小）
fデータ変換_8時間換算雇用者数_商業 :: FileType -> HeaderTexts -> [Text] -> Val

-- | <ul>
--   <li>K24 F1002_売場面積</li>
--   <li>KC28 ［事・卸小売］売場面積</li>
--   </ul>
fデータ変換_売場面積 :: FileType -> HeaderTexts -> [Text] -> ValDouble

-- | <ul>
--   <li>K24 F1001_セルフサービス方式の採用</li>
--   <li>KC28 セルフサービス方式の採用</li>
--   </ul>
--   
--   28年の定義書がないので，値の意味に関しては要確認
fデータ変換_セルフサービス :: FileType -> HeaderTexts -> [Text] -> ValBool

-- | <ul>
--   <li>K24<pre>F1003_営業時間の形態 F1004_開店時刻（午前・午後） F1005_開店時刻（時）
--   F1007_閉店時刻（午前・午後） F1008_閉店時刻（時）</pre></li>
--   <li>KC28<pre>営業時間の形態 開店時刻（午前・午後） 開店時刻（時） 閉店時刻（午前・午後）
--   閉店時刻（時）</pre></li>
--   </ul>
fデータ変換_開店閉店期間 :: FileType -> HeaderTexts -> [Text] -> ValInt

-- | <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F992_①衣料品
--   F993_②飲食料品
--   F994_③その他
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   ・衣料品
--   ・飲食料品
--   ・その他
--   </pre>
fデータ変換_商品形態 :: FileType -> HeaderTexts -> [Text] -> Val商品形態

-- | <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F995_①店頭販売
--   F996_②訪問販売
--   F997_③通信・カタログ販売
--   F998_④インターネット販売
--   F999_⑤自動販売機による販売
--   F1000_⑥その他
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   ・店頭販売
--   ・訪問販売
--   ・通信・カタログ販売(インターネット以外)
--   ・インターネット販売
--   ・自動販売機による販売
--   ・その他
--   </pre>
fデータ変換_販売形態 :: FileType -> HeaderTexts -> [Text] -> Val販売形態

-- | <ul>
--   <li>K24</li>
--   </ul>
--   
--   <pre>
--   F1010_店舗形態
--   </pre>
--   
--   <ul>
--   <li>KC28</li>
--   </ul>
--   
--   <pre>
--   店舗形態
--   </pre>
fデータ変換_店舗形態_商業 :: FileType -> HeaderTexts -> [Text] -> Val店舗形態_商業

-- | <ul>
--   <li>SK24<pre>[建サＡ]分類番号１位 [建サＡ]分類番号２位 [建サＡ]分類番号３位 [建サＡ]分類番号４位
--   [建サＡ]分類番号５位 [建サＡ]分類番号６位 [建サＡ]分類番号７位 [建サＡ]分類番号８位 [建サＡ]分類番号９位
--   [建サＡ]分類番号10位 [建サＡ]売上（収入）金額１位 [建サＡ]売上（収入）金額２位 [建サＡ]売上（収入）金額３位
--   [建サＡ]売上（収入）金額４位 [建サＡ]売上（収入）金額５位 [建サＡ]売上（収入）金額６位 [建サＡ]売上（収入）金額７位
--   [建サＡ]売上（収入）金額８位 [建サＡ]売上（収入）金額９位 [建サＡ]売上（収入）金額10位</pre></li>
--   <li>S28<pre>[建サＡ]分類番号１位 [建サＡ]分類番号２位 [建サＡ]分類番号３位 [建サＡ]分類番号４位
--   [建サＡ]分類番号５位 [建サＡ]分類番号６位 [建サＡ]分類番号７位 [建サＡ]分類番号８位 [建サＡ]分類番号９位
--   [建サＡ]分類番号10位 補正＿［建サＡ］売上（収入）金額１位 補正＿［建サＡ］売上（収入）金額２位 補正＿［建サＡ］売上（収入）金額３位
--   補正＿［建サＡ］売上（収入）金額４位 補正＿［建サＡ］売上（収入）金額５位 補正＿［建サＡ］売上（収入）金額６位
--   補正＿［建サＡ］売上（収入）金額７位 補正＿［建サＡ］売上（収入）金額８位 補正＿［建サＡ］売上（収入）金額９位
--   補正＿［建サＡ］売上（収入）金額１０位</pre></li>
--   </ul>
fデータ変換_事業収入_建サA :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | SK◯◯ :: 工事種類1,工事種類2
fデータ変換_工事種類 :: FileType -> HeaderTexts -> [Text] -> Val工事種類

-- | SK24 : 金融業、保険業、郵便局受託業の事業種類 SK28 : 金融業、保険業、郵便局受託業の事業種類
fデータ変換_金融業保険業の事業種類 :: FileType -> HeaderTexts -> [Text] -> ValText

-- | 平成24，28年の事業所調査票（サービス関連産業B）においては， サービス関連産業Bの事業収入内訳において，
--   産業分類中分類程度の区分での売上（収入）金額を聞いており， 調査項目「施設・店舗等形態」において，産業小分類程度の区分を聞いている．
--   
--   11 ~ 74 の数字
--   
--   SM24 : 施設・店舗等の形態番号 SM28 : 施設・店舗等形態
fデータ変換_店舗形態_サB :: FileType -> HeaderTexts -> [Text] -> ValText

-- | SM24
--   
--   <pre>
--   [サＢ]分類番号１位
--   [サＢ]分類番号２位
--   [サＢ]分類番号３位
--   [サＢ]分類番号４位
--   [サＢ]分類番号５位
--   [サＢ]分類番号６位
--   [サＢ]分類番号７位
--   [サＢ]分類番号８位
--   [サＢ]分類番号９位
--   [サＢ]分類番号10位
--   [サＢ]売上（収入）金額１位
--   [サＢ]売上（収入）金額２位
--   [サＢ]売上（収入）金額３位
--   [サＢ]売上（収入）金額４位
--   [サＢ]売上（収入）金額５位
--   [サＢ]売上（収入）金額６位
--   [サＢ]売上（収入）金額７位
--   [サＢ]売上（収入）金額８位
--   [サＢ]売上（収入）金額９位
--   [サＢ]売上（収入）金額10位
--   </pre>
--   
--   SM28
--   
--   <pre>
--   [サＢ]分類番号１位
--   [サＢ]分類番号２位
--   [サＢ]分類番号３位
--   [サＢ]分類番号４位
--   [サＢ]分類番号５位
--   [サＢ]分類番号６位
--   [サＢ]分類番号７位
--   [サＢ]分類番号８位
--   [サＢ]分類番号９位
--   [サＢ]分類番号10位
--   補正＿［サＢ］売上（収入）金額１位
--   補正＿［サＢ］売上（収入）金額２位
--   補正＿［サＢ］売上（収入）金額３位
--   補正＿［サＢ］売上（収入）金額４位
--   補正＿［サＢ］売上（収入）金額５位
--   補正＿［サＢ］売上（収入）金額６位
--   補正＿［サＢ］売上（収入）金額７位
--   補正＿［サＢ］売上（収入）金額８位
--   補正＿［サＢ］売上（収入）金額９位
--   補正＿［サＢ］売上（収入）金額１０位
--   </pre>
fデータ変換_事業収入_サB :: FileType -> HeaderTexts -> [Text] -> ValCars

-- | SM24 : 同業者との契約割合 SM28 : 特定のサービス業における同業者との契約割合
fデータ変換_同業者割合 :: FileType -> HeaderTexts -> [Text] -> ValDouble

-- | 元データには含まれないのでダミー
--   
--   convertLine の時にNullを返すためだけに存在する
fデータ変換_事業所別生産物別売上高 :: FileType -> HeaderTexts -> [Text] -> Val

-- | id のみでOrdが定義されるデータ型
data ForSort
FS :: Text -> Int -> ForSort
[idtext] :: ForSort -> Text
[idx] :: ForSort -> Int

-- | ForSortに変換して事業所番号でソートする
sortKMP :: IO ()
forSyntax :: Integer

-- | 品目番号から,製造品,賃加工,製造業以外に分類するためのデータ型
data CommodityType

-- | 製造品
Pr :: Text -> CommodityType

-- | 賃加工
Elb :: Text -> CommodityType

-- | 製造業以外
Oth :: Text -> CommodityType

-- | 品目番号から,製造品,賃加工,製造業以外に分類するための関数
whichCommodityType :: Text -> CommodityType

-- | 出荷額,在庫額,加工賃,製造業以外KMP のみデータの構造が他と異なるため,別の処理を行う必要がある.
--   事業所単位で,とれるもの以外はNullにしたデータを作成し,Header後に統合する.
--   
--   KMIは工業統計調査の商品分類に従って一行1商品でデータが構成されているので,事業所番号でソートして
--   上から順に読み込み,事業所が変わったら一行書き込みを行う.
--   
--   KMP28 を事業所番号でソート Textとして取得 →ベクトル化
--   
--   事業所番号を一列取得して,インデックスのペアをListのメソッドでソート インデックスで取得
--   
--   以下の,ヘッダー情報のみを持つcsvファイルを作成する.
--   
--   <ul>
--   <li>H事業所番号 &gt; （28センサスキー）(確定)市区町村コード(所在地) &gt;
--   （28センサスキー）(確定)調査区番号（所在地） &gt; （28センサスキー）(確定)事業所番号 &gt;
--   （28センサスキー）(確定)＊コード</li>
--   <li>H出荷額_製造業<pre>品目番号 出荷金額</pre></li>
--   <li>H在庫額_製造業<pre>品目番号 在庫金額</pre></li>
--   <li>H収入額_加工賃</li>
--   </ul>
--   
--   <pre>
--   品目番号
--   出荷金額
--   </pre>
--   
--   <ul>
--   <li>H収入額_製造業以外</li>
--   </ul>
--   
--   <pre>
--   品目番号
--   出荷金額
--   </pre>
--   
--   <ul>
--   <li>H収入額_製造業以外 VDC.c商品分類製造業以外 に含まれるか否かで判定.</li>
--   </ul>
convertKMP :: IO ()

-- | 一行から読めるだけ情報をとって変換する関数
convertLine :: FileType -> [Text] -> [Val]

-- | 元データからセンサスデータへの変換 * ファイルごとにセンサス形式に変更する * 一行読み込み,一行書き出し
convertData :: FileType -> OutputFile -> IO ()

-- | ConvertDataのConduit版早くなるのかは要検証
convertDataConduit :: FileType -> OutputFile -> IO ()

-- | 生産者
sourceConvert :: MonadResource m => FileType -> ConduitT a Text m ()

-- | 消費者
convertConduit :: (Monad m, MonadIO m) => FileType -> ConduitT Text Text m ()
convertWhole :: Year -> OutputFile -> IO ()
instance GHC.Classes.Eq VTable.Compilation.Conversion.CommodityType
instance GHC.Classes.Eq VTable.Compilation.Conversion.ForSort
instance GHC.Classes.Ord VTable.Compilation.Conversion.ForSort


-- | V表作表のためのモジュール
--   
--   <ul>
--   <li>表記をマニュアルと統一するために日本語を使っているので,等幅フォント推奨</li>
--   <li>エンコーディングに関して</li>
--   </ul>
--   
--   <pre>
--   入出力も含めてすべてUTF-8で統一する
--   Windowsでの起動は想定していないの，Dockerを利用して，Linux上で動かすこと
--   Docker for Windows を利用する場合はchcp 65001をしないとTemplateHaskell部分のコンパイルが通らない．
--   </pre>
--   
--   <ul>
--   <li>データ型の簡単な見方</li>
--   </ul>
--   
--   <pre>
--   f :: A -&gt; B -&gt; C
--   A と B を引数にとって，Cが返る．
--   </pre>
--   
--   <ul>
--   <li>処理にメモリが足りないので，Conduit を用いて逐次処理を行っている．</li>
--   </ul>
module VTable.Compilation

-- | 移行後S表の設計の議論に先立って，現行V表の推計手法を可能な限り詳細に検証する．
--   
--   「平成23年（2011年）産業連関表 総合解説編」によれば,V表は，平成17年まで工業統計調査，
--   商業統計調査及び，サービス業基本調査を主に用いて推計されており， 23年以降は対応する経済センサス-
--   活動調査の結果を主な資料として推計している． ただし，第13回産業連関技術会議資料
--   では，CTに関して17表以前に上記３つの統計以外から推計されていた農林水産， 建設，金融などの部門においては，経済センサスデータを用いず，
--   17年表以前の対応する基礎統計の値を国内総生産額（CT；Control Total）として用いているとの記述がある．
--   平成23年産業連関表付帯表V表作成手順は大まかには以下のようになる．まず，経済センサス-活動調査の結果を用いて，
--   産業別調査品目別売上額及び，産業別事業別売上額データを集計し，V表産業分類に合わせて分類の変換を行い，
--   他の資料と併せて得られたCTをセンサス組替表より得られた比率で案分することで，一次推計値を作成する．
--   
--   その後，その一次推計値を各種統計資料によって係数を調整することで公表値が作成される．
--   
--   また，屑・副産物に関しては，取引基本表における屑・副産物発生部門をV表産業分類へ組替え，
--   その値をセンサスから求められた産業×商品表の当該交点に計上している．
--   
--   このように，現行のV表の作成においては，主な資料として経済センサスを用いてはいるが，
--   様々な統計調査の値が複合的に用いられている．本来であれば，現行V表の作成手法とは，
--   それら利用される全ての基礎統計及びその利用方法をもれなく記載することとなるが，
--   経済センサス以外の基礎統計の値を利用する処理に関する資料は少なく，また，作業も各省庁によって多岐に渡るため，
--   その詳細を把握することは困難である．
--   
--   したがって，本稿では，それらの処理に関してまとめることはせず，可能な限り経済センサスを利用する部分にその対象を絞り，
--   他の資料が利用されている点に関してはその旨を言及した上で，経済センサスを利用した代替的な推計手法を掲載する．
--   これは，部分的にかけている推計手法では，全体像がつかみにくく，また，数値計算等を行う際に不具合が生じることにもよる．
--   したがって，本稿では，以降，現行のV表の作成手法の調査に当たって可能な限り，資料に基づいた推測を行うが，
--   ①資料の不足により詳細の把握できない箇所，②経済センサス以外の基礎統計をもとに推計されている個所，
--   の２点に関しては，多分に筆者の憶測が含まれている点に留意して頂きたい．
--   
--   本稿ではV表の作成は大まかに，以下①~⑤の作業を想定している．
--   なお，現行のV表の作成においては，屑，副産物の推計において取引基本表を経由しており，
--   経済センサス以外の各種基礎統計値もその推計に利用している．
--   本研究は，飽くまで同一データを利用することで推計手法毎の差異を分析することを目的としており，
--   センサスデータから直接的に値を構成するという点で，推計手法が現行のものとは異なる．
--   
--   幾つかの補足できない概念等もそのまま未把握として扱い，大きな項目については他の統計を用いて簡易的に推計するなど， 簡易的作成手法を採用する．
--   
compileVTable :: InputFile -> Double -> Year -> IO ()

-- | 分類が微妙に異なるものを一つ一つ対応しきれないので，ここで強制的に処理する．
--   
--   要修正
f不適当分削除 :: MonadIO m => ConduitT IOCensusRow IOCensusRow m ()

-- | ファイルを受け取って，在庫品評価調整を行って出力する
--   
--   <ul>
--   <li>N5 で３時間程度</li>
--   </ul>
full在庫品評価調整 :: InputFile -> Double -> IO ()

-- | 在庫品評価調整だけを行って出力する
f在庫品評価調整 :: (Monad m, MonadIO m) => ConduitT IOCensusRow IOCensusRow m ()
f在庫品評価調整処理 :: IOCensusRow -> IO ()

-- | 在庫品評価調整における産業別の処理を調査票の種類に応じて分岐する関数
f在庫品評価調整_分岐 :: Val調査票の種類 -> IOCensusRow -> IO ()

-- | 農林水産業に関して取得可能な売上金額は，主業は事業所調査票（農業，林業，漁業），
--   企業調査票（農業，林業，漁業）の双方から得られる「事業別売上（収入）金額」における「農業，林業，漁業の収入」及び，
--   裏面「農業，林業，漁業の収入の内訳」であり，共に売上（収入）金額が記入されているため，産出量の算出のためには，在庫品評価調整を必要とする．
--   
--   しかし，在庫，価格共にセンサス個票から推計することはできないため本稿では以降売上を算出として扱う．
f在庫品評価調整_農林水産業 :: IOCensusRow -> IO ()

-- | 鉱業，採石業，砂利採取業に関しては，各種調査票表面「事業所別売上（収入）金額」では売上を記入するためこの値を用いる場合には，
--   在庫品評価調整が必要となる．
--   
--   一方，事業所調査票（鉱業，採石業，砂利採取業）における裏面「生産数量及び生産金額」では，
--   発生主義に基づく生産数量及び金額を調査しているため，裏面の情報に関しては在庫品評価調整を必要としない．
--   
--   従って，本稿では，可能な限り表面の情報を裏面の情報に置き換えるため，事業所調査票裏面の合計額と表面の額の比から，
--   在庫品評価調整指数を作成し，それを副産物の推計の際に各従業の売上金額に乗じる処理を行う．
--   このような処理が実際に行われているかは不明であるが，本稿では，センサス集計及び，組替集計にてこれを行うものとして設計する．
f在庫品評価調整_鉱業 :: IOCensusRow -> IO ()

-- | 製造業は従業に関しては，各種調査票の表面「事業別売上（収入）金額」で売上を聞いており，
--   事業所調査票（製造業）裏面「製造品出荷額，在庫額等」では，「品目別製造品出荷額」及び「品目別製造品在庫額」を調査している．
--   また，同裏面調査項目「製造品在庫額，半製品，仕掛品の価額及び原材料，燃料の在庫額」において，事業所全体の年初年末「製造品」，
--   「半製品及び仕掛品」所有金額を調査している．
--   
--   これらの情報を利用して，製造業においては以下の処理を行う．
--   
--   製造業に関しては，製造品目が追記式であるため，表面の総和と裏面の総和が一致するとはかぎらないため，表面裏面それぞれで，処理を行う．
--   
--   <ul>
--   <li>表面<pre> 年初年末製造品在庫額，半製品及び仕掛品在庫額から名目在庫変動を求め，
--   名目在庫変動を売上高に足した総産出額を求める．</pre></li>
--   <li>裏面<pre>名目在庫額/年末製造品在庫額の比を求めてそれを，各品目別製造品在庫額に乗ずることで名目品目別在庫変動額を推計し，
--   それを品目別製造品出荷額に足すことで品目別製造品産出額を求める．</pre></li>
--   </ul>
f在庫品評価調整_製造業 :: IOCensusRow -> IO ()

-- | 商業における在庫概念は，各種企業調査票における「商品売上原価」や，
--   事業所調査票（卸売業，小売業）における裏面「（年末年初）商品手持額」によって調査されている．
--   それら名目在庫処理の詳細は「4.6.1商業マージン」の推計を参照．
f在庫品評価調整_商業 :: IOCensusRow -> IO ()

-- | 出版及び有形ソフトウェアは，在庫が計上されるが， 経済センサスの調査項目からは把握できないため，ここでは，収入金額=産出金額として扱う．
f在庫品評価調整_出版ソフトウェア :: IOCensusRow -> IO ()

-- | 建設業は各種調査票「事業別売上（収入）金額」において主業，
--   従業の総額を，「企業調査票（建設業，サービス関連産業A）」において主業の内訳を把握する．
--   SNAにおける建設業は，完成工事高の他に，未完成工事高もその生産金額に含むがこれらの未完成工事高は経済センサスにおける調査項目では把握できない．
--   したがって，本稿では建設業に関しては在庫品評価調整未完成工事高を含めない完成工事高分の売上額を生産額とみなして以後推計を行う．
f在庫品評価調整_建設業 :: IOCensusRow -> IO ()

-- | ファイルを受け取って，産業格付けを行った後出力
full産業格付 :: InputFile -> Double -> Year -> IO ()

-- | 産業格付のみを行うConduit
--   
--   以降の処理で必要のない部門に関しては,データを削除する.
--   
--   経済センサスでは，産業毎に売上，従業者数や業態などの集計を行うため，
--   その集計にあたって調査客体である企業/事業所各々の主業を定める作業を行う必要がある．
--   
--   この企業・事業所別の主業の策定作業を一般に「産業格付け」という．
--   
--   24年及び28年経済センサス調査票には，収入額，販売額とは別に「主な事業の内容」に関する調査項目が存在する．
--   この「主な事業所」は，日本国内のすべての事業所・企業情報を補足する「事業所母集団データベース（ビジネスレジスター）」
--   における事業所・企業照会，及び「事業の実施状況確認」をもとに事前に記載されており，
--   変更のあった場合のみ調査票に各事業所が記載することとなっている．
--   
--   したがって，新規事業所を除いて各々の事業所は，調査段階で既に産業格付けがなされている．
--   しかし，レストランやイベント会場を含んだホテル施設において，レストランの売り上げが，宿泊事業よりも収益が大きい場合など，
--   事業所及び企業の認識する主な事業と「収入額または出荷額の最も多いもの」という産業格付けの原則が一致しないことがままある．
--   このため，経済センサスの集計においては，各事業所を原則に則って再び産業格付けが行われている．
--   
--   産業格付けによる格付けは産業別の集計の際に用いられるが， 組替集計のためには，主に調査票第２面で把握されている生産物別の売上額を把握し，
--   事業所別生産物別生産量を把握する必要があり，そのためには，調査票で記載された各調査項目から，
--   その事業所における主業の主生産物，副生産物を把握することが求められる．
--   
--   その際，裏面におえける各調査項目は，生産物と一対一対応にあるわけではないので，
--   それぞれの調査項目から生産物及び売上額を特定する作業を必要とする．
--   
--   これらの処理は産業格付けにおける処理が参考となるため，ここでは産業格付けを行うと同時に， 事業所別生産物別売上高が把握できるように設計する．
--   
--   全てIOにして,一行ずつ処理するほうが良い(要修正)
f産業格付_特殊な方法 :: (Monad m, MonadIO m) => Year -> ConduitT IOCensusRow IOCensusRow m ()
f産業格付_一般的な方法 :: (Monad m, MonadIO m) => Year -> ConduitT IOCensusRow IOCensusRow m ()

-- | 売上高で産業格付けを行うため，マージン推計の前に行う．
--   
--   本稿では,この事業所別生産物別売上金額のデータを作成することを産業格付けにおける｢特殊な方法｣を利用して行い,
--   作成された事業所別事業別売上金額の内最大のものを主業として選択することを｢一般的な方法｣としている(同時に従業,主生産物,副生産物が何であるかが判明する)。
--   これらの方法を用いて決定された事業所別生産物別売上高及び産業格付けの分類項目を経済センサスにおける産業分類に変換し，
--   産業別に集計することで産業別品目別の組替集計が完了する。
--   
--   「一般的な方法」は，以下の手続きに則って行われる。
--   
--   <ol>
--   <li>事業別生産物別売上金額及び，事業別売上金額の最大売上部門を取得する。</li>
--   <li>で決定した区分に該当する部門のみのデータを用いて，次点で細かい分類の最大売上区分を把握する。
--   最大売上区分に重複がある場合には，双方において次点で細かい分類の最大売り上げ区分を把握し，その額の大きい方を採用する。</li>
--   <li>それ以上細かい区分が存在しない場合は前段階区分における下位分類の「格付け不能」項目に分類する。
--   重複があるのが最も細かい分類である場合は，識別番号の若い方を採用する。</li>
--   </ol>
--   
--   
--   副業の分解は，副業の分解の項目で行う．
--   
--   政治・経済・文化団体には，協同組合の売り上げも含まれているので注意
f産業格付_一般的な方法処理 :: Year -> IOCensusRow -> IO ()
f一般的な方法分岐 :: Val事業別売上高 -> Val事業所別生産物別売上高 -> Val事前格付_企業 -> Val事前格付_事業所 -> Val産業格付

-- | 事業別売上高の内最大の項目の産業分類を取得
f事業別売上金額最大項目取得 :: Val事業別売上高 -> [Higher]

-- | 不適当な文字列に対する処理，Map使うと遅いので，とりあえず出てきたパターンに対応する
notSuiteCarName :: Text -> Bool

-- | 不適当な文字列に対する処理，Map使うと遅いので，とりあえず出てきたパターンに対応する
convNotSuiteVal :: ValCars -> ValCars
convNotSuiteCars :: Cars -> Cars

-- | 事前格付を利用した処理 企業調査票の産業格付けは企業産業分類という謎の分類を使用している
f事前格付処理 :: [Higher] -> Val事前格付_企業 -> Val事前格付_事業所 -> Val産業格付
lemp :: Text
oemp :: Text
memp :: Text
semp :: Text
temp :: Text
demp :: Text

-- | 事業内容等不詳
generalCNC :: Val

-- | 与えられた最下層産業分類を利用して,産業格付を埋める
f産業格付補完 :: Industry -> Val産業格付

-- | 事業所別生産物別売上高の内最大の項目の産業分類を取得
--   
--   産業分類に謎のものが混ざっていたらここで除去する
f事業所別生産物別売上高処理 :: [Text] -> Val事業所別生産物別売上高 -> Val事前格付_企業 -> Val事前格付_事業所 -> Val産業格付

-- | 一般的な方法の繰り返し部分
--   
--   事業所別生産物別売上高には最下層以外はない
f前段階売上区分内処理 :: [Higher] -> Cars -> [Industry]
convToStratum :: Cars -> Stratum -> Cars

-- | 指定された産業分類の下位分類だけでfilterをかける
filtSelect :: [Higher] -> Cars -> Cars

-- | 最下層に行っても,重複があった場合の処理
f最下層格付処理 :: [Text] -> Cars -> Val事前格付_企業 -> Val事前格付_事業所 -> Val産業格付

-- | 調査票の種類に応じて以下の個別の処理を行う
--   
--   <ul>
--   <li>管理補助的業務及び，格付け不能もそれぞれの処理で行う．</li>
--   </ul>
--   
--   事業所調査票における調査項目「管理・補助的業務」では，
--   もっぱら「管理・補助的業務」を行っている場合にその内容に関して「管理運営業務，補助的業務，自家用倉庫」から選択する形式となっている．
--   
--   当該調査項目において，「管理運営業務」が選択されていた場合は，
--   一般的な方法において選択された産業区分と最も近い区分の「主として管理事務を行う本社等」，
--   「補助的業務」が選択されていた場合は「その他の管理，補助的経済活動を行う事業所」に格付けし，
--   双方が選択されていた場合は「管理，補助的経済活動を行う事業所 内格付け不能」とする．
--   
--   また，特殊な方法及び一般的な方法の結果，卸売業，小売業に区分された事業所において，
--   「自家用倉庫」が選択されていた場合，最も近い「自家用倉庫」に格付けする．
--   
--   卸売業，小売業以外で「自家用倉庫」が選択されていた場合は「その他の管理，補助的経済活動を行う事業所」に格付けする．
--   
--   <ul>
--   <li>格付け不能の扱い</li>
--   </ul>
--   
--   「○○ 内格付不能」に格付けされた事業所に関しては，その属する産業分類に格付けされた，
--   他の事業所の平均的な事業所別生産物売上高で，事業別売上高の当該項目の額を按分する．
--   
--   f産業格付_特殊な方法_全般 では，個別の処理をすべて統合する． 各調査票，産業の処理は個別の関数 f産業格付_特殊な方法_〇〇産業
--   を調整すること．
f産業格付_特殊な方法処理 :: Year -> IOCensusRow -> IO ()

-- | 商業か否か
type IsCommerce = Bool

-- | E管理補助的業務 に応じて，対応する管理補助的業務の細かい分類を返す関数を作成する関数
--   
--   事業所調査票における調査項目「管理・補助的業務」では，
--   もっぱら「管理・補助的業務」を行っている場合にその内容に関して「管理運営業務，補助的業務，自家用倉庫」から選択する形式となっている．
--   当該調査項目において，「管理運営業務」が選択されていた場合は，
--   一般的な方法において選択された産業区分と最も近い区分の「主として管理事務を行う本社等」，
--   「補助的業務」が選択されていた場合は「その他の管理，補助的経済活動を行う事業所」に格付けする．
--   また，特殊な方法及び一般的な方法の結果，卸売業，小売業に区分された事業所において，「自家用倉庫」が選択されていた場合，
--   最も近い「自家用倉庫」に格付けする．
--   卸売業，小売業以外で「自家用倉庫」が選択されていた場合は「その他の管理，補助的経済活動を行う事業所」に格付けする．
--   
--   <ul>
--   <li>主として管理事務を行う本社等<pre>下二桁が00 非営利団体には存在しない</pre></li>
--   <li>その他の管理，補助的経済活動を行う事業所<pre>下二桁が09 ただし，商業のみ08</pre></li>
--   <li>管理，補助的経済活動を行う事業所 内格付不能<pre>下２桁が0Z ただし，これに分類される条件が不明なため使用しない 0609
--   0709 0809 7109 7209 7409 7809 784Z 801Z 8609 8909 9400 9509
--   など存在しない項目も扱いが不明なため,機械的に分類を追加して処理を行った</pre></li>
--   <li>自家用倉庫<pre>下２桁が08</pre></li>
--   <li>産業内格付け不能の場合<pre>産業内格付け不能は下２桁がZZ
--   格付不能は格付け不能のまま処理する（実際にどのようにしているのか調べる必要あり） 784Z 恐らく公衆浴場格付け不能 及び 801Z
--   映画館格付け不能(?)の2項目に関しては追加し公衆浴場及び映画館として扱う</pre></li>
--   </ul>
--   
--   ZZ と Z0等末尾が統一されていないので注意(要修正)
makeManagementClass :: IsCommerce -> Val管理補助的業務 -> Text -> Text

-- | H事業所別生産物別売上高 のCars を 管理補助的業務に変換する
convMCinCars :: IsCommerce -> Val管理補助的業務 -> Cars -> Cars

-- | 格付け不能な分類名 CNC : CanNotClassify
type CNCName = Industry
f産業格付_特殊な方法_農林漁業 :: Year -> IOCensusRow -> IO ()

-- | 単純に生産_農林漁業_金額の項目を事業所別生産物別売上高に振り分ける
getValCarsFromV農林漁業 :: Val管理補助的業務 -> Val生産_農林漁業_金額 -> Val事業所別生産物別売上高
f産業格付_特殊な方法_鉱業 :: Year -> IOCensusRow -> IO ()

-- | 単純に生産_鉱業_金額の項目を事業所別生産物別売上高に振り分ける
getValCarsFromV鉱業 :: Val管理補助的業務 -> Val生産_鉱業_金額 -> Val事業所別生産物別売上高

-- | 在庫品評価調整の後，センサス細分類との対応関係に基づき品目を編纂する． 製造業における特殊な方法は，「工業統計調査分類関係資料
--   産業格付の方法」 において解説されている以下の記述以外に資料を見つけることができなかった．
--   
--   上記の方法以外に、原材料、作業工程、機械設備等により、 産業を決定しているものがある。その産業とは、「中分類22
--   鉄鋼業」に属する「高炉による製鉄業」、
--   「製鋼・製銅圧延業（転炉・電気炉を含む）」、「熱間圧延業」、「冷間圧延業」、「冷間ロール成型形鋼製造業」、
--   「鋼管製造業」、「伸鉄業」、「磨棒銅製造業」、「引抜鋼管製造業」、「伸線業」及び「その他の製鋼を行わない鋼材製造業」 の11 産業である。
--   
--   工業統計調査においては原材料，作業工程，機械設備等を用いて産業を把握しているが，
--   経済センサスにおける事業所調査票（製造業）における調査項目には「作業工程」及び「主要原材料」が存在し，
--   それぞれ自由記述にてその内容を調査しており，これらの情報を用いて，産業の把握が可能であると考えらえる．
--   工業統計調査では，例として，形鋼を製造していても，鉄鉱石，石炭，石灰石を原材料，高炉を機械設備としている場合，
--   「高炉による製鉄業」に格付けされ，銑鉄，鉄屑を原材料とし，転炉，電気炉を機械設備としている場合には，
--   「製鋼・製鋼圧延業」に格付けされるなどの処理が行われている．
--   
--   このような分類の組み合わせを全て把握すれば，その再現は可能であると思われるが，
--   その詳細が不明であることから，それらの格付けに関してはある程度製造品で候補を選定し， 案分する等の処理を行うものとする．
--   
--   また，製造業においては副産物，特に自家生産・自家消費品にも注意が必要とされる．
--   生産過程における中間製品であり，自家生産されたものが全て自家消費される財に関しては産業連関表においては，
--   経済センサス等の出荷ベース統計では把握されないため原則として計上されないが，銑鉄と粗鋼など，
--   投入・算出構造が異なる場合には，それぞれ支柱の製品価格を基準として国内生産額として計上される．
--   
--   したがって，それらの把握には，生産動態統計などの生産高ベースの統計を資料として用いているが，
--   経済センサスにおいて把握するためには，投入構造を一定と仮定して， 原材料使用額等から推測される自家生産・自家消費分を推計する必要がある．
--   しかし，それらの投入構造の把握，推計が困難であることから本稿ではこれを扱わず， 自家生産・自家消費分を除いた産出量として推計する．
--   
--   取引基本表では、各部門の生産物について、自主的な生産はもとより、
--   他部門からの受託に基づく生産であっても、当該生産物の部門に金額を計上するのが原則である。
--   しかし、国内生産額を推計する基礎資料の一つである経済センサス‐活動 調査では、受託生産分に係る金額については、
--   「加工賃収入」しか把握されていない。 そのため、同調査を利用して国内生産額を推計する部門では、 受託生産に係る原材料等の金額が把握できない。
--   
--   一方、受託生産の委託者が非製造業の場合にあっては、商社や百貨店などの商業部門である場合が多いが、
--   これら商業部門の国内生産額は、基本的に「販売額 - 売上原価 = 商業マージン額」 (商業部門の国内生産額には、このほか、コスト
--   商業に相当する金額も含まれる。)で計算されるため、 委託生産のための材料購入費が発生していたとしても、商業部門には計上されない。
--   
--   その結果、何も処理を行わないとすれば、原材料を生産した部門では、 商業部門に販売した委託生産用原材料の産出を計上できなくなる一方で、
--   受託生産を行った部門では、国内生産額が過小評価になるとともに、付加価値率が過大評価になる。
--   
--   そこで、非製造業からの委託を受けて生産する 分については、次に掲げる式により、
--   加工賃収入額に付加価値率の逆数を乗ずることにより、原材料費等を含んだ国内生産額を推計している。
--   
--   &lt;math&gt;
--   
--   (データの欠損等で付加価値率の逆数が0,マイナス,無限大になる場合は,全て1としている.)
--   
--   くず・廃物 7466 00 製造工程からでたくず・廃物
--   
--   に関して 製造業の段階で発生部門に振り分け
--   また，屑・副産物に関しては，取引基本表における屑・副産物発生部門をV表産業分類へ組替え，その値をセンサスから求められた産業×商品表の当該交点に計上している．
--   
--   本稿ではV表の作成は大まかに，以下①~⑤の作業を想定している．
--   なお，現行のV表の作成においては，屑，副産物の推計において取引基本表を経由しており，経済センサス以外の各種基礎統計値もその推計に利用している．
--   本研究は，飽くまで同一データを利用することで推計手法毎の差異を分析することを目的としており，センサスデータから直接的に値を構成するという点で，
--   推計手法が現行のものとは異なる．
--   幾つかの補足できない概念等もそのまま未把握として扱い，大きな項目については他の統計を用いて簡易的に推計するなど，簡易的作成手法を採用する．
f産業格付_特殊な方法_製造業 :: Year -> IOCensusRow -> IO ()
getValCarsFromV製造業 :: Year -> Val管理補助的業務 -> Val出荷額_製造業 -> Val収入額_加工賃 -> Val収入額_製造業以外 -> Val原材料使用額 -> Val事業所別生産物別売上高

-- | 出荷額 出荷額は基本的に,前四文字に切ると,細分類になる ｢くず・廃物 7466 00 製造工程からでたくず・廃物｣ は
--   その事業所の出荷製品の最大のものに変換
prodToDetail :: Year -> Val出荷額_製造業 -> Cars事業所別生産物別売上高

-- | ｢くず・廃物 7466 00 製造工程からでたくず・廃物｣ を その事業所の出荷製品の最大のものに変換
wasteTreate :: Cars出荷額_製造業 -> Cars事業所別生産物別売上高

-- | 賃加工 前四文字で切った後に,賃加工以外の製造品の原材料費 原材料使用額か,製造品価額がわからない場合はそのまま足す
--   過少になるため,代替案は必要
processToDetail :: Val原材料使用額 -> Double -> Val収入額_加工賃 -> Cars

-- | 製造業以外
othToDetail :: Val収入額_製造業以外 -> Cars

-- | 平成24年経済センサスにおける事業所調査票（卸売業，小売業）がどのように格付けされているかに関する情報は，
--   筆者の知る限り公表されていないが，平成28年結果の概要において，商業における産業格付けの「特殊な方法」に関して詳細な記述が存在する．
--   
--   在庫に関する調査項目以外には，平成24年経済センサス及び平成28年経済センサスにおける商業部門の調査票の設計に大きな違いはないため，
--   ここでは，平成28年「結果の概要」に記述されている手法に則って，産業格付けを行う．
--   
--   同資料によれば，『卸売業，小売業の産業格付けにおいて，卸売業のうち「各種商品卸売業（従業者が常時100人以上のもの）」，
--   「その他の各種商品卸売業」及び「代理商，仲立業」，小売業のうち「百貨店，総合スーパー」，
--   「その他の各種小売業（従業員が常時50人未満のもの）」，「各種食料品小売業」， 「コンビニエンスストア（新食料品を中心とするものに限る）」，
--   「ドラッグストア」，「ホームセンター」，「たばこ・喫煙具専門小売業」及び「無店舗小売業」』は特殊な方法によって格付けされている．
--   
--   結果の概要に記載されている処理フローをまとめたものが，「図 6商業における特殊な方法のワークフロー図」である．
--   以下，ワークフローに従って処理を設計していく
--   
--   
--   類似マージン率取得 などの処理は，他の処理が終了した後に処理される．
--   
--   <ul>
--   <li>商業は,商品分類=産業分類細分類になっているので,変換の必要なし.</li>
--   </ul>
f産業格付_特殊な方法_商業 :: Year -> IOCensusRow -> IO ()
getValCarsFromV商業 :: Year -> Val管理補助的業務 -> Val事業別売上高 -> Val商品別小売額 -> Val商品別卸売額 -> Val修理手数料収入_商業 -> Val仲立手数料収入_商業 -> Val売場面積 -> Valセルフサービス -> Val販売形態 -> Val商品形態 -> Val店舗形態_商業 -> Val開店閉店期間 -> Val雇用情報 -> ValCars

-- | 小売業の処理
--   
--   <ul>
--   <li>喫煙具処理 「6092 たばこ・喫煙具専門小売業」</li>
--   </ul>
--   
--   商品分類番号「6092」（たばこ・喫煙具専門小売業に属する品目）の販売額が小売販売総額の 90％以上の事業所
--   
--   喫煙具に関しては,自動的に,一般的な方法で処理されるのでなにもしない.
f小売処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> Valセルフサービス -> Val開店閉店期間 -> Val店舗形態_商業 -> Val雇用情報 -> Val事業所別生産物別売上高

-- | 従業員数が50以上か判定する
more50従業員 :: Val雇用情報 -> Bool

-- | ア 「5611 百貨店，総合スーパー」
--   
--   表3の「衣」、「食」及び「他」にわたる商品を小売りし、「衣」、「食」及び「他」の各販売
--   額がいずれも小売販売総額の10％以上70％未満で、従業者が50人以上の事業所
--   
--   <ul>
--   <li>表3 「衣」、「食」及び「他」と商品分類</li>
--   </ul>
--   
--   衣・食・他別 商品分類番号上位2桁 以下の産業分類に属する品目
--   
--   <pre>
--   衣 57 織物・衣服・身の回り品小売業
--   食 58 飲食料品小売業
--   他 59 機械器具小売業
--   他 60 その他の小売業
--   </pre>
f百貨店処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> Valセルフサービス -> Val開店閉店期間 -> Val店舗形態_商業 -> ValCars

-- | 「衣」、「食」及び「他」の各販売 額がいずれも小売販売総額の10％以上70％未満の判断
more10Less70Every表3 :: Val商品別小売額 -> Bool

-- | イ 「5699 その他の各種商品小売業（従業者が常時50人未満のもの）」
--   
--   表3の「衣」、「食」及び「他」にわたる商品を小売りし、「衣」、「食」及び「他」の各販売
--   額がいずれも小売販売総額の50％未満で、従業者が50人未満の事業所
fその他の各種商品小売業処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> ValCars
less50Every表3 :: Val商品別小売額 -> Bool

-- | 以下の,処理のために,中分類,小分類で一旦格付けを行う.
--   
--   格付け不能の場合は,Nothing を返す
f小売中小分類格付 :: Val商品別小売額 -> Maybe (Text, Text)

-- | ドラッグストアの処理 * オ 「6031 ドラッグストア」
--   
--   小分類「603 医薬品・化粧品小売業」に格付けされた事業所のうち、以下のいずれかの事業所
--   
--   ・ セルフサービス方式を採用しており、｢6032 一般用医薬品｣ を小売りしている事業所
--   
--   ・ セルフサービス方式を採用しており、「店舗形態」において「ドラッグストア」を選択した事業所
fドラッグストア処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> Valセルフサービス -> Val店舗形態_商業 -> ValCars

-- | 中分類「58 飲食料品小売業」のときの処理
--   
--   <ul>
--   <li>「5891 コンビニエンスストア（飲食料品を中心とするものに限る）」</li>
--   </ul>
--   
--   中分類「58 飲食料品小売業」に格付けされた事業所のうち、セルフサービス方式を採用し、売
--   場面積が30㎡以上250㎡未満で、営業時間が14時間以上の事業所
--   
--   <ul>
--   <li>「5811 各種食料品小売業」</li>
--   </ul>
--   
--   中分類「58 飲食料品小売業」に格付けされた事業所のうち、表4の商品分類番号上位3桁で分類
--   集計した小売販売額が3つ以上あり、そのいずれもが商品分類番号「58」（飲食料品小売業に属す る品目）の総額の50％に満たない事業所
--   
--   <ul>
--   <li>表4 飲食料品小売業と商品分類</li>
--   </ul>
--   
--   産業分類 商品分類番号
--   
--   上位3桁 以下の産業分類に属する品目
--   
--   <pre>
--   58 飲食料品小売業
--   582 野菜・果実小売業
--   583 食肉小売業
--   584 鮮魚小売業
--   585 酒小売業
--   586 菓子・パン小売業
--   589 その他の飲食料品小売業
--   </pre>
f飲食料品小売処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> Valセルフサービス -> Val開店閉店期間 -> ValCars

-- | 中分類「58 飲食料品小売業」に格付けされた事業所のうち、表4の商品分類番号上位3桁で分類
--   集計した小売販売額が3つ以上あり、そのいずれもが商品分類番号「58」（飲食料品小売業に属す る品目）の総額の50％に満たない事業所の判定
less50Every表4 :: Val商品別小売額 -> Bool

-- | ホームセンター処理 中分類「60 その他の小売業」に格付けされた事業所のうち、以下のいずれかの事業所
--   
--   ・ セルフサービス方式を採用し、売場面積が500㎡以上で、金物、荒物、苗・種子のいずれかを小売りしている事業所
--   
--   ・ セルフサービス方式を採用し、売場面積が500㎡以上で、「店舗形態」において「ホームセンター」を選択した事業所
--   
--   <pre>
--   6021    金物小売業
--   6022    荒物小売業
--   6042    苗・種子小売業
--   6091    ホームセンター
--   </pre>
fホームセンター処理 :: Valセルフサービス -> Val売場面積 -> Val店舗形態_商業 -> Val商品別小売額 -> Val販売形態 -> ValCars

-- | セルフサービスか否かの判定
isセルフ :: Valセルフサービス -> Bool

-- | 無店舗処理 * 「61 無店舗小売業」 販売形態の店頭販売の割合が0％及び売場面積が0㎡の事業所
--   
--   自動販売機,その他に関しては,そのままCarに追加する
--   
--   6121 自動販売機による小売業
--   
--   6199 その他の無店舗小売業
--   
--   無店舗でないものは調査品目名 = 産業細分類なのでそのまま用いる
f無店舗処理 :: Val商品別小売額 -> Val販売形態 -> Val売場面積 -> ValCars

-- | 卸売業の処理 * ウ 「5598 代理商，仲立業」
--   
--   卸売の商品販売額（仲立手数料を除く。）と仲立手数料を比較し、仲立手数料が多い場合に「代 理商，仲立業」に格付けする。
f卸売処理 :: Val仲立手数料収入_商業 -> Val商品別卸売額 -> Val雇用情報 -> ValCars

-- | <ul>
--   <li>「5011 各種商品卸売業（従業者が常時100人以上のもの）」
--   表2の財別（生産財、資本財及び消費財）の3財にわたる商品を卸売りし、各財の販売額がいずれ
--   も卸売販売総額（仲立手数料を除く。）の10％以上で、従業者が100人以上の事業所</li>
--   <li>「5019 その他の各種商品卸売業」 表2の財別（生産財、資本財及び消費財）の3財にわたる商品を卸売りし、商品分類番号上位3桁
--   の販売額で分類集計した販売額がいずれも卸売販売総額（仲立手数料を除く。）の50％未満で、従 業者が100人未満の事業所</li>
--   <li>表2 財別と商品分類</li>
--   </ul>
--   
--   TODO: table
--   
--   なお、上記ア、イについて、生産財、資本財及び消費財の3財にわたる商品を扱っていても、生産
--   財の商品分類番号が「536」（再生資源卸売業に属する品目）のみ、または、消費財の商品分類番号
--   が「559」（他に分類されない卸売業に属する品目）のみの場合には、一般的な方法による卸売業格 付けとする。
f卸売処理2 :: Val商品別卸売額 -> Val雇用情報 -> ValCars

-- | 代理商の処理 判定しなくても勝手に,一般的な方法で代理商になるので,作る
make代理商 :: Val仲立手数料収入_商業 -> Cars

-- | 生産財、資本財及び消費財の3財にわたる商品を扱っているか判定
--   
--   生産財の商品分類番号が「536」（再生資源卸売業に属する品目）のみ、または、消費財の商品分類番号
--   が「559」（他に分類されない卸売業に属する品目）のみの場合には、一般的な方法による卸売業格 付けとする。
--   
--   生産財,資本財,消費財それぞれを素数に変換し,その積に対して,最小公倍数のあまりをとって0なら,3財全て含まれると言う判定.
canBe各種商品卸売業 :: Val商品別卸売額 -> Bool

-- | 従業員(事業従業者数)が100人以上か判定する
more100従業員 :: Val雇用情報 -> Bool

-- | 3財がそれぞれ総額の10%以上か判定する
more10Every3財 :: Val商品別卸売額 -> Bool

-- | 3財がそれぞれ総額の50%以下か判定する 24年は28年より商品分類の桁数が一つ大きいので,三桁に変換して,同様の処理を行う.
less50Every3財 :: Val商品別卸売額 -> Bool

-- | 医療，福祉産業の産業格付けは平成24年事業所調査票，単独事業所調査票における調査項目「医療，福祉事業の収入の内訳」，
--   「事業所の形態，主な事業の内容」を用いる。
--   
--   なお，平成28年経済センサスにおいても調査票の構成に大きな変更はないことから，以下同一の処理を想定して論じる。
--   また，各調査票の判別には「調査票の種類」を用いる。
--   
--   「医療，福祉事業の収入の内訳」においては，7区分された診療及び事業の売上（収入）金額又は割合を調査しており，
--   
--   「事業所の形態，主な事業の内容」では,センサス細分類と対応する32区分の事業内容から一つを選択する。
--   
--   以下この節に限り，前者を「７区分」，後者を「32区分」と呼称する。
--   
--   それぞれ，データとしては, * 7区分 E事業収入_医療福祉 * 32区分 E事業所形態_医療福祉
--   
--   に対応する．
--   
--   経済センサスにおける産業格付けでは，単純に「事業所の形態，主な事業の内容」を格付けに用いていると考えられる。
--   
--   ここでは主生産物及び副生産物の生産量を把握するため,ここでは事業所の形態，主な事業の内容」において選択された事業に，
--   「医療，福祉事業の収入の内訳」を配分し，「一般的な方法」を経て，「事業所の形態，主な事業の内容」
--   において選択された産業に産業格付けされるようデータを変換する。
--   
--   この配分作業に当たって注意すべき事項は，保険区分と産業格付けの対応関係である。 平成23年（2011年）産業連関表総合解説編 では，
--   「医療（入院診療），医療（入院外診療），医療（歯科診療），医療（調剤） ，医療（その他の医療サービス），医療（その他の医療サービス），
--   社会福祉（非営利），社会福祉（産業）」において，
--   「病院及び一般診療所内での歯科診療は「医療（歯科診療）」に含める」，「介護保険によるサービスは「介護（施設サービス）」，
--   「介護（施設サービスを除く）」に含める」と記載されており，歯科とそれ以外はアクティビティで，介護と医療は保険制度で区分がされている。
--   
--   以下，基本的にこの区分に従って以下の手法で按分を行う。
--   
--   7区分の売上をそれぞれに該当する32区分に案分する第一段階として，32区分それぞれに関してその売上の対象となりうる7区分の対応関係を策定し，
--   選択された32区分に,対応のある7区分の収入を全額計上こととする。 なお,対応関係は「表
--   1医療,福祉分野における産業区分と事業区分の対応」に従う。
--   対応関係のないものに関しては，7区分からなる部門分類を一時的に作成し，そこに全額計上する。
--   その後，各32区分の売上の比率で，一時的に計上された7区分を32区分に按分する。
f産業格付_特殊な方法_医療福祉 :: IOCensusRow -> IO ()

-- | 事業収入_医療福祉 と 事業所形態_医療福祉 の対応関係に基づいてCarを返す．
--   
--   V事業所形態_医療福祉 == Null の場合は，格付け不能 <a>PZZZ</a> を返す．
getValCarsFromV事業所形態_医療福祉 :: Val管理補助的業務 -> Val事業所形態_医療福祉 -> Val事業収入_医療福祉 -> Val事業所別生産物別売上高

-- | E事業所形態_医療福祉 に対応する E事業収入_医療福祉 のフィールド名（関数）を返す
getIncomeE事業収入_医療福祉 :: Val事業収入_医療福祉 -> Val事業所形態_医療福祉 -> Double

-- | サービス関連産業Bの主業及び従業の主生産物及び副生産物の把握は，事業所調査票，
--   単独事業所調査票（サービス関連産業B）等における第２面調査項目「サービス関連産業Bの事業収入内訳」，
--   「施設店舗等形態」，及び「物品賃貸業のレンタル年間売上高及びリース年間契約高」を主に用いて行われる。
--   
--   以下，本設に限り「サービス関連産業Bの事業収入内訳」を項目１，
--   「施設店舗等形態」を項目２，「物品賃貸業のレンタル年間売上高及びリース年間契約高」を項目３と呼称する。
--   
--   項目１においては，「飲食業，宿泊サービス業，物品賃貸業，その他の生活関連サービス，スポーツ施設提供業」等の
--   産業中分類程度の区分における事業別売上高と， それ以外のサービス業における産業細分類程度の区分における事業別売上高を調査している.
--   なお,調査票においては,｢売上(収入金額) 又は割合｣と変換されているが,本稿に使用されているデータは
--   金額のみである(割合のみの回答の結果が金額の値に補綴されているかは不明.)
--   
--   項目２では，産業細分類程度の区分主力事業の形態を調査している。物品賃貸業を除く，
--   産業においては，項目1における区分が，「施設・店舗等形態」の区分範囲の場合 (e.g 事業分類が宿泊事業,
--   店舗形態が旅館など,事業分類と店舗形態がマッチしている場合) は「施設・店舗等形態」の区分を(産業細分類に変換した上で)採用し，
--   それ以外の場合は，事業分類を(産業細分類に変換した上で)主業の主生産物，副生産物として記録される。
--   
--   物品賃貸業においては，平成24，28年それぞれで処理が異なり，平成24年では，
--   項目１の回答内容において産業区分が「産業機械，事務用機械，自動車，スポーツ・娯楽用品，
--   その他（映画・演劇用品，音楽・映像記録物，貸衣しょう等）」の内３区分以上を含んでおり，
--   且つ，当該部門の項目3における「レンタル年間売上高｣を「リース年間契約高」が上回った場合，
--   物品賃貸業に該当する部門の売り上げを全て「総合リース業」の売上，
--   下回った場合は「その他の各種物品賃貸業」の売上とする。同列あるいは,いずれもデータが存在しない場合はレンタルに割り振る.
--   
--   上記の条件を満たさない場合は，それぞれの項目を独立して物品賃貸業の生産物として記録する。
--   項目１が未記入且つ，項目３が記載されている場合は，後者の割合から金額を算定し，同様の処理を行う。
--   平成28年では，平成24年の条件に加えて，項目２の情報において 「総合リース業，各種物品賃貸業，その他の物品賃貸業」の別を調査しており，
--   その回答が「総合リース業，各種物品賃貸業」の場合は物品賃貸業に該当する項目１の売上高を，
--   全額それらに分配し，「その他の物品賃貸業」の場合は，そのまま生産物として記録する。
--   産業細分類は項目2における情報よりも荒いため,項目2を利用することで実際はより細かい情報が取れるがここではそれを行わない.
--   
--   主力事業が他の産業であり，項目２が物品賃貸業でない場合，24年と同等の条件で 物品賃貸業に該当する項目１を処理し，副生産物として記録する。
--   
--   項目1及び,項目3それぞれにおける物品賃貸業の値に相違がある場合は,基本的には項目1を優先し,
--   項目1,または項目3のいずれかが欠損している場合は他方を優先する. (同一の調査票内ですら重複情報を記入させるのはいかがなものか)
--   (項目1あり<i>なし × 項目3あり</i>なし + 重複あり/なし で 6 パターンに分岐. 詳細は,コード参照)
--   
--   産業分類表に存在しない項目, 784Z 恐らく公衆浴場格付け不能 及び 801Z
--   映画館格付け不能(?)の2項目に関しては追加し公衆浴場及び映画館として扱う.
f産業格付_特殊な方法_サB :: Year -> IOCensusRow -> IO ()
data RentalOrLease
Rental :: RentalOrLease
Lease :: RentalOrLease
getValCarsFromVサB :: Year -> Val管理補助的業務 -> Val事業収入_サB -> Val店舗形態_サB -> Valレンタル総売上高 -> Valリース年間契約高 -> Val商品別レンタル売上高 -> Val商品別リース契約高 -> IO ValCars
type Text店舗形態番号 = Text
type Text事業収入番号 = Text

-- | 事業収入番号と店舗形態がマッチ(e.g 宿泊業, 旅館ホテル)しているかを判定
type M店舗形態適合マップ = Map (Text事業収入番号, Text店舗形態番号) IndustryDetail

-- | 店舗形態と事業収入のペアがM店舗形態適合マップの中にない場合に,事業収入を産業分類細分類に振り返るマップ
type M店舗形態不適合マップ = Map Text事業収入番号 IndustryDetail

-- | 協同組合は，平成24，28年共に，単独事業所調査票及び，事業所調査票（協同組合）において調査されており，
--   単独事業所調査票では，調査項目「協同組合の種類」において
--   「農業協同組合，行業協同組合，水産加工業協同組合，森林組合，事業協同組合，その他の事業協同組合（1~5の協同組合以外）」
--   のうち一つを回答する形式の調査を行っている．
--   
--   また，事業所調査票においてはそれに追加して，「信用事業又は共済事業の実施の有無」を調査している．
--   
--   産業連関表では，協同組合の収益の配分先は， 「農林水産金融業，卸売，小売，倉庫，対企業民間非営利団体」の５産業であり，
--   協同組合それ自体の産業区分は存在しない． それに準じて，組替集計においては，協同組合の収益をこれらの産業に区分して記録する．
--   
--   「調査票の記入の仕方」に従えば，事業別売上高において，協同組合の賦課金は，「政治・経済・文化団体の活動収入」に含まれるため，
--   分類された協同組合の種類に「政治・経済・文化団体の活動収入」の収入金額を全額計上する．
--   
--   事業所調査票では，「協同組合の種類」において「農業協同組合，漁業協同組合，水産加工業協同組合，森林組合」の何れかが選択され，
--   
--   また，「信用事業又は共済事業の実施の有無」において「行っている」が選択されている場合に，
--   「事業別売上（収入）金額」における「金融，保険事業の収入」を全額「農林水産金融業」に記録する．
--   
--   「行っていない」が選択されている場合は，「金融業，保険業内格付け不可」に記録する．
--   
--   また，「卸売の商品販売額（代理・仲立手数料を含む）」を全て卸売業，「小売りの商品販売額」を全て小売業に記録し，
--   「運輸・郵便事業の収入」を全て「倉庫業」に記録する．
--   
--   「協同組合の種類」において，「その他の事業協同組合」が選択された場合は，
--   「事業所の売上（収入）金額」又は，「事業別売上（収入）金額」の合計額を「事業協同組合（他に分類されないもの）」に記録する．
--   
--   単独事業所調査票では，「協同組合の種類」の回答が等しい事業所調査票の「協同組合の種類」が等しい事業所の案分比率を用いて，
--   「事業別売上（収入）金額」における「金融，保険事業の収入」の値を按分する．
--   
--   双方において「協同組合の種類」の回答がない場合は， 「協同組合（他に分類されないもの）
--   内格付不能」に全額を記録し，他の事業所の主業副業副産物主生産物の比率を用いて，売上高を按分する．
f産業格付_特殊な方法_協同組合 :: IOCensusRow -> IO ()

-- | E事業所形態_医療福祉 に対応する E事業収入_医療福祉 のフィールド名（関数）を返す
--   
--   事業別売上高の
--   
--   運輸業 -&gt; 倉庫
--   
--   金融業 -&gt; 農林水産金融業
--   
--   政治・経済・文化団体 -&gt; 協同組合
--   
--   にそれぞれ配分(卸売り小売りは，一般的な方法で分解されるので何もしない)
getValCarsFromV協同組合 :: Val管理補助的業務 -> Val協同組合の種類 -> Val信用共済事業の有無 -> Val事業別売上高 -> ValCars

-- | サービスAと建設は同一の調査項目に関わるので同時に処理する.
--   
--   <ul>
--   <li>サービスA 電気，ガス，熱供給，水道業，運輸業，郵便業，通信，放送，映像・音声・文字情報制作業は，
--   平成24年単独事業所調査票，企業調査票，事業所調査票（建設業，サービス関連産業A），
--   平成28年単独事業所調査票，企業調査票，事業所調査票（建設業，サービス関連産業A，学校教育）において調査されており，</li>
--   </ul>
--   
--   事業所調査票では「事業の種類」を選択し，単独事業所調査票及び企業調査票においては，調査項目「主な事業収入の内訳」にて，
--   第10位までの細分類相当の「事業内容及び売上（収入）金額又は割合」を把握している．
--   
--   
--   サービス関連産業Aはネットワーク産業であり，事業所調査票は集計対象とならないため，「主な事業収入の内訳」の値を直接企業別生産物別売上高として利用する．
--   
--   <ul>
--   <li>建設 平成24，28年経済センサス企業調査票（建設業，サービス関連産業A）における建設業においては， 調査票裏面「15
--   主な事業収入の内訳」で 「土木工事，住宅建築工事・同設備工事，非住宅建築工事・同設備工事，機械設備工事」のそれぞれ
--   「元請，下請け」別（以下，建築8区分と呼称）に該当する売上収入金額または割合を記入する．</li>
--   </ul>
--   
--   また，「16 業態別工事種類」において，
--   建築業法の工種区分を一部細分化した33種類の業態の内年間における完成工事高上位２種を選択する形式となっている．
--   一方，事業所調査票（建設業，サービス関連産業A）においては，
--   調査項目「事業の種類」においては，前述の33区分工種に，「一般土木建築工事」を加えた34区分からの選択式になっている．
--   
--   組替集計のために必要となる作業は企業調査票における調査項目２つから，
--   建設業における主業の主生産物及び副生産物を明らかにし，その比率を単独事業所調査票（建設，サービス業A）及び，
--   「事業別売上（収入）金額」において， 「建設事業の収入」に記載のあった事業所の副業の主生産物及び副生産物比率を把握することである．
--   ここでは，経済センサス集計における産業格付けの「特殊な方法」に則りながら，主業の主生産物及び副生産物の売上高を把握する．
--   
--   対処方針として，建築8区分の売上額を工種区分で記載されている職種に配分し，
--   その後，工種区分とセンサス細分類の対応表を利用してセンサス小分類に配分する．
--   なお，センサス細分類における「一般土木建築工事業」には，建築8区分における「土木工事」，
--   「住宅建築工事・同設備工事又は非住宅建築工事・同設備工事」が共に記載されている事業所，あるいは，工種区分において，
--   「土木一式工事」及び「建築一式工事，又は木造建築一式工事」の双方が選択されている事業所から，
--   事業所調査票における記載「一般土木建築工事（完成工事高において建築工事の占める割合が２割以上，8割未満）」，
--   「土木一式工事（完成工事高において建築工事の占める割合が２割未満）」，
--   「建築一式工事（完成工事高において建築工事の占める割合が8割以上）」に従って，分類する．
--   
--   なお,事業別売上(収入)金額の内訳における,下請け工事部分は,二重計上を避けるため,後に削除するが,各事業所単位では削除しない.
--   
--   <ul>
--   <li>金融業,保険業 金融業，保険業は，平成24年では単独事業書調査票，企業調査票，事業所調査票（建設業，サービス関連産業A），
--   平成28年では，単独事業書調査票，企業調査票，事業所調査票（建設業，サービス関連産業A，学校教育）において調査されており，
--   いずれの場合でも，調査項目「金融業，保険業の事業種類」において，該当する事業種類を調査している．</li>
--   </ul>
--   
--   金融業，保険業はネットワーク産業であるため，企業及び単独事業所を集計対象とし， 複数事業所からなる企業における事業所単位での集計は行わない．
--   企業別生産物別売上高の把握に当たっては企業調査票，
--   団体調査票において選択された種類に調査項目「事業別売上（収入）金額」における「金融，保険業の収入」の回答金額を全額載せる．
--   企業調査票における解答欄において複数の回答があった場合，
--   傘下事業所における事業所調査票の調査項目「事業の種類」別に事業所別従業員数の比率を掛けて企業別業種別売上高を出す．
--   案分後も差が出ない場合は，業種内格付け不可とする． 単独事業所調査票において回答が複数となった場合には，業種内格付け不可とする．
--   
--   <ul>
--   <li>学校教育 学校教育は，平成24年経済センサスでは，学校教育は，単独事業所調査票（学校教育），
--   企業調査票（学校教育），事業所調査票（学校教育）の三つの調査票によって調査されている．
--   このうち，企業調査票においては，調査項目「学校等種類別収入内訳」において学校等種類別の売上（収入）金額，
--   または割合を調査し，企業調査票以外では，
--   調査項目「学校等の種類」において事業所の主な事業として該当する学校等の種類のみを把握している．</li>
--   </ul>
--   
--   平成28年経済センサスでは，学校教育は，単独事業著調査票，企業調査票，
--   事業所調査票（建設，サービス関連産業A，学校教育）において調査されており，
--   そのうち企業調査票においては調査項目「学校等種類別収入内訳」において学校等種類別の，
--   売上（収入）金額又は割合を調査しており，その他の調査票では学校等の種類のみを調査している．
--   
--   いずれの年度においても，学校教育はネットワーク型産業であるため，以降，事業所調査票の値を用いない．
--   企業調査票の値は，そのまま事業所別生産物別売上高として用いて，単独事業書調査票は，
--   選択されている学校の種類に，22区分の事業別売上（収入）金額における，「学校教育」の額を全額載せて， 事業所別生産物別売上高として用いる．
--   
--   <ul>
--   <li>団体 政治・経済・文化団体，宗教は，平成24年単独事業書調査票， 企業調査票，事業所調査票（建設業，サービス関連産業A），
--   平成28年単独事業所調査票，団体調査票，
--   事業所調査票（政治・経済・文化団体，宗教）における調査項目「政治・経済・文化団体，宗教の種類」において，
--   9つの形態から一つを選択する形式で調査を行っている． 「政治・経済・文化団体，宗教」はネットワーク産業であるため，
--   企業及び団体，単独事業所を集計対象とし，複数事業所からなる企業， 団体における事業所単位での集計は行わない．
--   企業別生産物別売上高の把握に当たっては企業調査票， 団体調査票において選択された種類に調査項目「事業別売上（収入）金額」における
--   「政治・経済・文化団体，宗教（団体）」の回答金額を全額載せる． 企業調査票，団体調査票における解答欄において複数の回答があった場合，
--   傘下事業所における事業所調査票の調査項目「事業の種類」別に事業所別従業員数の比率を掛けて企業別業種別売上高を出す．
--   案分後も差が出ない場合は，業種内格付け不可とする． 単独事業所調査票において回答が複数となった場合には， 業種内格付け不可とする．</li>
--   </ul>
f産業格付_特殊な方法_建サA :: Year -> IOCensusRow -> IO ()

-- | f産業格付_特殊な方法_建サA の内部関数
--   
--   H事業収入_建サA は建設とサAを処理,それ以外の項目は独自に処理して最後に結合
--   
--   関数ごとに分割するべき（課題）
getValCarsFromV建サA :: Year -> Val管理補助的業務 -> Val工事種類 -> Val事業収入_建サA -> Val事業別売上高 -> Val団体の種類 -> Val金融業保険業の事業種類 -> Val学校等の種類 -> Val収入内訳_学校 -> Val主な事業の種類 -> ValCars

-- | 事業別売上高を事業所別生産物別売上高に振り替える
f産業格付_特殊な方法_その他 :: Year -> IOCensusRow -> IO ()

-- | 表面情報を裏面情報に変換する
convertB2D :: Val事業別売上高 -> Val事業所別生産物別売上高

-- | 副業の分解との重複を避けるために裏面の内容に関連するもののみを変換したものを返す
convertB2DExclude :: Val事業別売上高 -> [IndustryBusiness] -> Val事業所別生産物別売上高

-- | 裏面の取得情報と表面の事業別売上高を結合させる
mergeFrontAndBehind :: IOCensusRow -> Val事業所別生産物別売上高 -> Val事業所別生産物別売上高 -> Val事業別売上高 -> [IndustryBusiness] -> IO ()

-- | 平成24年消費税率
ctr24 :: ConsumeTaxRate

-- | ファイルを受け取って価格変換を行ったあと出力
full価格変換 :: InputFile -> Double -> Year -> IO ()

-- | <ul>
--   <li>「統計調査における売上高等の集計に係る消費税の取り扱いに関するガイドライン（ 平成27年５月19日
--   各府省統計主管課長等会議申し合せ）」に基づき処理を行う</li>
--   </ul>
f価格変換 :: MonadIO m => Year -> ConduitT IOCensusRow IOCensusRow m ()

-- | 消費税率
type ConsumeTaxRate = Double

-- | H総売上，H事業別売上高 *「金融，保険業，政治・経済・文化団体，宗教団体の活動，不動産事業」
--   を除いた事業の売上には，売上（収入）金額×税率を足す．
--   
--   <ul>
--   <li>すべての売り上げが消費税の課税対象であるわけではないので， 事業別売上（収入）金額が未記入の場合は， 売上（収入）金額×税率を加算．
--   事業別売上（収入）金額が記入されていて且つ その総和が売上（収入）金額より大きい場合は，
--   消費税加算後事業別売上（収入）金額の和で入れ替える．</li>
--   </ul>
f価格変換_事業別売上高 :: ConsumeTaxRate -> IOCensusRow -> IO ()

-- | 税率を乗じる
f事業別売上高税加算 :: ConsumeTaxRate -> Val事業別売上高 -> Val事業別売上高

-- | 総売上に消費税を加算
f価格変換_総売上 :: ConsumeTaxRate -> IOCensusRow -> IO ()

-- | H費用等の内訳
--   
--   
--   （「統計調査における売上高等の集計に係る消費税の取り扱いに関するガイドライン
--   平成24年経済センサス-活動調査をモデルとした消費税加算処理（調査品目以外）」より，抜粋（一部筆者編集）
f価格変換_費用等の内訳 :: ConsumeTaxRate -> IOCensusRow -> IO ()
f費用等の内訳税加算 :: IsCommerce -> ConsumeTaxRate -> Val費用等の内訳 -> Val費用等の内訳
f費用別処理 :: STRef s [Car] -> STRef s Double -> STRef s Double -> STRef s Double -> ConsumeTaxRate -> Car -> ST s ()

-- | <ul>
--   <li>調査品目別の消費税の加算処理は，課税，直接輸出，の有無などによって以下の３パターンに区分される．</li>
--   </ul>
--   
--   ① 加算１（製造業の一部の品目）
--   
--   <pre>
--   加算額 ＝（調査品目別売上-調査品目別直接輸出額）×税率
--   </pre>
--   
--   ② 加算２（「医療，福祉」及び「サービス関連産業B」調査票の一部の品目）
--   
--   <pre>
--   加算額＝（調査品目別売上-調査品目別海外取引額）×税率
--   </pre>
--   
--   ③ 加算３
--   
--   <pre>
--   加算額＝調査品目別売上×税率
--   </pre>
--   
--   <ul>
--   <li>製造業における製造品出荷額 &gt; 加算額＝調査品目別消費税の加算処理における各製造品の加算額の合計</li>
--   
--   <li>製造業は，<a>H輸入割合</a>，サービス業は，<a>H相手先別収入割合_サB</a>および<a>H相手先別収入割合_医療福祉</a>で判定</li>
--   <li>簡単のため製造業及び,医療福祉,サービス関連産業B は全て直接輸出ありとして扱う</li>
--   </ul>
f価格変換_事業所別生産物別売上高 :: Year -> ConsumeTaxRate -> IOCensusRow -> IO ()

-- | 輸出割合
type ExportRate = Double
f事業所別生産物別売上高税加算処理 :: Year -> IOCensusRow -> ConsumeTaxRate -> Val事業所別生産物別売上高 -> Val輸出割合 -> Val相手先別収入割合_サB -> Val相手先別収入割合 -> IO ()
f生産物税加算 :: Year -> ConsumeTaxRate -> Val輸出割合 -> Val相手先別収入割合_サB -> Val相手先別収入割合_医療福祉 -> Car -> Car
f加算1 :: ConsumeTaxRate -> Val輸出割合 -> Car -> Car
f加算2 :: ConsumeTaxRate -> Val相手先別収入割合 -> Car -> Car
f加算3 :: ConsumeTaxRate -> Car -> Car

-- | サBかどうかを判定
isサB :: Year -> Car -> Bool

-- | 医療かどうかを判定
is医療 :: Year -> Car -> Bool

-- | 製造業かどうかを判定
is製造業 :: Year -> Car -> Bool
type EnDivideMap = Map (E直轄企業コード, Header) Double

-- | V表の作成において必要な項目は，平成24年センサスにおける「企業全体の売上（収入）金額，
--   費用総額及び費用内訳」（売上高未把握事業所の補定，VAT推計及びマージン額推計に利用），
--   「商品売上原価」，「年初及び年末商品手持額」，「年間商品仕入れ額」（マージン推計に利用）の３項目．
--   
--   補定は既に行われているので,ここでは,マージン推計用に
--   「商品売上原価，年初及び年末商品手持額，年間商品仕入れ額｣と，直轄企業コードのマップを作成する．
--   
--   商業の企業調査票の場合のみ
f名寄せ :: MonadIO m => IORef EnDivideMap -> ConduitT IOCensusRow Void m EnDivideMap

-- | 企業または，団体かを判断する Nothing の時は除外
isEN :: Val調査票の種類 -> Maybe Bool
f商業企業項目取得 :: IOCensusRow -> IORef EnDivideMap -> IO ()
getDoubleFromVal :: ValDouble -> Double

-- | ファイルを受け取って企業の事業所への分割をする.
full企業分割 :: InputFile -> Double -> Year -> IO ()

-- | 第12回産業連関技術会議資料 における（組替）集計上の留意事項の一つに，
--   「企業調査票にしかデータがない項目（設備投資，費用に係る項目など）については，
--   事業所別従業者数等で案分して，可能な限り，事業所別データに変換してから組替集計を実施」
--   「ただし，複数事業所を有する企業であって，ネットワーク型産業に該当するものについては，
--   売上高及び費用共に事業所票で把握されないことから，企業調査票のデータを利用」との記載がある．
--   
--   V表の作成において必要な項目は，平成24年センサスにおける「企業全体の売上（収入）金額，
--   費用総額及び費用内訳」（売上高未把握事業所の補定，VAT推計及びマージン額推計に利用），
--   「商品売上原価」，「年初及び年末商品手持額」，「年間商品仕入れ額」（マージン推計に利用）の３項目．
--   
--   補定は既に行われているので,ここでは,マージン推計用に 「商品売上原価，年初及び年末商品手持額，年間商品仕入れ額｣のみ分割する.
--   
--   その具体的な手法に関しては，筆者の調べる限り資料が存在しないが，
--   平成28年経済センサスにおける売上（収入）に関する試算がHP「（参考）全産業の事業所の売上（収入）金額に関する試算値」
--   において説明されている．
--   
--   &lt;math&gt;がそれぞれ，企業のvの値，企業傘下事業所の内整理番号iのvの値を表すとし，
--   ある企業に属すべての事業所の整理番号をIとする．Iのうち，分割対象に属する部分をIN,それいがいをOUTとする．
--   また，ある事業所iの主業の産業別ウェイトをweight[i]とすると，企業から分割された事業所の値は，
--   
--   &lt;math&gt;
--   
--   となる．なお，産業別ウェイトは，産業大分類ごとに，主産業に格付けされた事業所の事業従事者数の合計が，
--   企業全体の事業従事者数の70%以上となる企業（単一産業企業）全体の売上高を，当該企業全体の事業従業者数で除して求める．
--   
--   ここで，「商品売上原価，年初及び年末商品手持額，年間商品仕入れ額｣は商業を行っていない事業所では発生しないため
--   
--   &lt;math&gt;
--   
--   であるから
--   
--   &lt;math&gt;
--   
--   が成り立つ．
f企業分割 :: MonadIO m => IndWeightMap -> EnDivideMap -> DenomiMap -> ConduitT IOCensusRow IOCensusRow m ()

-- | 産業別ウェイトと，名寄せを同時に行う
getWeightAndLink :: InputFile -> IO (IndWeightMap, EnDivideMap)

-- | 直轄企業コードの下２桁意外と，分母 [ sum_{i ∈ I}{x_i [w]× weight[i]} ] のMap
type DenomiMap = Map (E直轄企業コード, Header) Double

-- | 企業別の分母 [ sum_{i ∈ I}{x_i [w]× weight[i]} ] を求める
getDenomiMap :: MonadIO m => IndWeightMap -> IORef DenomiMap -> ConduitT IOCensusRow Void m DenomiMap

-- | 産業別ウェイト 産業大分類ごとに，主産業に格付けされた事業所の事業従事者数の合計が，
--   企業全体の事業従事者数の70%以上となる企業（単一産業企業）全体の対象の値を，当該企業全体の事業従業者数で除して求める
--   
--   大分類以下の細かい分類でこれを行ってもよい（要修正）
type IndWeightMap = Map (Industry, Header) Double

-- | 企業別の情報を集めたMap
type EnWeightInfoMap = Map E直轄企業コード EnWeightInfo

-- | 企業直轄企業コード，企業別主産業，全体売上高，全体事業従業者数，該当事業従業者数 を記録するためのデータ型
data EnWeightInfo
EWI :: Industry -> {-# UNPACK #-}Double -> {-# UNPACK #-}Double -> {-# UNPACK #-}Double -> {-# UNPACK #-}Double -> {-# UNPACK #-}Int -> {-# UNPACK #-}Int -> EnWeightInfo

-- | 企業の産業大分類
[lInd] :: EnWeightInfo -> Industry

-- | 企業の商品売上原価
[enCost] :: EnWeightInfo -> {-# UNPACK #-}Double

-- | 企業の年間仕入額
[enBought] :: EnWeightInfo -> {-# UNPACK #-}Double

-- | 企業の年初商品手持額
[enBegin] :: EnWeightInfo -> {-# UNPACK #-}Double

-- | 企業の年末商品手持額
[enEnd] :: EnWeightInfo -> {-# UNPACK #-}Double

-- | 企業の全体事業従業者数(分母)
[totalEmp] :: EnWeightInfo -> {-# UNPACK #-}Int

-- | 該当事業従業者数 (分子)
[targetEmp] :: EnWeightInfo -> {-# UNPACK #-}Int
getDataFromEWI :: Header -> EnWeightInfo -> Double

-- | Nothingになるまで STRefでEnWeightInfoを収集し，NothingでそれをEnWeightInfoMap に変換して返す
--   
--   企業か，団体の場合は，全体の売上高を記入 売り上げがない場合は変換の段階で除外． （ネットワーク産業でも，売上高のみ）
--   
--   事業所の場合は，該当するなら直轄企業に該当事業従業者数及び，従業者数を記入
--   
--   個人経営，単独事業所は，対象から除く
f産業別ウェイト取得 :: MonadIO m => IORef EnWeightInfoMap -> ConduitT IOCensusRow Void m IndWeightMap
whenIsEN :: IOCensusRow -> IORef EnWeightInfoMap -> IO ()
whenIsES :: IOCensusRow -> IORef EnWeightInfoMap -> IO ()
whenIsSi :: IOCensusRow -> IORef EnWeightInfoMap -> IO ()
makeIndWeightMap :: EnWeightInfoMap -> IndWeightMap

-- | 個人経営者,あるいは単独事業所か否かを判定する
isSingle :: Val調査票の種類 -> Val単独本所支所区分 -> Bool

-- | ファイルを受け取って
--   
--   商業マージン推計
--   
--   JSNAにおけるV表は国連基準である，基本価格表示とは異なり，運輸・商業マージンをそれぞれの産業の自交点に計上している．
--   SUT体系への移行後のS表においてどのような価格を採用するかは現行未定であるので，
--   本稿では現行V表に合わせて，推計されたマージンはそれぞれの自交点に計上する． 以降各マージンの推計手法に関して外観，考察する．
--   
--   平成23年V表における各産業の総生産額は平成23年産業連関表取引基本表の行和が用いられている． 平成23年産業連関表総合解説編
--   によれば，産業連関表における商業マージンは
--   
--   「商業マージン＝売上額（商業販売額）－ 仕入額」
--   
--   によって定義されており，平成23年表では「経済センサス-活動調査」の組替集計結果（部内資料）より推計されている．
--   
--   一方，第52回サービス統計・企業統計部会配布資料 では，
--   平成24年における商業マージン額の推計手法は，商品販売額から企業調査票等の調査項目である商品売上原価を引く形で求めていると説明している．
--   
--   平成24年センサス商業マージン額（主業，従業）=年間商品販売額-商品売上原価
--   
--   また，平成28年経済センサスにおいては調査委項目に年初商品手持額が追加され，
--   他の記入項目から計算が可能であるため，売上原価に対する調査項目が廃止され，
--   また平成24年センサスにおいて，商業マージンの大半を主業が占めていたことから従業に関する売上原価の把握を取りやめ，
--   以下のように推計すると説明されている．
--   
--   平成２8年センサス商業マージン額（主業）＝年間商品販売額- （年初商品手持額＋年間商品仕入額-年末商品手持額）
--   
--   以下基本的には上記資料に従い，それぞれの項目が取得できない場合における場合を考慮して，
--   平成24年，平成28年それぞれの商業マージン推計手法を設計する．
--   
--   商業マージンの推計に用いる項目は，
--   
--   ・平成24年企業調査票における①「商品売上原価」
--   
--   ・平成28年経済センサス企業調査票における②「年初及び年末商品手持額」，③「年間商品仕入額」
--   
--   ・平成24年，28年単独事業所調査票及び，事業所調査票（卸売業，小売業）における調査項目④「年間商品販売額」，
--   ⑤「費用総額及び費用内訳」のうち「売上原価」
--   
--   ・その他調査票における⑥「事業別売上（収入）金額」のうち卸売業，小売業の回答額
--   
--   となる．各項目の調査票別の有無は，「表 2 各年度別調査票に含まれるマージン推計に利用される項目とマージン推計手法」にまとめた．
--   以降，未回答の場合を含めて，各情報の記載の有無にそって「図 7 商業マージン取得ワークフロー」に従って商業マージンを求める．
--   
--   
--   処理としては，２２区分の売上高の値及び事業所別生産物別売上高のうち商業に該当するものに処理を施していく． 類似調査票処理が必要になったものは
--   IORef [IOCensusRow] で保存し，終了後すべて処理してyieldする．
--   
--   本当は自家倉庫や管理補助的業務分にはマージン率を乗じるべきではない(未対応)
--   
--   同一産業処理は,必要な場合Listにためておき,最後にまとめて処理を行う.
f商業マージン処理 :: (Monad m, MonadIO m) => IORef ToMakeMarginMap -> IORef [IOCensusRow] -> ConduitT IOCensusRow IOCensusRow m ()

-- | マージン率
type MarginRate = Double

-- | 同一の大分類に格付けされている事業所の平均マージン率
type MarginMap = Map Industry MarginRate

-- | MarginMapを作るための中間データ型
type ToMakeMarginMap = Map Industry (MarginRate, Double)
makeMarginMap :: ToMakeMarginMap -> MarginMap

-- | 事業分類の商業及び,裏面の商業をマージン化する
f同一産業処理 :: MonadIO m => MarginMap -> ConduitT IOCensusRow IOCensusRow m ()

-- | 商業のみ事業別売上高(細分類)マージン率を乗じる
convMarginSev :: MarginRate -> Val事業別売上高 -> Val事業別売上高

-- | 商業のみ事業所別生産物別売上高(細分類)マージン率を乗じる
convMarginComm :: MarginRate -> Val事業所別生産物別売上高 -> Val事業所別生産物別売上高

-- | 産業細分類の商業か否かを判定する
isCommerceDetail :: Car -> Bool

-- | 22区分のマージン率を生産物別別売上高に乗じる
f表面裏面処理 :: MarginRate -> IOCensusRow -> Val事業別売上高 -> Val事業所別生産物別売上高 -> Val産業格付 -> IORef ToMakeMarginMap -> IO ()

-- | 企業内取引及び下請け構造
--   
--   第21回サービス統計・企業統計部会配布資料 では，
--   「製造業の企業においては，部品工場から完成品組み立て工場への部品供給のように企業内取引が存在しているものと考えられる」とし，
--   その取り扱いにおいて，企業調査票における売上額と，
--   事業所調査票の売上額の差額を企業内取引として把握した上で経済センサスの集計の企業集計表においては，
--   企業内取引を計上しない形で，事業所集計表においては企業内取引を計上する形で表象するという方針が掲げられている．
--   したがって，事業所を集計単位とする製造業においては，現行の産業連関表において，企業内取引は生産額に集計されている．
--   
--   SNAにおけるソフトウェア業及び情報処理・提供サービスなどの生産額を推計するには，
--   その売上高からOEM（相手先ブランド名製造）などによって重複する分の同業者間取引額及び同一企業間取引額を除外する必要がある。
--   産業連関表におけるそのそれらの産業に取り扱いに関しては，「平成23年（2011年）産業連関表 総合解説編」においてソフトウェア業，
--   情報処理・提供サービス ，広告 ，警備業，プラントエンジニアリング業及び鉱物探査以外のその他の対事業所サービス
--   はいずれも経済センサス-活動調査を資料として「同業者間取引及び同一企業間取引額を除外して生産額を求めた」との記述がある．
--   
--   この内，同一企業間取引額に相当するのが企業内取引とみなされるものであり，
--   上記の事業は全て経済センサスでは「サービス関連産業B」に関する調査票で調査されている．事業所調査票（サービス関連産業B）には，
--   「サービス関連産業Bの相手先別収入割合」という項目が存在し，ソフトウェア業及び， 情報利処理・提供サービスを除く事業に関しては，
--   調査項目の内「同一企業間取引」によって把握された同一企業内取引額を事業所の売上高から除外する処理が行われている．
--   ソフトウェ業及び，情報処理・提供サービス業においては，
--   同調査票における調査項目「特定のサービス業における同業者との契約割合」に当たる売上高を除外する処理が行われているものと考えられる．
--   また，「物品賃貸業（貸し自動車を除く．）」に関しても，特定サービス産業実態調査を利用して，
--   受注した業務の外部委託と考えられる同業者間取引額を差し引いたとの記述があるが，
--   経済センサスでは物品賃貸業に係る同業者間取引を把握できないことから，
--   代替として「サービス関連産業Bの相手先別収入割合」における「同一企業内取引」分を除外することとする．
--   
--   2021年経済センサス以降，サービス関連産業Bが企業調査票となった場合，
--   これらの処理の内企業内取引はそもそも調査票に現れなくなるため，処理が不必要となるが，
--   現行の「相手先収入割合」及び「同業者との契約割合」によって推計される額と同等のものとなるかに関しては，議論が必要である．
f企業内取引削除 :: MonadIO m => Year -> ConduitT IOCensusRow IOCensusRow m ()

-- | 事業所別生産物別売上高及び事業別売上高から企業内取引と同一企業間取引を削除する
--   
--   値のないものの事業分類に関しては取引の削除を行わない(平均値使うとか要修正)
--   
--   事業別売上高からは,生産物別売上高で引いた総額を引く
f企業内取引削除処理 :: Year -> IOCensusRow -> Val相手先別収入割合_サB -> Val同業者割合_サB -> Val事業別売上高 -> Val事業所別生産物別売上高 -> IO ()
f情報産業削除 :: Year -> IOCensusRow -> IORef Double -> Val同業者割合_サB -> Val事業所別生産物別売上高 -> IO ()
f物品賃貸業削除 :: Year -> IOCensusRow -> IORef Double -> Val相手先別収入割合_サB -> Val事業所別生産物別売上高 -> IO ()
fその他のサB削除 :: Year -> IOCensusRow -> IORef Double -> Val相手先別収入割合_サB -> Val事業所別生産物別売上高 -> IO ()

-- | 22区分及び細分類でソフトウェア業，情報処理・提供サービス業か判定
isDetail情報産業 :: Year -> Car -> Bool

-- | 細分類で物品賃貸業か判定
isDetail物品賃貸業 :: Year -> Car -> Bool

-- | 細分類で広告 ，警備業，プラントエンジニアリング業及び鉱物探査以外のその他の対事業所サービスかを判定
--   
--   プラントエンジニアリング,鉱物探査の区別は不可なので,他に分類されないその他の対事業所サービス全体で適用
isDetailその他のサB :: Year -> Car -> Bool

-- | <ul>
--   <li>① 企業調査票産業の企業の傘下に事業所調査票産業を主業とする事業所が存在するケース</li>
--   </ul>
--   
--   このケースでは，企業調査票産業を主業とする企業の傘下事業所である，事業所調査票事業所の売上額等の情報は，
--   事業所調査票で調査されており，且つその値は事業所調査票を元に集計が行われている．
--   したがって，企業調査票の値全てを集計すると，事業所調査票で集計されている部分に関して重複が発生する．
--   この重複を避けるために，企業調査票の集計単位を企業ではなく，
--   事業所調査票で把握されている部分を除いた部分を一つの事業所とみなした仮想事業所として集計を行う．
--   なお，このような処理が現行の推計において行われていることを示す資料を筆者は見つけることができなかったため， この試算は今後の課題としたい．
--   
--   <ul>
--   <li>② 事業所調査票産業の企業の傘下に企業調査票産業を主業とする事業所が存在する場合．
--   事業所調査票産業を主業とする企業の，企業調査票の値は，通常集計には用いられないが，
--   この企業の傘下事業所に企業調査票産業を主業とする事業所が存在した場合，その事業所の売上高等の値は，
--   事業所調査票では調査されていない．したがって，この企業に関して事業所調査票のみを集計に用いた場合，
--   その企業傘下の企業調査票産業を主業とする事業所の値が集計から欠損することとなる．
--   これを避けるため，この企業傘下の事業所調査票産業を主業とする事業所の値を除いた部分を仮想事業所として集計に加える必要がある．
--   この点に関して問題となるのは，特にサービス関連産業Bが企業調査票産業となることで，どの程度影響がでるかであるが，
--   この点に関しても今後の試算による課題としたい．</li>
--   </ul>
f企業調査票処理 :: () => a

-- | 県 1-47
type PrefInt = Int

-- | 22区分の事業 1 - 22
type BusiInt = Int

-- | 産業細分類 1- 1617 余裕もたせて2000
type DetaInt = Int

-- | 県別22区分別産業細分類別のに対する比率のMap
type SubRateArray = IOArray (PrefInt, BusiInt, DetaInt) Double

-- | からの副業比率
empSubRateArray :: IO SubRateArray

-- | 非副業困難部門
--   
--   これでループを回すことで実質的に副業困難部門を抜いていることと同じにする.
--   
--   今は副業困難部門なし(要修正)
canBeSub :: [Int]

-- | 地域コードから県の番号に変換する関数
area2Int :: Text -> PrefInt

-- | 事業分類からBusiIntに変換する関数
busi2Int :: IndustryBusiness -> BusiInt

-- | IntからBusinessに変換する関数
int2Busi :: BusiInt -> Industry

-- | 細分類からDetaIot への変換
deta2Int :: Industry -> DetaInt

-- | DetaIot から への変換
int2Deta :: DetaInt -> Industry

-- | これまでに行われた処理を経て，各事業所の22区分の事業別売上（収入）金額及び， 主業に関する事業別商品別産出額が把握されたこととなる．
--   
--   しかし，22区分の主業以外の事業，即ち副業の内訳（主生産物及び副生産物）に関する詳細は把握されていない．
--   実際の各事業所の副業の内訳は経済センサスの調査結果から把握されないため，
--   ここでは，特定の事業所の副業に関して，その副業を主業とする事業所のデータを基に副業の値を按分することとする． 副業の分解の手法に関しては，
--   「平成23年（2011年）産業連関表 第13回 産業連関技術会議 配布資料（１）
--   経済センサス-活動調査のデータを利用した国内生産額の推計について 経済センサスから得られる副業データをIO部門に分解する方法案及び留意点 Ⅰ
--   基本的な計算方法」 において，以下のように説明されている．
--   
--   組替集計から得られる主業ベースの部門別売上高Aを用いて部門別の比率Bを作る，
--   この比率を，ひな形・統合分類ベースの総額しか分からない副業の売上高Cに乗じて，部門別の副業推計値Dを計算する． 留意点
--   
--   ① 地域表作成の観点も踏まえ，可能な範囲で都道府県別に計算し，その積み上げをもって全国値とする．
--   
--   ② 副業として行えないことが明白な部門については，比率計算から除外する．
--   
--   同資料から引用 一部筆者編集
--   
--   この「副業として行えないことが明白な部門」に関しては， 同資料中 「参考資料１
--   CT推計における経済センサスデータの利用予定（現時点での見込み．今後の変更有）」において，
--   基本分類ごとにそれが，「他産業を主業とする事業所が，副業として行うことが困難」か否かが一覧表の形で掲載されており，
--   獣医業，下水道，公共放送などが，副業困難部門として設定されている．
--   ただし，当該資料は，表題の通り確定前の見込みであり，実際の設定は異なっているものと考えられる． 実際，同会における議事概要では，
--   
--   <pre>
--   例えば、「トラック・バス・その他の自動車」について、副業困難部門とされていないが、
--   製造業以外の事業所で「トラック・バス・その他の自動車」の生産が可能ということか。
--   特に製造業については、本日の資料で示されたもののほかにも、副業困難部門があると考えられる。
--   
--   →  産業格付については、一次統計においても難しい課題である。
--   例えば、大規模に電気製品の生産・販売を行っている企業について、産業格付上、商業とされた場合、
--   企業活動の基本になっている製造業の活動は副業なのかという問題もある。そういった意味で、主業・副業の区分は、
--   様々な課題をはらんでいる。
--   →副業困難部門については、本日の御指摘を踏まえて、定義も含め、改めて整理させて頂く。
--   
--   同資料，pp．3より引用
--   </pre>
--   
--   といった議論が掲載されており，実際の推計時には大きく変更されていると考えられるが，
--   筆者の探す限りではこの点に関する公表資料は存在しないものと思われる． 基本的な推計手法は，先にみたように，県ごとに，副業別の総売上高に，
--   事業所産業別・調査品目別売上高の比率を掛けることで，副業の分解がなされるが， 同資料
--   「Ⅲその他の留意点」では，22区分の内，CT推計に経済センサスが用いられていない部門に関しては，
--   副業データの分解作業は行わないとしている．本稿では，これらの部門に関しても，経済センサスの値を用いて， 副業の分解を行うよう設計する．
--   
--   現段階では,副業困難部門の設定は行っていない(要修正)
f副業の分解 :: MonadIO m => SubRateArray -> ConduitT IOCensusRow IOCensusRow m ()

-- | 地域コードがない場合,新潟(15)の割合を使う(地域コードがないことはほぼないはず)
--   
--   事業別売上高がない場合は何もしない
f副業の分解処理 :: SubRateArray -> IOCensusRow -> Val地域コード -> Val事業別売上高 -> Val事業所別生産物別売上高 -> Val産業格付 -> IO ()

-- | 主業分も分解しないように主業を事業別売上高から削除する
--   
--   事業所別生産物別売上高がない場合は主業分も入れる
deleteMain :: Val産業格付 -> Val事業所別生産物別売上高 -> Cars事業別売上高 -> Cars事業別売上高
f副業比率作成 :: MonadIO m => SubRateArray -> ConduitT IOCensusRow Void m SubRateArray
f副業比率作成処理 :: SubRateArray -> Val産業格付 -> Val地域コード -> Val事業所別生産物別売上高 -> IO ()

-- | 本稿の主題の一つが，現行のセンサスの値を用いて，どの程度細かい部門のV表が推計できるかという点に関するものであるが，
--   同資料において，「細品目の構成についてCTの構成過程で変動する可能性があること」，
--   「副業が困難か否かについて，基本分類ごとにしか判断していないこと」から，
--   「副業データの分解は，基本分類の単位で行う」ものとしている．従って，現行のセンサスの組替集計の範囲では，
--   基本分類がV表（S表）を構成可能な最小の部門分類であるといえる．しかし，この２点に関しては，事前にそれぞれを定義することで，
--   解決できることから，原理的にはより細かい部門での推計が可能であることも示唆されている．
--   
--   県別に集計することに関して，同資料 「Ⅱ 比較データの作成」では，
--   「県ごとに計算した結果を積み上げて全国値にすることとしているが，県ごとの特徴が，
--   どの程度影響を及ぼしているかについて，現時点で検証することはできない」とある．
--   
--   この現時点というのは，平成28年経済センサス集計前という意味であろうから現在においては，
--   既に県別の特徴が検証されているものと思われるが，その結果に関する資料は見つけることができなかった．
--   いずれにせよ，このように集計単位をある程度の同質性を仮定して小さくすることは集計上有用であると思われ，
--   地域ごとに産業は異なる特徴を持つというのは案に産業技術仮定を否定していることとなる．その観点からすると，
--   一点現行の推計方法には不合理な点が見受けられる．それは，V表の推計に当たって組替集計を経由して，
--   一度集計されたものを編纂するという形をとっている点である．現在では，経済センサスの個票レベルの情報を
--   一度事業所産業別事業別売上額及び，事業所産業別調査品目売上額の形で集計し，その比率を用いてV表を作成している．
--   これはいうなれば同一の産業に属する商品は同一の技術構造を持つという商品技術仮定を用いていることを意味するが，
--   先の地域区分によって産業技術仮定を否定したのと同様に，商品技術仮定を置かないような推計手法を取り入れる態度の方が
--   一貫性があるといえる．現在このような形をとっているのは，経済センサスの集計を独立行政法人 統計センターが請け負い，
--   組替集計を用いてV表の推計を総務省が行うという体制によるものであると考えられるが，経済センサスから一貫して，
--   V表を推計し，事業所毎の特性によって一定の区分をつけた上で，副業の分解等を行うことで，
--   商品技術仮定を置かないV表の推計が可能であると思われる．本稿では，その実際の試算を行わないが， 今後の研究課題として，残しておきたい．
f副業把握改善版 :: () => a

-- | 現行のV表の作成においては，V表の列和， 即ち商品別総産出額（Control Total）を主に経済センサスを含む各種基礎調査から
--   推計された取引基本表の行部門をV表列部門に組み替えた値を固定値として用いており，
--   センサスから得られた各種データを利用してCTを各産業に案分する処理を行っている．
--   
--   本稿では，可能な限り経済センサスデータからCTを直接取得することを試みるが，
--   実際のV表の算出におけるCTに経済センサスの値が用いられている部門は限定的である． 第13回産業連関技術会議資料
--   によれば平成23年産業連関表取引基本表では，平成17年以前において工業統計，
--   商業統計又はサービス業基本統計をCT推計において利用していた製造業，商業，サービス業などの分野に関しては，
--   経済センサスデータを基礎資料として利用している．一方それ以外の分野のうち農林漁業は，
--   個人経営の農林漁家が経済センサスの調査対象となっていないため，その他の分野に関しては「経済センサス以外の情報で推計する方が，
--   より正確かつ効率的である」ため用いていないとしている
--   
--   以降，平成23年産業連関表においてCT推計にセンサスを用いた部門の推計手法及びその問題点に関して論じたのち，
--   用いていない部門に関して経済センサスからCTを推計した場合どのようなものになるか検討する．
--   
--   _5.2.1 経済センサスをCT推計に用いている部門_
--   
--   サービス部門
--   
--   平成23年IOでは，サービス部門のCT推計に経済センサスの値を用いているが，
--   経済センサスにおけるサービス部門には未把握部分が大きいという問題がある． 第13回産業連関技術会議資料
--   によればサービス業の売上等未把握率は「情報通信業の内，40 インターネット付随サービス業」
--   において33.3%，「宿泊業，飲食サービス業」において26%，「 サービス業（他に分類されないもの）」において20%に上り，
--   「製造業」の12.80％，「農業，林業」の16.30%，「卸売業，小売業」における17．50%などサービス業と比較すれば高い値であるといえる．
--   
--   第13回産業連関技術会議資料 では，サービス部門のCT推計において，まず事業所を，
--   主業，副業ごとに「売上高及び重要者数ともに把握された事業所（売上把握分）」
--   「従業者数は把握されたが，売上高が把握されなかった事業所（売上未把握分）」の２区分で分割し，
--   そのうち，主業に関して把握分・未把握分双方の売り上げを以下のように推計している．
--   
--   産業連関表の部門分類をCIO,部門分類の内サービス産業に該当する部分をCIOS⊂ CIO,経済センサスの産業分類をCCとして， ある部門
--   &lt;math&gt;と対応付けられる &lt;math&gt;とすると， ω の主業相当の把握及び未把握部分の生産額
--   &lt;math&gt; は，以下の式で求められる．
--   
--   &lt;math&gt;
--   
--   where
--   
--   &lt;math&gt;
--   
--   &lt;math&gt;
--   
--   なお，各変数は以下に従う．
--   
--   <ul>
--   <li>_SPP[ω]（Sales per person）_</li>
--   </ul>
--   
--   ：ω∈CIOS 産業の一人あたり売上高
--   
--   <ul>
--   <li>_sales[ω]_</li>
--   </ul>
--   
--   : ω∈CIOS の売上高．IOの部門分類に，経済センサス調査結果を組み替えた組替集計（非公表）より取得．
--   
--   <ul>
--   <li>_invEmp[ω](Number of involved employment)_</li>
--   </ul>
--   
--   : 産業ω∈CIOSの従業者数のうち，派遣，出向等で外部に送り出している従業員を除いた従業員数（事業従業員数）．( ω in CIOS
--   )に関しては組替集計より取得．
--   
--   <ul>
--   <li>activetyRate[ω']</li>
--   </ul>
--   
--   :アクティビティ率; 事業所の従業者の内，その事業所の産業格付け &lt;math&gt;に従事している人数の割合
--   
--   <ul>
--   <li>compInvEmp[ω‘] (Complete Number of involved employments)</li>
--   </ul>
--   
--   :ω ∈ CIOSと対応付けられた( ω' in CC )に産業格付けされ売上未把握分を含めた事業所の事業従業員数．経済センサス第４
--   表より取得．
--   
--   <ul>
--   <li>_totalEmp[ω](Total number of employments)_</li>
--   </ul>
--   
--   :産業 &lt;math&gt; の総従業者数．経済センサス第２-1-1表 より取得．
--   
--   <ul>
--   <li>_compTotalEmp[ω’] (Complete Total Number of Employments)_</li>
--   </ul>
--   
--   :
--   &lt;math&gt;と対応付けられたω∈CCに産業格付けされた売上未把握分を含めない事業所の従業員数．経済センサス第４表または経済センサス第２表
--   より取得(第２表は産業細分類まで把握可能)
--   
--   この時 CT_{main}を変形すると，項が打ち消しあい，
--   
--   &lt;math&gt;
--   
--   が得られる．
--   
--   製造部門・商業部門 製造部門及び，商業部門におけるCT推計では，
--   
--   <pre>
--   ①  従前からも，全数調査（工業統計調査，商業統計調査）のデータを使用して，把握された範囲で推計していること
--   ② 今回の経済センサスにおいても未把握分が比較的小さいこと
--   ③生産動態統計調査など，比較可能なデータがあること
--   産業連関技術会議資料 より抜粋（一部筆者編集）
--   </pre>
--   
--   の3点から，サービス業で行われている従業者数による補完を行わず，
--   生産動態統計調査，商業統計調査などのデータによる調整のもと売上高が把握された事業所の範囲で推計を行う方針であると説明されている．従って，平成23年産業連関表のCTには、「製造業」における12.80%，「卸売業，小売業」における17.50%の売上高未把握分は基本的には含まれていない．
--   野村.他（2017）では，商業部門におけるこの未把握分の影響として平成23年産業連関表における商業マージン額の過小評価額が
--   凡そ7.1-12.3兆円に上ると試算しており，未把握分の補定作業を重要な検討課題として掲げている．
--   なお，同論文においては，未把握分事業所の従業者数を最大ケースで99人以下，最小ケースで29人以下として，
--   業種別・従業者規模別の１事業所あたり商品販売額を乗ずることによって未把握分マージン額の試算を行っている．
--   
--   
--   前述のサービス業においては，そのCT_mainは経済センサスにおける売上高の和であるが，製造部門及び，商業部門におけるCTの計算はいくつかの点でサービス業とは異なる．
--   まず，製造業及び，商業において産出額を推計するには，在庫の算出も含めて試算する必要がある．この点に関しては，前述の在庫品評価調整の節にて論じている．
--   次にSNAにおいて商業における算出額は，商品の販売額ではなく，商業マージンを対象としており，「商業マージン=商品販売額-商品仕入れ額」として定義される．この点に関しては，
--   「4.6章 マージン推計」において詳しく扱っている．
--   
--   経済センサスをCT推計に用いていない部門
--   製造業，サービス業，商業以外の部門に関しては，経済センサスをCT推計に用いていないためその推計手法が公には存在していない．その為，本稿では，サービス業と同様の従業員数による売り上げの補定を行ったうえで，その売上の総和をCTとして扱う．
--   調査対象外産業の扱い 以下の部門に関しては，センサスで売り上げを得ることができない．
--   
--   <pre>
--   ・農業，林業，漁業の個人経営事業所の売り上げ
--   ・家事サービス業の事業所の売り上げ
--   ・国及び地方公共団体の売り上げ
--   ・自家発電などの自家生産・自己消費
--   </pre>
--   
--   これらの部門に関しては，本稿では取り扱わず，それぞれの部門の自交点には０が計上される．
--   
--   fCT推計では,これらの乗数を求める
--   
--   また,使用しない企業のデータや,団体のデータ,ネットワーク産業の事業所のデータを抜かす
fCT乗数推計 :: MonadIO m => IORef ToMakeCTMultiplier -> ConduitT IOCensusRow Void m CTMultiplier
fCT乗数推計処理 :: IORef ToMakeCTMultiplier -> Val総売上 -> Val雇用情報 -> Val産業格付 -> Val調査票の種類 -> IO ()

-- | EN か ES か Wrongか
data ENESPair
EN :: ENESPair
ES :: ENESPair
Wrong :: ENESPair

-- | ネットワーク産業かつ企業調査票または非ネットワークかつ事業所調査票の判定
correctPair :: E調査票の種類 -> ENESPair

-- | 産業小分類 0 - 603
type SmallInt = Int

-- | 中分類からMidIit への変換
small2Int :: Industry -> SmallInt

-- | SmallInt から中分類への変換
int2Small :: SmallInt -> Industry

-- | 産業別に乗じる補定の乗数
type CTMultiplier = Map SmallInt Double

-- | 売上未把握分を含めない産業の従業者数
type CompTotalEmp = Double

-- | 売上未把握分を含めた産業の従業者数
type TotalEmp = Double
type ToMakeCTMultiplier = Map SmallInt (TotalEmp, CompTotalEmp)
makeCTMultiplier :: ToMakeCTMultiplier -> CTMultiplier
type IndustryInt = Int
type CommodityInt = Int

-- | 産業別生産物別の産出額を記録したArray
--   
--   行が産業， 列が生産物
type IndCommArray = IOArray (IndustryInt, CommodityInt) Double
empICASmallDetail :: IO IndCommArray

-- | Tableをそのまま出力する
writeVTable :: FilePath -> IndCommArray -> IO ()
type IndustrySize = Int
readTable :: FilePath -> (IndustrySize, IndustrySize) -> IO IndCommArray

-- | V表の作成に利用される経済センサス組替集計は， 「事業所産業別調査品目別売上額」及び，「事業所産業別・事業別売上額」である．
--   
--   本章で定義してきた諸々の処理を組み合わせることで， センサス分類における事業所別商品別産出額及び産業別商品別産出額を求めることが可能となる．
--   基本的には，価格変換，在庫品評価調整，事業所別生産物別生産量把握，企業の事業所への分割，
--   マージン推計の順に処理を行い，副業の分解をすることで，事業所別商品産出額が求められ，
--   事業所別商品産出額を産業別に集計することで，産業別商品別産出額が求められる．
f産業別生産物別産出額 :: MonadIO m => CTMultiplier -> IndCommArray -> ConduitT IOCensusRow Void m IndCommArray
f産業別生産物別産出額処理 :: IndCommArray -> Val事業所別生産物別売上高 -> Val産業格付 -> IO ()

-- | 産業格付けNullの場合 格付け不明へ振替
--   
--   部門内格付け不明及び,管理補助的業務は,全て近隣部門に比例按分する(どのように処理しているのか不明.)
--   
--   くず・廃物 7466 00 製造工程からでたくず・廃物
--   
--   に関して 製造業の段階で発生部門に振り分け
--   
--   
--   また，屑・副産物に関しては，取引基本表における屑・副産物発生部門をV表産業分類へ組替え，その値をセンサスから求められた産業×商品表の当該交点に計上している．
--   
--   本稿ではV表の作成は大まかに，以下①~⑤の作業を想定している．
--   なお，現行のV表の作成においては，屑，副産物の推計において取引基本表を経由しており，経済センサス以外の各種基礎統計値もその推計に利用している．
--   本研究は，飽くまで同一データを利用することで推計手法毎の差異を分析することを目的としており，センサスデータから直接的に値を構成するという点で，
--   推計手法が現行のものとは異なる．
--   幾つかの補足できない概念等もそのまま未把握として扱い，大きな項目については他の統計を用いて簡易的に推計するなど，簡易的作成手法を採用する．
--   
--   細分類 -&gt; 小分類への振替
f細分類振替 :: IOArray (SmallInt, DetaInt) Double -> IO (IOArray (SmallInt, SmallInt) Double)

-- | f管理補助的業務振替, f格付け不能振替に使用
--   
--   比例按分するが, 配分先の値が0の場合は等分する
--   
--   振替先が全て0だった場合等分すると,ほぼ全てのセルに値が入ってしまう.
--   
--   振替先が全て0だった場合には,その商品/産業按分先のの自交点に飛ばす.
--   
--   経済センサスにおける分類では, V表の分類における｢111 分類不明｣のように分類全体に おける格付け不能の他に,
--   ｢農林水産業内格付け不能｣, ｢耕種農業内格付け不能｣のように幾つかの段階別に格付け不能が存在する.
--   これらの格付け不能の段階が,V表の分類よりも細かい場合には,対応するV表の分類にその値を計上することが可能であるが,
--   ｢農林水産業内格付け不能｣などは, V表の部門に振り分ける以前に, 経済センサスにおける他の部門に事前に振り分ける必要性がある 本稿では,
--   それらの格付け不能の商品及び産業に対して,｢格付け不能の振替先と想定される候補｣(｢農林水産業内格付け不能｣に対して,
--   ｢耕種農業｣,｢畜産｣,｢農業サービス｣,｢林業｣,｢漁業｣など)を選定し,それらの部門に計上されている値に比例して按分している. しかし,
--   ｢格付け不能の振替先と想定される候補｣の振り分け前の値が全て0であった場合は,
--   それらのセルに按分はせず,その振り分け先の産業,商品の自交点に等分して計上している.
--   この処理によって,幾つかの部門の自交点の値が実際の値よりも過剰になることが予想される点に留意されたい.
--   自交点に振り分ける際にも,本来であれば等分を行うよりも,比例按分を行う方がより正確なものとなることが予想されるが,
--   自交点の値が0であった場合に別の値を参照する必要があり,その参照値が0で会った場合にと切りがなくなるため,このような処理となった.
f近隣部門振替 :: IOArray (SmallInt, SmallInt) Double -> Map Industry [Industry] -> IO ()

-- | 管理補助的業務の振替
--   
--   管理補助的業務を近隣部門に比例按分する.
f管理補助的業務振替 :: IOArray (SmallInt, SmallInt) Double -> IO (IOArray (SmallInt, SmallInt) Double)

-- | 格付け不能の振替
f格付け不能振替 :: IOArray (SmallInt, SmallInt) Double -> IO (IOArray (SmallInt, SmallInt) Double)
type VArray = IOArray (Int, Int) Double

-- | V表分類 0 - 124
type VInt = Int

-- | V表分類からVIntへの変換
v2Int :: IndustryV -> VInt

-- | VInt からV表分類への変換
int2v :: VInt -> IndustryV

-- | センサス分類からIO分類への変換
--   
--   格付け不能と管理補助的業務の列,行はここで消える.
--   
--   V表分類の方が細かい項目,分類の合わない項目に関しては,(暫定的に)等分
fV表変換 :: IOArray (SmallInt, SmallInt) Double -> IO (IOArray (VInt, VInt) Double)
instance GHC.Show.Show VTable.Compilation.ENESPair
instance GHC.Classes.Eq VTable.Compilation.ENESPair
instance GHC.Show.Show VTable.Compilation.RentalOrLease
instance GHC.Classes.Eq VTable.Compilation.RentalOrLease
